{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main/webapp/dev/js/common/const.js","webpack:///./src/main/webapp/dev/js/common/helper.js","webpack:///./src/main/webapp/dev/js/common/sortBy.js","webpack:///./src/main/webapp/dev/js/common/crypto.js","webpack:///./src/main/webapp/dev/js/common/scrollTo.js","webpack:///./src/main/webapp/dev/js/common/onStart.js","webpack:///./src/main/webapp/dev/js/common/statusMessage.js","webpack:///./src/main/webapp/dev/js/common/bootboxWrapper.js","webpack:///./src/main/webapp/dev/js/common/instructor.js","webpack:///./src/main/webapp/dev/js/common/countRemainingCharactersOnInput.js","webpack:///./src/main/webapp/dev/js/common/timezone.js","webpack:///./src/main/webapp/dev/js/common/ui.js","webpack:///./src/main/webapp/dev/js/common/richTextEditor.js","webpack:///./src/main/webapp/dev/js/common/datepicker.js","webpack:///./src/main/webapp/dev/js/common/instructorFeedbacks.js","webpack:///./src/main/webapp/dev/js/common/visibilityOptions.js","webpack:///./src/main/webapp/dev/js/common/questionRubric.js","webpack:///./src/main/webapp/dev/js/common/questionRank.js","webpack:///./src/main/webapp/dev/js/common/questionNumScale.js","webpack:///./src/main/webapp/dev/js/common/questionMsq.js","webpack:///./src/main/webapp/dev/js/common/questionMcq.js","webpack:///./src/main/webapp/dev/js/common/questionContrib.js","webpack:///./src/main/webapp/dev/js/common/questionConstSum.js","webpack:///./src/main/webapp/dev/js/common/feedbackPath.js","webpack:///./src/main/webapp/dev/js/main/instructorFeedbackEdit.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","BootstrapContextualColors","SUCCESS","INFO","WARNING","DANGER","PRIMARY","isValidType","type","DEFAULT","Const","ModalDialog","UNREGISTERED_STUDENT","header","text","StatusMessages","INSTRUCTOR_DETAILS_LENGTH_INVALID","ParamsNames","SESSION_TOKEN","COPIED_FEEDBACK_SESSION_NAME","COURSE_ID","COURSE_NAME","COURSE_TIME_ZONE","FEEDBACK_SESSION_NAME","FEEDBACK_SESSION_STARTDATE","FEEDBACK_SESSION_STARTTIME","FEEDBACK_SESSION_VISIBLEDATE","FEEDBACK_SESSION_VISIBLETIME","FEEDBACK_SESSION_PUBLISHDATE","FEEDBACK_SESSION_PUBLISHTIME","FEEDBACK_SESSION_TIMEZONE","FEEDBACK_SESSION_SESSIONVISIBLEBUTTON","FEEDBACK_SESSION_RESULTSVISIBLEBUTTON","FEEDBACK_SESSION_ENABLE_EDIT","FEEDBACK_QUESTION_TEXT","FEEDBACK_QUESTION_DESCRIPTION","FEEDBACK_QUESTION_TYPE","FEEDBACK_QUESTION_NUMBEROFCHOICECREATED","FEEDBACK_QUESTION_MCQCHOICE","FEEDBACK_QUESTION_MCQ_WEIGHT","FEEDBACK_QUESTION_MSQCHOICE","FEEDBACK_QUESTION_CONSTSUMOPTION","FEEDBACK_QUESTION_CONSTSUMTORECIPIENTS","FEEDBACK_QUESTION_CONSTSUMPOINTS","FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHOPTION","FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHRECIPIENT","FEEDBACK_QUESTION_CONSTSUMALLUNEVENDISTRIBUTION","FEEDBACK_QUESTION_CONSTSUMSOMEUNEVENDISTRIBUTION","FEEDBACK_QUESTION_CONSTSUMNOUNEVENDISTRIBUTION","FEEDBACK_QUESTION_RECIPIENTTYPE","FEEDBACK_QUESTION_NUMBEROFENTITIESTYPE","FEEDBACK_QUESTION_EDITTEXT","FEEDBACK_QUESTION_DISCARDCHANGES","FEEDBACK_QUESTION_EDITTYPE","FEEDBACK_QUESTION_SAVECHANGESTEXT","FEEDBACK_QUESTION_SHOWRESPONSESTO","FEEDBACK_QUESTION_SHOWGIVERTO","FEEDBACK_QUESTION_SHOWRECIPIENTTO","FEEDBACK_QUESTION_NUMSCALE_MIN","FEEDBACK_QUESTION_NUMSCALE_MAX","FEEDBACK_QUESTION_NUMSCALE_STEP","FEEDBACK_QUESTION_RANKOPTION","FEEDBACK_QUESTION_RANKTORECIPIENTS","FEEDBACK_QUESTION_NUMBER","FEEDBACK_QUESTION_NUMBER_STATIC","FEEDBACK_QUESTION_RANK_IS_MIN_OPTIONS_TO_BE_RANKED_ENABLED","FEEDBACK_QUESTION_RANK_IS_MAX_OPTIONS_TO_BE_RANKED_ENABLED","FEEDBACK_QUESTION_RANK_MIN_OPTIONS_TO_BE_RANKED","FEEDBACK_QUESTION_RANK_MAX_OPTIONS_TO_BE_RANKED","FEEDBACK_QUESTION_RANK_IS_MIN_RECIPIENTS_TO_BE_RANKED_ENABLED","FEEDBACK_QUESTION_RANK_IS_MAX_RECIPIENTS_TO_BE_RANKED_ENABLED","FEEDBACK_QUESTION_RANK_MIN_RECIPIENTS_TO_BE_RANKED","FEEDBACK_QUESTION_RANK_MAX_RECIPIENTS_TO_BE_RANKED","isDate","date","Number","isNaN","Date","parse","isNumber","num","isWithinView","element","rect","$","getBoundingClientRect","$viewport","window","top","left","right","width","bottom","height","extractIdSuffixFromId","_ref","arguments","length","undefined","idPrefix","id","RegExp","exec","_helper","isDefined","varToCheck","getPointValue","ditchZero","s0","indexOf","replace","parseFloat","Comparators","x","y","x0","y0","a","b","a0","b0","sortNum","sortBase","columnType","sortDate","Extractors","$tableCell","find","attr","data","textExtractor","TableButtonHelpers","$button","parents","idx","parent","children","index","$table","removeClass","addClass","this","clearAllSortStates","getEnclosingTable","toggleSort","comparatorStringOrNull","extractorStringOrNull","shouldSortAscending","hasClass","colIdx","comparatorOrNull","extractorOrNull","store","$rowList","cells","extractor","getDefaultExtractor","textToCompare","trim","push","comparator","getDefaultComparator","sort","compareResult","toUpperCase","$tbody","size","j","appendChild","sortTable","getColumnPositionOfButton","setButtonToSortedAscending","setButtonToSortedDescending","_const","getCookie","cookieNameToFind","cookies","document","cookie","split","map","cookieName","cookieValue","makeCsrfTokenParam","updateCsrfTokenInInputFields","updatedToken","val","scrollToPosition","scrollPos","duration","scrollTop","animate","scrollToElement","opts","defaultOptions","options","offset","isViewType","navbar","navbarHeight","offsetHeight","footer","footerHeight","isElementTallerThanWindow","innerHeight","isFromAbove","scrollY","offsetTop","isAlignedToTop","scrollToTop","_crypto","_sortBy","String","includes","search","startParam","start","on","e","currentTarget","$tooltips","tooltip","html","container","DocumentTouch","each","submit","_scrollTo","DIV_STATUS_MESSAGE","buildNewStatusMessageDiv","message","bootstrapContextualColor","$newStatusMessageDivContent","contextualColor","populateStatusMessageDiv","$statusMessageDivToUser","$statusMessageDivContent","empty","append","appendNewStatusMessage","$statusMessagesDivToUser","show","appendStatusMessage","messages","$statusMessagesToUser","clearStatusMessages","hide","setStatusMessage","setStatusMessageToForm","form","$copyOfStatusMessagesToUser","clone","remove","prepend","DEFAULT_OK_TEXT","DEFAULT_CANCEL_TEXT","DEFAULT_YES_TEXT","DEFAULT_NO_TEXT","applyStyleToModal","modal","showModalAlert","titleText","messageText","okButtonText","bootbox","dialog","title","buttons","okay","label","className","showModalConfirmation","okCallback","cancelCallback","cancelButtonText","onHiddenCallback","onEscape","cancel","callback","ok","showModalConfirmationWithCancel","yesButtonCallback","noButtonCallback","cancelButtonCallback","yesButtonText","noButtonText","yes","no","_bootboxWrapper","_statusMessage","_countRemainingCharactersOnInput","_timezone","updateHoverShowPictureEvents","actualLink","resolvedLink","off","popover","trigger","placement","content","mouseenter","siblings","mouseleave","setTimeout","obj","bindStudentPhotoLink","elements","event","cancelBubble","stopPropagation","$loadingImage","load","$imageCell","closest","bindStudentPhotoHoverLink","src","outerHTML","loadProfilePictureForHoverEvent","sendRemindersToStudents","urlLink","$statusMessage","ajax","url","beforeSend","css","error","success","statusToUser","attachEventToDeleteStudentLink","preventDefault","$clickedLink","location","attachEventToDeleteAllStudentLink","attachEventToSendInviteLink","bindDeleteButtons","courseId","bindPublishButtons","bindRemindButtons","bindUnpublishButtons","executeCopyCommand","execCommand","initializeTimeZoneOptions","$selectElement","moment","TimeZone","prepareTimeZoneInput","existingTimeZone","updateTimeZone","autoDetectAndUpdateTimeZone","prepareInstructorPages","resendPublishedEmailToStudents","selectElementContents","elementNode","body","range","createRange","getSelection","selection","removeAllRanges","selectNodeContents","addRange","selectNode","createTextRange","moveToElementText","select","setupFsCopyModal","button","relatedTarget","actionlink","courseid","fsname","appUrl","origin","currentPage","href","substring","encodeURIComponent","prop","countRemainingCharactersOnInput","$this","$copyModalStatusMessage","serialize","errorMessage","redirectUrl","computeRemainingCharactersCount","$textInput","remainingCharactersElementId","maxLength","currentLength","textInputId","remainingCharactersTemplate","insertAfter","insertRemainingCharactersCount","isSupportedByJava","EST","GMT+0","GMT-0","HST","MST","ROC","addLeadingZeroes","tz","names","filter","forEach","createElement","zone","utcOffset","hr","Math","floor","abs","min","displayUtcOffset","detectedTimeZone","guess","timeZone","setChevronToUp","chevronContainer","setChevronToDown","showSingleCollapse","heading","glyphIcon","collapse","hideSingleCollapse","addLoadingIndicator","loadingText","disallowNonNumericEntries","decimalPointAllowed","negativeAllowed","which","ctrlKey","shiftKey","highlightSearchResult","searchKeyId","sectionToHighlight","searchKey","searchKeyList","charAt","highlight","removeLoadingIndicator","displayText","toggleAdditionalQuestionInfo","identifier","$questionButton","toggle","toggleChevron","clickedElement","$clickedElement","isChevronDown","$chevronContainer","clearQueue","toggleSingleCollapse","target","is","richTextEditorBuilder","getDefaultConfiguration","theme","fontsize_formats","font_formats","relative_urls","convert_urls","remove_linebreaks","plugins","toolbar1","toolbar2","init_instance_callback","initEditor","selector","tinymce","init","extend","setPlaceholderText","editor","getContent","DOM","bodyElement","initEditorCallback","destroyEditor","currentEditor","destroy","triggerDatepickerOnClick","datepickerDivs","datepickerDiv","datepicker","getMaxDateForVisibleDate","startDate","publishDate","getMinDateForPublishDate","visibleDate","prepareDatepickers","today","yesterday","setDate","getDate","tomorrow","defaultStartDate","dateFormat","showOtherMonths","gotoCurrent","defaultDate","onSelect","newVisibleDate","newPublishDate","maxDate","onClose","$startTime","$visibleTime","parseInt","showUncommonPanelsForSessionResponsesVisible","$sessionResponsesVisiblePanel","after","showUncommonPanelsForSendEmails","$sendEmailsForPanel","toggleDisabledAndStoreLast","bool","bindUncommonSettingsEvents","click","formatResponsesVisibilityGroup","$responsesVisibilityBtnGroup","change","formatSessionVisibilityGroup","$sessionVisibilityBtnGroup","showUncommonPanelsIfNotInDefaultValues","updateUncommonSettingsInfo","ROW_RECIPIENT","ROW_GIVER_TEAM","ROW_RECIPIENT_TEAM","ROW_OTHER_STUDENTS","ROW_INSTRUCTORS","NEW_QUESTION","allowRecipientToSee","checkboxClass","$containingForm","allowInstructorToSee","tallyCheckboxes","questionNum","checkboxTypes",".answerCheckbox",".giverCheckbox",".recipientCheckbox","checkboxType","checked","toString","disableRow","row","$row","checkbox","enableAllRows","enableRow","previousFormDataMap","updateVisibilityCheckboxesDiv","Error","disableRowsAccordingToGiver","disableRowsAccordingToRecipient","giverType","recipientType","disableRowsForSpecificGiverRecipientCombinations","recipientCanSeeAnswerCheckbox","recipientTeamCanSeeAnswerCheckbox","fixCheckboxValuesForTeamContribQuestion","updateVisibilityMessageDiv","newQuestionNum","last","formData","$visibilityMessageDiv","visibilityMessage","htmlString","formatVisibilityMessageDivHtml","showAjaxErrorMessage","attachVisibilityCheckboxEvent","attachVisibilityDropdownEvent","$clickedElem","selectedOption","$visibilityDropdown","setVisibilityDropdownMenuText","$editTab","uncheckAllVisibilityOptionCheckboxes","allowRecipientsTeamToSee","allowGiversTeamToSee","checkCorrespondingCheckboxes","formatCheckBoxes","$editTabRows","getVisibilityMessage","clickedButton","matchVisibilityOptionToFeedbackPath","selectedFeedbackPathOption","showVisibilityCheckboxesIfCustomOptionSelected","$visibilityCheckboxes","_ui","swapRubricCol","firstColIndex","secondColIndex","numberOfRows","elemSelector","col","getRubricChoiceElem","getRubricWeightElem","getRubricDescElem","swapValues","$a","$b","temp","moveRubricColIfPossible","isMoveLeft","$swapCell","rubricCellSelector","prev","next","$form","disableCornerMoveRubricColumnButtons","$optionColumns","disableMoveLeftOfFirstCol","$leftmostCol","first","leftmostColIndex","disableMoveRightOfLastCol","$rightmostCol","rightmostColIndex","$secondlastCol","secondlastColIndex","enableMoveRightOfSecondLastCol","setRequiredAttributeToRubricWeights","$weightRow","isRequired","toggleAssignWeightsRow","$checkbox","$weightsRow","$weightsRowFirstCell","addRubricCol","questionId","newColNumber","rubricHeaderFragment","lastTh","rubricWeightFragment","lastWeightCell","rows","rubricRowFragment","lastTd","optionsRow","$lastTd","$newColMoveLeftBtn","$newColMoveRightBtn","addRubricRow","numberOfCols","newRowNumber","rubricRowBodyFragments","cols","newRubricRow","$secondLastRow","bindAssignWeightsCheckboxes","bindMoveRubricColButtons","colNum","hasAssignedWeights","highlightRubricCol","$rubricCol","highlightRubricRow","$rubricRow","removeRubricCol","$thisCol","removeRubricRow","$thisRow","isRankOptionsQuestion","qnNumber","isMinOptionsToBeRankedEnabled","isMaxOptionsToBeRankedEnabled","getNumOfRankOptions","recipient","toLowerCase","MAX_SAFE_INTEGER","getMinOptionsToBeRankedBox","getMaxOptionsToBeRankedBox","getMinOptionsToBeRanked","getMaxOptionsToBeRanked","setMinOptionsToBeRanked","newVal","setMaxOptionsToBeRanked","adjustMinOptionsToBeRanked","upperLimit","currentVal","setUpperLimitForMinOptionsToBeRanked","adjustMaxOptionsToBeRanked","setUpperLimitForMaxOptionsToBeRanked","adjustMinMaxOptionsToBeRanked","toggleMinOptionsToBeRanked","toggleMaxOptionsToBeRanked","addRankOption","curNumberOfChoiceCreated","insertBefore","bindRankEvents","hideInvalidRankRecipientFeedbackPaths","qnNum","hideRankOptionTable","removeRankOption","showRankOptionTable","bindAutoFillEmptyRankOptionsChangeEvent","linkedInputId","linkedInput","roundToThreeDp","toFixed","updateNumScalePossibleValues","max","step","possibleValuesCount","largestValueInRange","$numScalePossibleValues","possibleValuesString","round","cur","isMaxSelectableChoicesEnabled","isMinSelectableChoicesEnabled","isGenerateOptionsEnabled","getNumOfMsqOptions","getMaxSelectableChoicesElement","getMaxSelectableChoicesValue","getMinSelectableChoicesElement","getTotalOptionsForSelectedGenerateOptionsType","category","adjustMaxSelectableChoices","setUpperLimitForMaxSelectableChoices","setMaxSelectableChoices","adjustMinSelectableChoices","getMinSelectableChoicesValue","setUpperLimitForMinSelectableChoices","setMinSelectableChoices","adjustMinMaxSelectableChoices","toggleMsqMaxSelectableChoices","toggleMsqMinSelectableChoices","changeMsqGenerateFor","addMsqOption","bindMsqEvents","removeMsqOption","toggleMsqGeneratedOptions","toggleMsqOtherOptionEnabled","setRequiredAttributeForMcqWeightCells","$weightColumn","$weightCells","$otherWeightCell","isOtherOptionEnabled","toggleVisibilityOfMcqOtherWeight","$mcqAssignWeightCheckbox","$mcqOtherWeightCell","toggleMcqHasAssignedWeights","$weightLabel","$otherEnabledCheckbox","changeMcqGenerateFor","toggleMcqOtherOptionEnabled","addMcqOption","$choiceColumn","choiceFragment","weightFragment","bindMcqHasAssignedWeightsCheckbox","bindMcqOtherOptionEnabled","removeMcqOption","$thisChoice","$thisWeight","toggleMcqGeneratedOptions","fixContribQnGiverRecipient","$giverType","$recipientType","$questionTable","not","setContribQnVisibilityFormat","$currentQuestionTable","visibilityOptionsRow","setDefaultContribQnVisibilityIfNeeded","eq","toggleConstSumOptionsRadioButton","isConstSumPointsTotalChecked","isConstSumPointsPerOptionChecked","isConstSumPointsPerRecipientChecked","addConstSumOption","bindConstSumOptionsRadioButtons","hideConstSumOptionTable","removeConstSumOption","showConstSumOptionTable","updateConstSumPointsValue","toggleConstSumDistributePointsOptions","constSumDistributePointsSelect","constSumDistributePointsOptions","changeConstSumDistributePointsFor","FeedbackPath","attachEvents","allDropdownOptions","attachEventsForAllOptions","commonOptions","attachEventsForCommonOptions","otherOption","attachEventsForOtherOption","clickedElem","containingForm","getContainingForm","setDropdownText","updateInputTags","hideOtherOption","showOtherOption","getDropdownText","elem","isCommonOptionSelected","_datepicker","_feedbackPath","_instructor","_instructorFeedbacks","_questionConstSum","_questionContrib","_questionMcq","_questionMsq","_questionNumScale","_questionRank","_questionRubric","_richTextEditor","_visibilityOptions","WARNING_DISCARD_CHANGES","CONFIRM_DISCARD_CHANGES","CONFIRM_DISCARD_NEW_QNS","WARNING_DELETE_QNS","CONFIRM_DELETE_QNS","WARNING_EDIT_DELETE_RESPONSES","CONFIRM_EDIT_DELETE_RESPONSES","FEEDBACK_QUESTION_TYPENAME_TEXT","FEEDBACK_QUESTION_TYPENAME_MCQ","FEEDBACK_QUESTION_TYPENAME_MSQ","FEEDBACK_QUESTION_TYPENAME_NUMSCALE","FEEDBACK_QUESTION_TYPENAME_CONSTSUM_OPTION","FEEDBACK_QUESTION_TYPENAME_CONSTSUM_RECIPIENT","FEEDBACK_QUESTION_TYPENAME_CONTRIB","FEEDBACK_QUESTION_TYPENAME_RUBRIC","FEEDBACK_QUESTION_TYPENAME_RANK_OPTION","FEEDBACK_QUESTION_TYPENAME_RANK_RECIPIENT","DISPLAY_FEEDBACK_QUESTION_COPY_INVALID","DISPLAY_FEEDBACK_QUESTION_NUMBEROFENTITIESINVALID","DISPLAY_FEEDBACK_QUESTION_TEXTINVALID","DISPLAY_FEEDBACK_QUESTION_NUMSCALE_OPTIONSINVALID","DISPLAY_FEEDBACK_QUESTION_NUMSCALE_INTERVALINVALID","DISPLAY_FEEDBACK_SESSION_VISIBLE_DATEINVALID","DISPLAY_FEEDBACK_SESSION_PUBLISH_DATEINVALID","questionsBeforeEdit","getCustomDateTimeFields","add","extractQuestionNumFromEditFormId","checkFeedbackQuestion","getQuestionNumFromEditForm","disableEditFS","inline","readonly","disableQuestion","enableEditFS","$customDateTimeFields","$sessionOpeningReminder","backupQuestion","enableQuestion","$currentQuestionForm","enableNewQuestion","$newQuestionTable","getQuestionNum","$elementInQuestionForm","cssId","endsWith","splitCssId","formatNumberBox","participantType","$numberOfEntitiesBox","updateVisibilityOfNumEntitiesBox","restoreOriginal","prepareQuestionForm","optionText","tooltipText","numRowsSelected","hideOption","$containingSelect","setRecipientSelectToFirstVisibleOption","$recipientSelect","$recipientOption","hideInvalidRecipientTypeOptions","$giverSelect","showNewQuestionFrame","newType","prevType","$prevGiver","$currGiver","$prevRecipient","$currRecipient","$prevQuestionForm","$newQuestionForm","prevQuestionSelectedOption","$prevRadioButtons","$prevNumOfRecipients","$prevTable","prevQuestionVisibilityOption","copyOptions","prepareDescription","readyFeedbackEditPage","numQuestions","disableAllQuestions","formStatus","hasRowSelected","questionIdInput","$questionCopyStatusMessage","$questions","$selector","formatQuestionNumbers","save","result","statusMessagesToUser","resolvedTimeFields","hasError","statusMessageToUser","color","resolvedTimeInputIds","keys","resolvedTimeInputId","resolvedTimeInputValue","ready","hover","visibledate","getAttribute","publishdate","checkEditFeedbackSession","reload","duplicateQuestion","confirmationMsg","discardChanges","maxQuestions","enableEdit","deleteQuestion"],"mappings":"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","file":"instructorFeedbackEdit.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 73);\n","/**\n * Contains constants to be used across the application.\n */\n\n// Frontend only constants\nconst Const = {\n    ModalDialog: {\n        UNREGISTERED_STUDENT: {\n            header: 'Register for TEAMMATES',\n            text: 'You have to register using a google account in order to access this page. '\n                  + 'Would you like to proceed and register?',\n        },\n    },\n    StatusMessages: {\n        INSTRUCTOR_DETAILS_LENGTH_INVALID: 'Instructor Details must have 3 columns',\n    },\n};\n\n// Shared constants between frontend and backend\n\n/**\n * Subset of Bootstrap contextual colors for use in status messages and components of modals.\n * @enum {BootstrapContextualColors}\n */\nconst BootstrapContextualColors = {\n    // Mirrored colors from StatusMessageColor\n    SUCCESS: 'success',\n    INFO: 'info',\n    WARNING: 'warning',\n    DANGER: 'danger',\n    // Additional contextual colors that can be used in the components of modals\n    PRIMARY: 'primary',\n    isValidType(type) {\n        return type === BootstrapContextualColors.SUCCESS || type === BootstrapContextualColors.INFO\n                || type === BootstrapContextualColors.PRIMARY || type === BootstrapContextualColors.WARNING\n                || type === BootstrapContextualColors.DANGER;\n    },\n};\nBootstrapContextualColors.DEFAULT = BootstrapContextualColors.INFO;\n\n// Mirrored subset of Const#ParamsNames\nconst ParamsNames = {\n    SESSION_TOKEN: 'token',\n    COPIED_FEEDBACK_SESSION_NAME: 'copiedfsname',\n\n    COURSE_ID: 'courseid',\n    COURSE_NAME: 'coursename',\n    COURSE_TIME_ZONE: 'coursetimezone',\n\n    FEEDBACK_SESSION_NAME: 'fsname',\n    FEEDBACK_SESSION_STARTDATE: 'startdate',\n    FEEDBACK_SESSION_STARTTIME: 'starttime',\n    FEEDBACK_SESSION_VISIBLEDATE: 'visibledate',\n    FEEDBACK_SESSION_VISIBLETIME: 'visibletime',\n    FEEDBACK_SESSION_PUBLISHDATE: 'publishdate',\n    FEEDBACK_SESSION_PUBLISHTIME: 'publishtime',\n    FEEDBACK_SESSION_TIMEZONE: 'timezone',\n    FEEDBACK_SESSION_SESSIONVISIBLEBUTTON: 'sessionVisibleFromButton',\n    FEEDBACK_SESSION_RESULTSVISIBLEBUTTON: 'resultsVisibleFromButton',\n    FEEDBACK_SESSION_ENABLE_EDIT: 'editsessiondetails',\n\n    FEEDBACK_QUESTION_TEXT: 'questiontext',\n    FEEDBACK_QUESTION_DESCRIPTION: 'questiondescription',\n    FEEDBACK_QUESTION_TYPE: 'questiontype',\n    FEEDBACK_QUESTION_NUMBEROFCHOICECREATED: 'noofchoicecreated',\n    FEEDBACK_QUESTION_MCQCHOICE: 'mcqOption',\n    FEEDBACK_QUESTION_MCQ_WEIGHT: 'mcqWeight',\n    FEEDBACK_QUESTION_MSQCHOICE: 'msqOption',\n    FEEDBACK_QUESTION_CONSTSUMOPTION: 'constSumOption',\n    FEEDBACK_QUESTION_CONSTSUMTORECIPIENTS: 'constSumToRecipients',\n    FEEDBACK_QUESTION_CONSTSUMPOINTS: 'constSumPoints',\n    FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHOPTION: 'constSumPointsForEachOption',\n    FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHRECIPIENT: 'constSumPointsForEachRecipient',\n    FEEDBACK_QUESTION_CONSTSUMALLUNEVENDISTRIBUTION: 'All options',\n    FEEDBACK_QUESTION_CONSTSUMSOMEUNEVENDISTRIBUTION: 'At least some options',\n    FEEDBACK_QUESTION_CONSTSUMNOUNEVENDISTRIBUTION: 'None',\n    FEEDBACK_QUESTION_RECIPIENTTYPE: 'recipienttype',\n    FEEDBACK_QUESTION_NUMBEROFENTITIESTYPE: 'numofrecipientstype',\n    FEEDBACK_QUESTION_EDITTEXT: 'questionedittext',\n    FEEDBACK_QUESTION_DISCARDCHANGES: 'questiondiscardchanges',\n    FEEDBACK_QUESTION_EDITTYPE: 'questionedittype',\n    FEEDBACK_QUESTION_SAVECHANGESTEXT: 'questionsavechangestext',\n    FEEDBACK_QUESTION_SHOWRESPONSESTO: 'showresponsesto',\n    FEEDBACK_QUESTION_SHOWGIVERTO: 'showgiverto',\n    FEEDBACK_QUESTION_SHOWRECIPIENTTO: 'showrecipientto',\n    FEEDBACK_QUESTION_NUMSCALE_MIN: 'numscalemin',\n    FEEDBACK_QUESTION_NUMSCALE_MAX: 'numscalemax',\n    FEEDBACK_QUESTION_NUMSCALE_STEP: 'numscalestep',\n    FEEDBACK_QUESTION_RANKOPTION: 'rankOption',\n    FEEDBACK_QUESTION_RANKTORECIPIENTS: 'rankToRecipients',\n    FEEDBACK_QUESTION_NUMBER: 'questionnum',\n    FEEDBACK_QUESTION_NUMBER_STATIC: 'questionnum-static',\n    FEEDBACK_QUESTION_RANK_IS_MIN_OPTIONS_TO_BE_RANKED_ENABLED: 'minOptionsToBeRankedEnabled',\n    FEEDBACK_QUESTION_RANK_IS_MAX_OPTIONS_TO_BE_RANKED_ENABLED: 'maxOptionsToBeRankedEnabled',\n    FEEDBACK_QUESTION_RANK_MIN_OPTIONS_TO_BE_RANKED: 'minOptionsToBeRanked',\n    FEEDBACK_QUESTION_RANK_MAX_OPTIONS_TO_BE_RANKED: 'maxOptionsToBeRanked',\n    FEEDBACK_QUESTION_RANK_IS_MIN_RECIPIENTS_TO_BE_RANKED_ENABLED: 'minRecipientsToBeRankedEnabled',\n    FEEDBACK_QUESTION_RANK_IS_MAX_RECIPIENTS_TO_BE_RANKED_ENABLED: 'maxRecipientsToBeRankedEnabled',\n    FEEDBACK_QUESTION_RANK_MIN_RECIPIENTS_TO_BE_RANKED: 'minRecipientsToBeRanked',\n    FEEDBACK_QUESTION_RANK_MAX_RECIPIENTS_TO_BE_RANKED: 'maxRecipientsToBeRanked',\n};\n\nexport {\n    Const,\n    ParamsNames,\n    BootstrapContextualColors,\n};\n","/**\n * Tests whether the passed object is an actual date\n * with an accepted format\n *\n * Allowed formats : http://dygraphs.com/date-formats.html\n *\n * TEAMMATES currently follows the RFC2822 / IETF date syntax\n * e.g. 02 Apr 2012, 23:59\n *\n * @param date\n * @returns boolean\n */\nfunction isDate(date) {\n    return !Number.isNaN(Date.parse(date));\n}\n\n/**\n* Function to test if param is a numerical value\n* @param num\n* @returns boolean\n*/\nfunction isNumber(num) {\n    return (typeof num === 'string' || typeof num === 'number') && !Number.isNaN(num - 0) && num !== '';\n}\n\n/**\n * Checks if element is within browser's viewport.\n * @return true if it is within the viewport, false otherwise\n * @see http://stackoverflow.com/q/123999\n */\nfunction isWithinView(element) {\n    const baseElement = $(element)[0]; // unwrap jquery element\n    const rect = baseElement.getBoundingClientRect();\n\n    const $viewport = $(window);\n\n    // makes the viewport size slightly larger to account for rounding errors\n    const tolerance = 0.25;\n    return (\n        rect.top >= 0 - tolerance // below the top of viewport\n        && rect.left >= 0 - tolerance // within the left of viewport\n        && rect.right <= $viewport.width() + tolerance // within the right of viewport\n        && rect.bottom <= $viewport.height() + tolerance // above the bottom of viewport\n    );\n}\n\n/**\n * Extracts the suffix that follows the prefix from the id. For example, commentDelete-1-1-0-1 => 1-1-0-1.\n * @param {Object} options required options\n * @param {string} options.idPrefix the prefix of the id\n * @param {string} options.id the id to extract from\n * @return {string} the suffix that uniquely identifies an element among elements with the same prefix\n */\nfunction extractIdSuffixFromId({ idPrefix, id } = {}) {\n    return new RegExp(`${idPrefix}-(.*)`).exec(id)[1];\n}\n\nexport {\n    isDate,\n    isNumber,\n    isWithinView,\n    extractIdSuffixFromId,\n};\n","import {\n    isDate,\n    isNumber,\n} from './helper';\n\n/**\n * Returns false if the parameter is either one of null or undefined.\n * Returns true otherwise.\n *\n * @param varToCheck\n */\nfunction isDefined(varToCheck) {\n    return varToCheck !== null && varToCheck !== undefined;\n}\n\n/**\n * To get point value from a formatted string\n *\n * @param s\n *     A table cell (td tag) that contains the formatted string\n * @param ditchZero\n *     Whether 0% should be treated as lower than -90 or not\n * @returns\n */\nfunction getPointValue(s, ditchZero) {\n    let s0 = s;\n    const baseValue = 100;\n\n    if (s0.indexOf('/') !== -1) {\n        // magic expressions below as these cases will only be compared with\n        // case E +(-)X% (0 <= X <= 100)\n        if (s0.indexOf('S') !== -1) {\n            return (2 * baseValue) + 1; // Case N/S (feedback contribution not sure)\n        }\n\n        return (2 * baseValue) + 2; // Case N/A\n    }\n\n    if (s0 === '0%') { // Case 0%\n        if (ditchZero) {\n            return 0;\n        }\n        return baseValue;\n    }\n\n    s0 = s0.replace('E', '').replace('%', ''); // Case E +(-)X%\n\n    if (s0 === '') {\n        return baseValue; // Case E\n    }\n\n    return baseValue + parseFloat(s0); // Other typical cases\n}\n\n/**\n * Sorting comparison functions.\n */\nclass Comparators {\n    /**\n     * The base comparator (ascending)\n     * @returns 1 if x comes after y, -1 if x comes before y, 0 if they are the same\n     */\n    static sortBase(x, y) {\n        // Text sorting\n        if (x < y) {\n            return -1;\n        }\n        return x > y ? 1 : 0;\n    }\n\n    /**\n     * Comparator for numbers (integer, double) (ascending)\n     * @returns +ve if x > y, -ve if x < y and 0 otherwise\n     */\n    static sortNum(x, y) {\n        return x - y;\n    }\n\n    /**\n     * Comparator for date. Allows for the same format as isDate()\n     * @returns 1 if Date x is after y, 0 if same and -1 if before\n     */\n    static sortDate(x, y) {\n        const x0 = Date.parse(x);\n        const y0 = Date.parse(y);\n        if (x0 > y0) {\n            return 1;\n        }\n        return x0 < y0 ? -1 : 0;\n    }\n\n    /**\n     * Comparator to sort strings in format: E([+-]x%) | N/A | N/S | 0% with\n     * possibly a tag that surrounds it.\n     */\n    static sortByPoints(a, b) {\n        const a0 = getPointValue(a, true);\n        const b0 = getPointValue(b, true);\n        if (isNumber(a0) && isNumber(b0)) {\n            return Comparators.sortNum(a0, b0);\n        }\n        return Comparators.sortBase(a0, b0);\n    }\n\n    /**\n     * Comparator to sort strings in format: [+-]x% | N/A with possibly a tag that\n     * surrounds it.\n     */\n    static sortByDiff(a, b) {\n        const a0 = getPointValue(a, false);\n        const b0 = getPointValue(b, false);\n        if (isNumber(a0) && isNumber(b0)) {\n            return Comparators.sortNum(a0, b0);\n        }\n        return Comparators.sortBase(a0, b0);\n    }\n\n    static getDefaultComparator(columnType) {\n        let defaultComparator;\n\n        if (columnType === 1) {\n            defaultComparator = Comparators.sortNum;\n        } else if (columnType === 2) {\n            defaultComparator = Comparators.sortDate;\n        } else {\n            defaultComparator = Comparators.sortBase;\n        }\n\n        return defaultComparator;\n    }\n}\n\n/**\n * Functions that pull data out of a table cell.\n */\nclass Extractors {\n    static textExtractor($tableCell) {\n        return $tableCell.text();\n    }\n\n    static tooltipExtractor($tableCell) {\n        return $tableCell.find('span').attr('data-original-title');\n    }\n\n    static dateStampExtractor($tableCell) {\n        return $tableCell.data('dateStamp');\n    }\n\n    static getDefaultExtractor() {\n        return Extractors.textExtractor;\n    }\n}\n\nclass TableButtonHelpers {\n    /**\n     * Given a button, get the innermost table enclosing it.\n     */\n    static getEnclosingTable($button) {\n        return $($button.parents('table')[0]);\n    }\n\n    /**\n     * Given a button and an index idx,\n     * find the button's column position in the table\n     * where the columns are treated as idx-indexed.\n     */\n    static getColumnPositionOfButton($button, idx) {\n        return $button.parent().children().index($button) + idx;\n    }\n\n    /**\n     * Given a table, clear all the sort states.\n     */\n    static clearAllSortStates($table) {\n        $table.find('.icon-sort').attr('class', 'icon-sort unsorted'); // clear the icons\n        $table.find('.button-sort-ascending')\n                .removeClass('button-sort-ascending')\n                .addClass('button-sort-none');\n        $table.find('.button-sort-descending')\n                .removeClass('button-sort-descending')\n                .addClass('button-sort-none');\n    }\n\n    /**\n     * Given a button in table, set its state to sorted ascending.\n     * Clear all other button states.\n     */\n    static setButtonToSortedAscending($button) {\n        this.clearAllSortStates(this.getEnclosingTable($button));\n        $button.addClass('button-sort-ascending');\n        $button.find('.icon-sort').attr('class', 'icon-sort sorted-ascending'); // set the icon to ascending\n    }\n\n    /**\n     * Given a button in table, set its state to sorted descending.\n     * Clear all other button states.\n     */\n    static setButtonToSortedDescending($button) {\n        this.clearAllSortStates(this.getEnclosingTable($button));\n        $button.addClass('button-sort-descending');\n        $button.find('.icon-sort').attr('class', 'icon-sort sorted-descending'); // set the icon to descending\n    }\n}\n\n// http://stackoverflow.com/questions/7558182/sort-a-table-fast-by-its-first-column-with-javascript-or-jquery\n/**\n * Sorts a table based on certain column and comparator\n *\n * @param $table\n *     A jQuery object representing the table.\n * @param colIdx\n *     The column index (1-based) as key for the sort\n * @param comparatorOrNull\n *     Function to compare two elements.\n *     May be null.\n * @param extractorOrNull\n *     Function to pull out data from a table cell for comparison.\n *     May be null.\n * @param shouldSortAscending\n *     If this is true, sort in ascending order.\n *     Otherwise, sort in descending order\n */\nfunction sortTable($table, colIdx, comparatorOrNull, extractorOrNull, shouldSortAscending) {\n    let columnType = 0;\n    let store = [];\n    const $rowList = $table.find('> tbody > tr');\n\n    // Iterate through column's contents to decide which comparator to use\n    for (let i = 0; i < $rowList.length; i += 1) {\n        if ($rowList[i].cells[colIdx - 1] === undefined) {\n            continue;\n        }\n\n        const extractor = isDefined(extractorOrNull) ? extractorOrNull : Extractors.getDefaultExtractor();\n\n        // $.trim trims leading/trailing whitespaces\n        // $rowList[i].cells[colIdx - 1] is where we get the table cell from\n        const textToCompare = $.trim(extractor($($rowList[i].cells[colIdx - 1])));\n\n        // Store rows together with the innerText to compare\n        store.push([textToCompare, $rowList[i], i]);\n\n        if ((columnType === 0 || columnType === 1) && isNumber(textToCompare)) {\n            columnType = 1;\n        } else if ((columnType === 0 || columnType === 2) && isDate(textToCompare)) {\n            columnType = 2;\n        } else {\n            columnType = 3;\n        }\n    }\n\n    const comparator = isDefined(comparatorOrNull) ? comparatorOrNull : Comparators.getDefaultComparator(columnType);\n\n    store.sort((x, y) => {\n        const compareResult = shouldSortAscending ? comparator(x[0].toUpperCase(), y[0].toUpperCase())\n                : comparator(y[0].toUpperCase(), x[0].toUpperCase());\n        if (compareResult === 0) {\n            return x[2] - y[2];\n        }\n        return compareResult;\n    });\n\n    // Must rewrap because .get() does not return a jQuery wrapped DOM node\n    // and hence does not have the .children() function\n    let $tbody = $($table.get(0)).children('tbody');\n\n    if ($tbody.size < 1) {\n        $tbody = $table;\n    }\n\n    // Must push to target tbody else it will generate a new tbody for the table\n    for (let j = 0; j < store.length; j += 1) {\n        $tbody.get(0).appendChild(store[j][1]);\n    }\n\n    store = null;\n}\n\n/**\n * Sorts a table\n * @param sortButtonClicked\n *     The jQuery object representing the sort button that was clicked.\n * @param comparatorStringOrNull\n *     String representing the function to compare 2 elements.\n *     May be null.\n * @param extractorStringOrNull\n *     String representing the function to pull out data from a table cell for comparison.\n *     May be null.\n */\nfunction toggleSort($button, comparatorStringOrNull, extractorStringOrNull) {\n    const isSortedAscending = $button.hasClass('button-sort-ascending');\n\n    const $table = TableButtonHelpers.getEnclosingTable($button);\n    const colIdx = TableButtonHelpers.getColumnPositionOfButton($button, 1);\n    const comparatorOrNull = isDefined(comparatorStringOrNull) ? Comparators[comparatorStringOrNull] : null;\n    const extractorOrNull = isDefined(extractorStringOrNull) ? Extractors[extractorStringOrNull] : null;\n    const shouldSortAscending = !isSortedAscending;\n\n    sortTable($table, colIdx, comparatorOrNull, extractorOrNull, shouldSortAscending);\n\n    // update the button and icon states\n    if (shouldSortAscending) {\n        TableButtonHelpers.setButtonToSortedAscending($button);\n    } else {\n        TableButtonHelpers.setButtonToSortedDescending($button);\n    }\n}\n\nexport {\n    Comparators, // for test\n    getPointValue, // for test\n    toggleSort,\n};\n","import {\n    ParamsNames,\n} from './const';\n\n/**\n * Returns the value of a cookie given its name.\n * Returns null if the cookie is not set.\n */\nfunction getCookie(cookieNameToFind) {\n    const cookies = document.cookie.split('; ').map(s => s.split('='));\n\n    for (let i = 0; i < cookies.length; i += 1) {\n        const cookieName = cookies[i][0];\n        const cookieValue = cookies[i][1];\n\n        // the cookie was found in the ith iteration\n        if (cookieName === cookieNameToFind) {\n            return cookieValue;\n        }\n    }\n\n    // the cookie was not found\n    return null;\n}\n\nfunction makeCsrfTokenParam() {\n    return `${ParamsNames.SESSION_TOKEN}=${getCookie(ParamsNames.SESSION_TOKEN)}`;\n}\n\nfunction updateCsrfTokenInInputFields() {\n    const updatedToken = getCookie(ParamsNames.SESSION_TOKEN);\n    if (!updatedToken) {\n        return;\n    }\n    $(`input[name=${ParamsNames.SESSION_TOKEN}]`).val(updatedToken);\n}\n\nexport {\n    makeCsrfTokenParam,\n    updateCsrfTokenInInputFields,\n};\n","import {\n    isWithinView,\n} from './helper';\n\n/**\n * Scrolls the screen to a certain position.\n * @param scrollPos Position to scroll the screen to.\n * @param duration Duration of animation in ms. Scrolling is instant if omitted.\n *                 'fast and 'slow' are 600 and 200 ms respectively,\n *                 400 ms will be used if any other string is supplied.\n */\nfunction scrollToPosition(scrollPos, duration) {\n    if (duration === undefined || duration === null) {\n        $(window).scrollTop(scrollPos);\n    } else {\n        $('html, body').animate({ scrollTop: scrollPos }, duration);\n    }\n}\n\n/**\n * Scrolls to an element.\n * Possible options are as follows:\n *\n * @param element - element to scroll to\n * @param options - associative array with optional values:\n *                  * type: ['top'|'view'], defaults to 'top';\n *                          'top' scrolls to the top of the element,\n *                          'view' scrolls the element into view\n *                  * offset: offset from element to scroll to in px,\n *                            defaults to navbar / footer offset for scrolling from above or below\n *                  * duration: duration of animation,\n *                              defaults to 0 for scrolling without animation\n */\nfunction scrollToElement(element, opts) {\n    const defaultOptions = {\n        type: 'top',\n        offset: 0,\n        duration: 0,\n    };\n\n    const options = opts || {};\n    const type = options.type || defaultOptions.type;\n    let offset = options.offset || defaultOptions.offset;\n    const duration = options.duration || defaultOptions.duration;\n\n    const isViewType = type === 'view';\n    if (isViewType && isWithinView(element)) {\n        return;\n    }\n\n    const navbar = $('.navbar')[0];\n    const navbarHeight = navbar ? navbar.offsetHeight : 0;\n    const footer = $('#footerComponent')[0];\n    const footerHeight = footer ? footer.offsetHeight : 0;\n    const windowHeight = window.innerHeight - navbarHeight - footerHeight;\n\n    const isElementTallerThanWindow = windowHeight < element.offsetHeight;\n    const isFromAbove = window.scrollY < element.offsetTop;\n    const isAlignedToTop = !isViewType || isElementTallerThanWindow || !isFromAbove;\n\n    // default offset - from navbar / footer\n    if (options.offset === undefined) {\n        offset = isAlignedToTop ? navbarHeight * -1 : footerHeight * -1;\n    }\n\n    // adjust offset to bottom of element\n    if (!isAlignedToTop) {\n        offset *= -1;\n        offset += element.offsetHeight - window.innerHeight;\n    }\n\n    const scrollPos = element.offsetTop + offset;\n\n    scrollToPosition(scrollPos, duration);\n}\n\n/**\n * Scrolls the screen to top\n * @param duration Duration of animation in ms. Scrolling is instant if omitted.\n *                 'fast and 'slow' are 600 and 200 ms respectively,\n *                 400 ms will be used if any other string is supplied.\n */\nfunction scrollToTop(duration) {\n    scrollToPosition(0, duration);\n}\n\nexport {\n    scrollToElement,\n    scrollToTop,\n};\n","import {\n    updateCsrfTokenInInputFields,\n} from './crypto';\n\nimport {\n    toggleSort,\n} from './sortBy';\n\n/**\n * Polyfills the String.prototype.includes function finalized in ES6 for browsers that do not yet support the function.\n */\n/* eslint-disable no-extend-native */ // necessary for polyfills\nif (!String.prototype.includes) {\n    String.prototype.includes = function (search, startParam) {\n        const start = typeof startParam === 'number' ? startParam : 0;\n\n        if (start + search.length > this.length) {\n            return false;\n        }\n        return this.indexOf(search, start) !== -1;\n    };\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Checks if the current device is touch based device\n * Reference: https://github.com/Modernizr/Modernizr/blob/master/feature-detects/touchevents.js\n */\nfunction isTouchDevice() {\n    return ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch);\n}\n\n$(document).on('click', '.toggle-sort', (e) => {\n    const $button = $(e.currentTarget); // the button clicked on\n\n    const comparatorStringOrNull = $button.data('toggle-sort-comparator');\n    const extractorStringOrNull = $button.data('toggle-sort-extractor');\n\n    toggleSort($button, comparatorStringOrNull, extractorStringOrNull);\n});\n\n$(document).on('ajaxComplete ready', () => {\n    /**\n     * Initializing then disabling is better than simply\n     * not initializing for mobile due to some tooltips-specific\n     * code that throws errors.\n    */\n    const $tooltips = $('[data-toggle=\"tooltip\"]');\n    $tooltips.tooltip({\n        html: true,\n        container: 'body',\n    });\n    if (isTouchDevice()) {\n        $tooltips.tooltip('disable');\n    }\n\n    /**\n     * Underlines all span elements with tool-tips except for\n     * the ones without a text value. This is to exclude elements\n     * such as 'icons' from underlining.\n    */\n    $('span[data-toggle=\"tooltip\"]').each(function () {\n        const textValue = $(this).text().replace(/\\s/g, '');\n        if (textValue) {\n            $(this).addClass('tool-tip-decorate');\n        }\n    });\n\n    /**\n     * Updates the token in input fields with the latest one retrieved from the cookie.\n     * The token becomes outdated once the session expires. The cookie might be updated\n     * with the new token and session during page loads from other browser windows.\n     * The latest value should be retrieved from the cookie before form submission.\n     */\n    $('form').submit(updateCsrfTokenInInputFields);\n});\n","import {\n    BootstrapContextualColors,\n} from './const';\n\nimport {\n    scrollToElement,\n} from './scrollTo';\n\nconst DIV_STATUS_MESSAGE = '#statusMessagesToUser';\n\nfunction buildNewStatusMessageDiv(message, bootstrapContextualColor) {\n    const $newStatusMessageDivContent = $('<div></div>');\n\n    // Default the status type to info if any invalid status is passed in\n    const contextualColor = BootstrapContextualColors.isValidType(bootstrapContextualColor)\n            ? bootstrapContextualColor : BootstrapContextualColors.INFO;\n\n    $newStatusMessageDivContent.addClass(\n            `overflow-auto alert alert-${contextualColor} icon-${contextualColor} statusMessage`);\n    $newStatusMessageDivContent.html(message);\n\n    return $newStatusMessageDivContent;\n}\n\n/**\n * Populates the status div with the message and the message status.\n * Default message type is info.\n *\n * @param message the text message to be shown to the user\n * @param {BootstrapContextualColors} bootstrapContextualColor the contextual color to apply to the status messsage\n * @return created status message div\n */\nfunction populateStatusMessageDiv(message, bootstrapContextualColor) {\n    const $statusMessageDivToUser = $(DIV_STATUS_MESSAGE);\n    const $statusMessageDivContent = buildNewStatusMessageDiv(message, bootstrapContextualColor);\n    $statusMessageDivToUser.empty();\n    $statusMessageDivToUser.append($statusMessageDivContent);\n    return $statusMessageDivToUser;\n}\n\n/**\n * Appends a new message to the status div, leaving existing messages intact.\n * Default message type is info.\n *\n * @param message the text message to be shown to the user\n * @param {BootstrapContextualColors} bootstrapContextualColor the contextual color to apply to the status messsage\n */\nfunction appendNewStatusMessage(message, bootstrapContextualColor) {\n    const $statusMessagesDivToUser = $(DIV_STATUS_MESSAGE);\n    $statusMessagesDivToUser.append(buildNewStatusMessageDiv(message, bootstrapContextualColor));\n    $statusMessagesDivToUser.show();\n    scrollToElement($statusMessagesDivToUser[0], { offset: -window.innerHeight / 2 });\n}\n\n/**\n * Sets a status message and the message status.\n * Default message type is info.\n *\n * @param message the text message to be shown to the user\n * @param {BootstrapContextualColors} bootstrapContextualColor the contextual color to apply to the status messsage\n */\nfunction setStatusMessage(message, bootstrapContextualColor) {\n    if (message === '' || message === undefined || message === null) {\n        return;\n    }\n    const $statusMessageDivToUser = populateStatusMessageDiv(message, bootstrapContextualColor);\n    $statusMessageDivToUser.show();\n    scrollToElement($statusMessageDivToUser[0], { offset: -window.innerHeight / 2 });\n}\n\n/**\n * Sets a status message and the message status to a given form.\n * Default message type is info.\n *\n * @param message the text message to be shown to the user\n * @param {BootstrapContextualColors} bootstrapContextualColor the contextual color to apply to the status messsage\n * @param form form which should own the status\n */\nfunction setStatusMessageToForm(message, bootstrapContextualColor, form) {\n    if (message === '' || message === undefined || message === null) {\n        return;\n    }\n    // Copy the statusMessage and prepend to form\n    const $copyOfStatusMessagesToUser = populateStatusMessageDiv(message, bootstrapContextualColor).clone().show();\n    $(DIV_STATUS_MESSAGE).remove();\n    $(form).prepend($copyOfStatusMessagesToUser);\n    const opts = {\n        offset: -window.innerHeight / 8,\n        duration: 1000,\n    };\n    scrollToElement($copyOfStatusMessagesToUser[0], opts);\n}\n\n/**\n * Appends the status messages panels into the current list of panels of status messages.\n * @param  messages the list of status message panels to be added (not just text)\n *\n */\nfunction appendStatusMessage(messages) {\n    const $statusMessagesToUser = $(DIV_STATUS_MESSAGE);\n\n    $statusMessagesToUser.append($(messages));\n    $statusMessagesToUser.show();\n}\n\n/**\n * Clears the status message div tag and hides it\n */\nfunction clearStatusMessages() {\n    const $statusMessagesToUser = $(DIV_STATUS_MESSAGE);\n\n    $statusMessagesToUser.empty();\n    $statusMessagesToUser.hide();\n}\n\nexport {\n    appendNewStatusMessage,\n    appendStatusMessage,\n    clearStatusMessages,\n    setStatusMessage,\n    setStatusMessageToForm,\n};\n","/* global bootbox:false */\n\nimport {\n    BootstrapContextualColors,\n} from './const';\n\n/**\n * Wrapper for Bootbox.js (available at http://bootboxjs.com/)\n * \"Bootbox.js is a small JavaScript library which allows you to create programmatic dialog boxes using\n *  Bootstrap modals\"\n */\n\nconst DEFAULT_OK_TEXT = 'OK';\nconst DEFAULT_CANCEL_TEXT = 'Cancel';\nconst DEFAULT_YES_TEXT = 'Yes';\nconst DEFAULT_NO_TEXT = 'No';\n\nfunction applyStyleToModal(modal, bootstrapContextualColor) {\n    modal.find('.modal-header').addClass(`alert-${bootstrapContextualColor || BootstrapContextualColors.DEFAULT}`)\n            .find('.modal-title').addClass(`icon-${bootstrapContextualColor || BootstrapContextualColors.DEFAULT}`);\n}\n\n/**\n * Custom alert dialog to replace default alert() function\n * Required params: titleText and messageText\n * Optional params: okButtonText (defaults to \"OK\")\n *                  bootstrapContextualColor (defaults to BootstrapContextualColors.DEFAULT)\n */\nfunction showModalAlert(titleText, messageText, okButtonText, bootstrapContextualColor) {\n    const modal = bootbox.dialog({\n        title: titleText,\n        message: messageText,\n        show: false,\n        buttons: {\n            okay: {\n                label: okButtonText || DEFAULT_OK_TEXT,\n                className: `modal-btn-ok btn-${bootstrapContextualColor || BootstrapContextualColors.DEFAULT}`,\n            },\n        },\n    });\n    applyStyleToModal(modal, bootstrapContextualColor);\n\n    modal.modal('show');\n}\n\n/**\n * Custom confirmation dialog to replace default confirm() function\n * Required params: titleText, messageText and okCallback\n * Optional params: cancelCallBack (defaults to null)\n *                  okButtonText (defaults to \"OK\")\n *                  cancelButtonText (defaults to \"Cancel\")\n *                  bootstrapContextualColor (defaults to BootstrapContextualColors.INFO)\n *                  onHiddenCallback - triggers when the event `hidden.bs.modal` is triggered\n */\nfunction showModalConfirmation(titleText, messageText, okCallback, cancelCallback,\n        okButtonText, cancelButtonText, bootstrapContextualColor, onHiddenCallback) {\n    const modal = bootbox.dialog({\n        title: titleText,\n        message: messageText,\n        onEscape: cancelCallback || true,\n        show: false,\n        buttons: {\n            cancel: {\n                label: cancelButtonText || DEFAULT_CANCEL_TEXT,\n                className: 'modal-btn-cancel btn-default',\n                callback: cancelCallback || null,\n            },\n            ok: {\n                label: okButtonText || DEFAULT_OK_TEXT,\n                className: `modal-btn-ok btn-${bootstrapContextualColor || BootstrapContextualColors.DEFAULT}`,\n                callback: okCallback,\n            },\n        },\n    });\n\n    if (onHiddenCallback) {\n        modal.on('hidden.bs.modal', onHiddenCallback);\n    }\n\n    applyStyleToModal(modal, bootstrapContextualColor);\n\n    modal.modal('show');\n}\n\n/**\n * Custom confirmation dialog to replace default confirm() function\n * Required params: titleText, messageText, yesButtonCallback and noButtonCallback\n * Optional params: cancelButtonCallBack (defaults to null)\n *                  yesButtonText (defaults to \"Yes\")\n *                  noButtonText (defaults to \"No\")\n *                  cancelButtonText (defaults to \"Cancel\")\n *                  bootstrapContextualColor (defaults to BootstrapContextualColors.INFO)\n *                  onHiddenCallback - triggers when the event `hidden.bs.modal` is triggered\n */\nfunction showModalConfirmationWithCancel(titleText, messageText, yesButtonCallback, noButtonCallback,\n        cancelButtonCallback, yesButtonText, noButtonText, cancelButtonText, bootstrapContextualColor,\n        onHiddenCallback) {\n    const modal = bootbox.dialog({\n        title: titleText,\n        message: messageText,\n        onEscape: cancelButtonCallback || true,\n        show: false,\n        buttons: {\n            yes: {\n                label: yesButtonText || DEFAULT_YES_TEXT,\n                className: `modal-btn-ok btn-${bootstrapContextualColor || BootstrapContextualColors.DEFAULT}`,\n                callback: yesButtonCallback,\n            },\n            no: {\n                label: noButtonText || DEFAULT_NO_TEXT,\n                className: `modal-btn-ok btn-${bootstrapContextualColor || BootstrapContextualColors.DEFAULT}`,\n                callback: noButtonCallback,\n            },\n            cancel: {\n                label: cancelButtonText || DEFAULT_CANCEL_TEXT,\n                className: 'modal-btn-cancel btn-default',\n                callback: cancelButtonCallback || null,\n            },\n        },\n    });\n\n    if (onHiddenCallback) {\n        modal.on('hidden.bs.modal', onHiddenCallback);\n    }\n\n    applyStyleToModal(modal, bootstrapContextualColor);\n\n    modal.modal('show');\n}\n\nexport {\n    showModalAlert,\n    showModalConfirmation,\n    showModalConfirmationWithCancel,\n};\n","import {\n    showModalConfirmation,\n} from './bootboxWrapper';\n\nimport {\n    scrollToElement,\n} from './scrollTo';\n\nimport {\n    BootstrapContextualColors,\n    ParamsNames,\n} from './const';\nimport {\n    setStatusMessage,\n} from './statusMessage';\n\nimport {\n    countRemainingCharactersOnInput,\n} from './countRemainingCharactersOnInput';\n\nimport {\n    TimeZone,\n} from './timezone';\n\n/*\n * This JavaScript file is included in all instructor pages. Functions here\n * should be common to some/all instructor pages.\n */\n\n// -----------------------------------------------------------------------------\n\nfunction setupFsCopyModal() {\n    $('#fsCopyModal').on('show.bs.modal', (event) => {\n        const button = $(event.relatedTarget); // Button that triggered the modal\n        const actionlink = button.data('actionlink');\n        const courseid = button.data('courseid');\n        const fsname = button.data('fsname');\n        const appUrl = window.location.origin;\n        const currentPage = window.location.href.substring(appUrl.length); // use the page's relative URL\n\n        $.ajax({\n            type: 'GET',\n            url: `${actionlink}&courseid=${encodeURIComponent(courseid)}&fsname=${encodeURIComponent(fsname)}`\n                    + `&currentPage=${encodeURIComponent(currentPage)}`,\n            beforeSend() {\n                $('#fscopy_submit').prop('disabled', true);\n                $('#courseList').html('Loading possible destination courses. Please wait ...<br>'\n                                      + \"<img class='margin-center-horizontal' src='/images/ajax-loader.gif'/>\");\n            },\n            error() {\n                $('#courseList').html(\"<p id='fs-copy-modal-error'>Error retrieving course list.\"\n                                      + 'Please close the dialog window and try again.</p>');\n            },\n            success(data) {\n                $('#courseList').html(data);\n                // If the user alt-clicks, the form does not send any parameters and results in an error.\n                // Prevent default form submission and submit using jquery.\n                $('#fscopy_submit').off('click')\n                        .on('click', (e) => {\n                            $('#fscopy_submit').prop('disabled', true);\n                            e.preventDefault();\n                            $('#fscopy_submit').closest('form').submit();\n                        });\n                $('#fscopy_submit').prop('disabled', false);\n                countRemainingCharactersOnInput(ParamsNames.COPIED_FEEDBACK_SESSION_NAME);\n            },\n        });\n    });\n\n    $('#instructorCopyModalForm').submit(function (e) {\n        e.preventDefault();\n        const $this = $(this);\n\n        const $copyModalStatusMessage = $('#feedback-copy-modal-status');\n\n        $.ajax({\n            type: 'POST',\n            url: $this.prop('action'),\n            data: $this.serialize(),\n            beforeSend() {\n                $copyModalStatusMessage.removeClass('alert alert-danger');\n                $copyModalStatusMessage.html('<img src=\"/images/ajax-loader.gif\" class=\"margin-center-horizontal\">');\n            },\n            error() {\n                $copyModalStatusMessage.addClass('alert alert-danger');\n                $copyModalStatusMessage.text('There was an error during submission. '\n                                                 + 'Please close the dialog window and try again.');\n            },\n            success(data) {\n                const isError = data.errorMessage !== '';\n                if (!isError && data.redirectUrl) {\n                    window.location.href = data.redirectUrl;\n                } else {\n                    $copyModalStatusMessage.addClass('alert alert-danger');\n                    $copyModalStatusMessage.text(data.errorMessage);\n                    $('#fscopy_submit').prop('disabled', false);\n                }\n            },\n        });\n    });\n}\n\nfunction initializeTimeZoneOptions($selectElement) {\n    if (typeof moment !== 'undefined') {\n        TimeZone.prepareTimeZoneInput($selectElement);\n\n        const existingTimeZone = $selectElement.data('timeZone');\n        if (existingTimeZone) {\n            TimeZone.updateTimeZone($selectElement, existingTimeZone);\n        } else {\n            TimeZone.autoDetectAndUpdateTimeZone($selectElement);\n        }\n\n        $('#auto-detect-time-zone').on('click', () => {\n            TimeZone.autoDetectAndUpdateTimeZone($selectElement);\n        });\n    }\n}\n\n// Student Profile Picture\n// --------------------------------------------------------------------------\n\n/**\n * updates all the student names that show profile picture\n * on hover with the resolved link after one instance of the name\n * has been loaded<br>\n * Helps to avoid clicking view photo when hovering over names of\n * students whose picture has already been loaded elsewhere in the page\n * @param link\n * @param resolvedLink\n */\nfunction updateHoverShowPictureEvents(actualLink, resolvedLink) {\n    $(`.profile-pic-icon-hover[data-link=\"${actualLink}\"]`)\n            .attr('data-link', '')\n            .off('mouseenter mouseleave')\n            .popover('destroy')\n            .popover({\n                html: true,\n                trigger: 'manual',\n                placement: 'top',\n                content() {\n                    return `<img class=\"profile-pic\" src=\"${resolvedLink}\">`;\n                },\n            })\n            .mouseenter(function () {\n                $(this).popover('show');\n                $(this).siblings('.popover').on('mouseleave', function () {\n                    $(this).siblings('.profile-pic-icon-hover').popover('hide');\n                });\n                $(this).mouseleave(function () {\n                    // this is so that the user can hover over the\n                    // pop-over photo without hiding the photo\n                    setTimeout((obj) => {\n                        if ($(obj).siblings('.popover').find(':hover').length === 0) {\n                            $(obj).popover('hide');\n                        }\n                    }, 200, this);\n                });\n            })\n            .children('img[src=\"\"]')\n            .attr('src', resolvedLink);\n}\n\n/**\n * @param elements:\n * identifier that points to elements with\n * class: student-profile-pic-view-link\n */\nfunction bindStudentPhotoLink(elements) {\n    $(elements).on('click', function (e) {\n        const event = e || window.event;\n\n        event.cancelBubble = true;\n\n        if (event.stopPropagation) {\n            event.stopPropagation();\n        }\n\n        const actualLink = $(this).parent().attr('data-link');\n        const $loadingImage = $('<img>').attr('src', '/images/ajax-loader.gif')\n                .addClass('center-block margin-top-7px');\n\n        $(this).siblings('img').attr('src', actualLink).load(function () {\n            const resolvedLink = $(this).attr('src');\n\n            $loadingImage.remove();\n\n            $(this).removeClass('hidden')\n                    .parent().attr('data-link', '')\n                    .popover({\n                        html: true,\n                        trigger: 'manual',\n                        placement: 'top',\n                        content() {\n                            return `<img class=\"profile-pic\" src=\"${resolvedLink}\">`;\n                        },\n                    })\n                    .mouseenter(function () {\n                        $(this).popover('show');\n                        $(this).siblings('.popover').on('mouseleave', function () {\n                            $(this).siblings('.profile-pic-icon-click').popover('hide');\n                        });\n                        $(this).mouseleave(function () {\n                            // this is so that the user can hover over the\n                            // pop-over photo without hiding the photo\n                            setTimeout((obj) => {\n                                if ($(obj).siblings('.popover').find(':hover').length === 0) {\n                                    $(obj).popover('hide');\n                                }\n                            }, 200, this);\n                        });\n                    });\n\n            updateHoverShowPictureEvents(actualLink, resolvedLink);\n        });\n\n        const $imageCell = $(this).closest('td');\n        $(this).remove();\n        $imageCell.append($loadingImage);\n    });\n}\n\n/**\n * completes the loading cycle for showing profile picture\n * for a onhover event\n * @param link\n * @param resolvedLink\n */\nfunction loadProfilePictureForHoverEvent(obj) {\n    obj.children('img')[0].src = obj.attr('data-link');\n\n    const $loadingImage = $('<img>').attr('src', '/images/ajax-loader.gif');\n\n    // load the pictures in all similar links\n    obj.children('img').load(function () {\n        const actualLink = $(this).parent().attr('data-link');\n        const resolvedLink = $(this).attr('src');\n\n        $loadingImage.remove();\n\n        updateHoverShowPictureEvents(actualLink, resolvedLink);\n\n        // this is to show the picture immediately for the one\n        // the user just clicked on\n        $(this).parent()\n                .popover('show')\n                // this is to handle the manual hide action of the popover\n                .siblings('.popover')\n                .on('mouseleave', function () {\n                    $(this).siblings('.profile-pic-icon-hover').popover('hide');\n                });\n    });\n\n    obj.popover('destroy').popover({\n        html: true,\n        trigger: 'manual',\n        placement: 'top',\n        content() {\n            return $loadingImage.get(0).outerHTML;\n        },\n    });\n    obj.popover('show');\n}\n\n/**\n * @param elements:\n * identifier that points to elements with\n * class: profile-pic-icon-hover\n */\nfunction bindStudentPhotoHoverLink(elements) {\n    $(elements)\n            .mouseenter(function () {\n                $(this).popover('show');\n                $(this).siblings('.popover').on('mouseleave', function () {\n                    $(this).siblings('.profile-pic-icon-hover').popover('hide');\n                });\n            })\n            .mouseleave(function () {\n                // this is so that the user can hover over the\n                // pop-over without accidentally hiding the 'view photo' link\n                setTimeout((obj) => {\n                    if ($(obj).siblings('.popover').find('.profile-pic').length !== 0\n                    || $(obj).siblings('.popover').find(':hover').length === 0) {\n                        $(obj).popover('hide');\n                    }\n                }, 200, this);\n            });\n\n    // bind the default popover event for the\n    // show picture onhover events\n    $(elements).popover({\n        html: true,\n        trigger: 'manual',\n        placement: 'top',\n        content() {\n            $('body').on('click', '.cursor-pointer', (event) => {\n                const toLoad = $(event.currentTarget).closest('.popover').siblings('.profile-pic-icon-hover');\n                loadProfilePictureForHoverEvent(toLoad);\n            });\n            return '<a class=\"cursor-pointer\">View Photo</a>';\n        },\n    });\n}\n\nfunction bindDeleteButtons() {\n    $('body').on('click', '.session-delete-for-test', (event) => {\n        event.preventDefault();\n\n        const $button = $(event.currentTarget);\n        const courseId = $button.data('courseid');\n        const feedbackSessionName = $button.data('fsname');\n\n        const messageText = `Are you want to delete the feedback session ${feedbackSessionName} in ${courseId}?`;\n        const okCallback = function () {\n            window.location = $button.attr('href');\n        };\n\n        showModalConfirmation('Confirm deleting feedback session', messageText, okCallback, null,\n                null, null, BootstrapContextualColors.DANGER);\n    });\n}\n\nfunction bindCourseDeleteLinks() {\n    $('body').on('click', '.course-delete-link', (event) => {\n        event.preventDefault();\n\n        const $clickedLink = $(event.currentTarget);\n        const messageText = `Are you sure you want to delete the course: ${$clickedLink.data('courseId')}? `\n                          + 'This operation will delete all students and sessions in this course. '\n                          + 'All instructors of this course will not be able to access it hereafter as well.';\n        const okCallback = function () {\n            window.location = $clickedLink.attr('href');\n        };\n\n        showModalConfirmation('Confirm deleting course', messageText, okCallback, null,\n                null, null, BootstrapContextualColors.DANGER);\n    });\n}\n\nfunction bindSessionDeleteLinks() {\n    $('body').on('click', '#fsDeleteLink', (event) => {\n        event.preventDefault();\n\n        const $clickedLink = $(event.currentTarget);\n        const messageText = 'Are you sure you want to delete the feedback session '\n                + `${$clickedLink.data('feedbackSessionName')} in ${$clickedLink.data('courseId')}?`;\n        const okCallback = function () {\n            window.location = $clickedLink.attr('href');\n        };\n\n        showModalConfirmation('Confirm deleting feedback session', messageText, okCallback, null,\n                null, null, BootstrapContextualColors.DANGER);\n    });\n}\n\nfunction attachEventToSendInviteLink() {\n    $(document).on('click', '.course-student-remind-link', (event) => {\n        event.preventDefault();\n\n        const $clickedLink = $(event.currentTarget);\n        const messageText = 'Usually, there is no need to use this feature because TEAMMATES sends an automatic '\n                + 'invite to students at the opening time of each session. Send a join request anyway?';\n        const okCallback = function okCallback() {\n            $.get($clickedLink.attr('href'), () => {\n                const studentEmail = $clickedLink.parent().siblings(\"td[id|='studentemail']\").html().trim();\n                const message = `An email has been sent to ${studentEmail}`;\n                setStatusMessage(message, 'success');\n            });\n        };\n\n        showModalConfirmation('Confirm sending join request', messageText, okCallback, null,\n                null, null, BootstrapContextualColors.INFO);\n    });\n}\n\nfunction attachEventToDeleteStudentLink() {\n    $(document).on('click', '.course-student-delete-link', (event) => {\n        event.preventDefault();\n\n        const $clickedLink = $(event.currentTarget);\n        const messageText = `Are you sure you want to remove ${$clickedLink.data('studentName')}`\n                + ` from the course ${$clickedLink.data('courseId')}?`;\n        const okCallback = function () {\n            window.location = $clickedLink.attr('href');\n        };\n\n        showModalConfirmation('Confirm deletion', messageText, okCallback, null,\n                null, null, BootstrapContextualColors.DANGER);\n    });\n}\n\nfunction sendRemindersToStudents(urlLink) {\n    const $statusMessage = $('#statusMessagesToUser');\n    $.ajax({\n        type: 'POST',\n        url: urlLink,\n        beforeSend() {\n            $statusMessage.html('<img src=\"/images/ajax-loader.gif\">');\n            $statusMessage.css('display', 'block');\n        },\n        error() {\n            $statusMessage.html('An error has occurred while sending reminder. Please try again.');\n        },\n        success(data) {\n            const statusToUser = $(data).find('#statusMessagesToUser').html();\n            $statusMessage.html(statusToUser);\n\n            scrollToElement($statusMessage[0], { duration: 1000 });\n        },\n    });\n}\n\nfunction resendPublishedEmailToStudents(urlLink) {\n    const $statusMessage = $('#statusMessagesToUser');\n    $.ajax({\n        type: 'POST',\n        url: urlLink,\n        beforeSend() {\n            $statusMessage.html('<img src=\"/images/ajax-loader.gif\">');\n            $statusMessage.css('display', 'block');\n        },\n        error() {\n            $statusMessage.html('An error has occurred while requesting for emails to be resent. Please try again.');\n        },\n        success(data) {\n            const statusToUser = $(data).find('#statusMessagesToUser').html();\n            $statusMessage.html(statusToUser);\n\n            scrollToElement($statusMessage[0], { duration: 1000 });\n        },\n    });\n}\n\nfunction attachEventToDeleteAllStudentLink() {\n    $('body').on('click', '.course-student-delete-all-link', (event) => {\n        event.preventDefault();\n\n        const $clickedLink = $(event.currentTarget);\n        const messageText = `Are you sure you want to remove all students\n                from the course ${$clickedLink.data('courseId')}?`;\n        const okCallback = () => {\n            window.location = $clickedLink.attr('href');\n        };\n\n        showModalConfirmation('Confirm deletion', messageText, okCallback, null,\n                null, null, BootstrapContextualColors.DANGER);\n    });\n}\n\nfunction bindRemindButtons() {\n    $('body').on('click', '.session-remind-inner-for-test, .session-remind-for-test', (event) => {\n        event.preventDefault();\n\n        const $button = $(event.currentTarget);\n        const messageText = 'Send e-mails to remind students who have not submitted their feedback for '\n                + `${$button.data('fsname')}?`;\n        const okCallback = function () {\n            const urlLink = $button.attr('href');\n            sendRemindersToStudents(urlLink);\n        };\n\n        showModalConfirmation('Confirm sending reminders', messageText, okCallback, null,\n                null, null, BootstrapContextualColors.INFO);\n    });\n}\n\nfunction bindPublishButtons() {\n    $('body').on('click', '.session-publish-for-test', function (event) {\n        event.preventDefault();\n\n        const $button = $(this);\n        const feedbackSessionName = $button.data('fsname');\n        let messageText = `Are you sure you want to publish the responses for the session \"${feedbackSessionName}\"?`;\n\n        const isSendingPublishedEmail = $button.data('sending-published-email');\n        if (isSendingPublishedEmail) {\n            messageText += ' An email will be sent to students to inform them that the responses are ready for viewing.';\n        }\n\n        const okCallback = function () {\n            window.location = $button.attr('href');\n        };\n\n        showModalConfirmation('Confirm publishing responses', messageText, okCallback, null,\n                null, null, BootstrapContextualColors.WARNING);\n    });\n}\n\nfunction bindUnpublishButtons() {\n    $('body').on('click', '.session-unpublish-for-test', (event) => {\n        event.preventDefault();\n\n        const $button = $(event.currentTarget);\n        const messageText = `Are you sure you want to unpublish the session \"${$button.data('fsname')}\"?\n                             An email will be sent to students to inform them that the session has been unpublished\n                             and the session responses will no longer be viewable by students.`;\n        const okCallback = function () {\n            window.location = $button.attr('href');\n        };\n\n        showModalConfirmation('Confirm unpublishing responses', messageText, okCallback, null,\n                null, null, BootstrapContextualColors.WARNING);\n    });\n}\n\n// --------------------------------------------------------------------------\n\n/**\n * Selects contents inside an element.\n * @param {HTML DOM Object} elementNode The element to select contents from.\n */\nfunction selectElementContents(elementNode) {\n    const { body } = document;\n    let range;\n    if (document.createRange && window.getSelection) {\n        range = document.createRange();\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        try {\n            range.selectNodeContents(elementNode);\n            selection.addRange(range);\n        } catch (e) {\n            range.selectNode(elementNode);\n            selection.addRange(range);\n        }\n    } else if (body.createTextRange) {\n        range = body.createTextRange();\n        range.moveToElementText(elementNode);\n        range.select();\n    }\n}\n\n/**\n * Simulates the copy action in the right-click menu, typically 'Ctrl + C'.\n */\nfunction executeCopyCommand() {\n    document.execCommand('copy');\n}\n\n// Initial load-up\n// -----------------------------------------------------------------------------\n\nfunction prepareInstructorPages() {\n    // bind the show picture onclick events\n    bindStudentPhotoLink('.profile-pic-icon-click > .student-profile-pic-view-link');\n\n    // bind the show picture onhover events\n    bindStudentPhotoHoverLink('.profile-pic-icon-hover');\n\n    // bind the event handler to show confirmation modal\n    bindCourseDeleteLinks();\n    bindSessionDeleteLinks();\n}\n\nexport {\n    attachEventToDeleteStudentLink,\n    attachEventToDeleteAllStudentLink,\n    attachEventToSendInviteLink,\n    bindDeleteButtons,\n    bindPublishButtons,\n    bindRemindButtons,\n    bindStudentPhotoHoverLink,\n    bindStudentPhotoLink,\n    bindUnpublishButtons,\n    executeCopyCommand,\n    initializeTimeZoneOptions,\n    prepareInstructorPages,\n    resendPublishedEmailToStudents,\n    selectElementContents,\n    setupFsCopyModal,\n    sendRemindersToStudents,\n};\n","/**\n * Computes the number of characters left in the text input\n * @param $textInput - The text input for which the number of characters are to be counted\n * @param remainingCharactersElementId - The ID of the HTML element that displays the value of the remaining characters\n */\nfunction computeRemainingCharactersCount($textInput, remainingCharactersElementId) {\n    const maxLength = $textInput.attr('maxLength');\n    const currentLength = $textInput.val().length;\n    $(`#${remainingCharactersElementId}`).text(maxLength - currentLength);\n}\n/**\n * Inserts the remaining characters count for the text input into the designated HTML element\n * @param $textInput - The text input for which the number of characters are to be counted\n * @param remainingCharactersElementId - The ID of the HTML element that displays the value of the remaining characters\n */\nfunction insertRemainingCharactersCount($textInput, remainingCharactersElementId) {\n    const maxLength = $textInput.attr('maxlength');\n    if ($(`#${remainingCharactersElementId}`).length === 0) {\n        const charactersLeftSpan = `<span id=\"${remainingCharactersElementId}\">${maxLength}</span>`;\n        const remainingCharactersTemplate = `<div>${charactersLeftSpan} characters left </div>`;\n        $(remainingCharactersTemplate).insertAfter($textInput);\n    }\n}\n\n/**\n * Computes the number of remaining characters left in the text input upon 'input' event\n * @param textInputId - The ID of the text input for which the number of characters are to be counted\n */\nfunction countRemainingCharactersOnInput(textInputId) {\n    const $textInput = $(`#${textInputId}`);\n    const remainingCharactersElementId = `charLeft-${textInputId}`;\n\n    insertRemainingCharactersCount($textInput, remainingCharactersElementId);\n\n    computeRemainingCharactersCount($textInput, remainingCharactersElementId);\n    $textInput.on('input', e => computeRemainingCharactersCount($(e.currentTarget), remainingCharactersElementId));\n}\n\nexport {\n    countRemainingCharactersOnInput,\n};\n","/* global moment:false */\n\nfunction isSupportedByJava(name) {\n    // These short timezones are not supported by Java\n    const badZones = {\n        EST: true, 'GMT+0': true, 'GMT-0': true, HST: true, MST: true, ROC: true,\n    };\n    return !badZones[name];\n}\n\nconst TimeZone = {\n    /**\n     * Generate time zone <option>s using time zone IDs from Moment-Timezone library\n     * and appends it under the specified element.\n     */\n    prepareTimeZoneInput($selectElement) {\n        function addLeadingZeroes(num) {\n            return (num > 9 ? '' : '0') + num;\n        }\n\n        function displayUtcOffset(offset) {\n            if (offset === 0) {\n                return 'UTC';\n            }\n            const hr = Math.floor(Math.abs(offset / 60));\n            const min = Math.abs(offset) % 60;\n            // offset is calculated as the number of minutes needed to get to UTC\n            // thus the +/- sign needs to be swapped\n            return `UTC${offset < 0 ? '+' : '-'}${addLeadingZeroes(hr)}:${addLeadingZeroes(min)}`;\n        }\n\n        moment.tz.names().filter(isSupportedByJava).forEach((name) => {\n            const o = document.createElement('option');\n            const date = new Date();\n            const offset = moment.tz.zone(name).utcOffset(date);\n            o.text = `${name} (${displayUtcOffset(offset)})`;\n            o.value = name;\n            $selectElement.append(o);\n        });\n    },\n\n    /**\n     * Automatically detects the user's time zone based on the local settings\n     * and updates the specified <select> field.\n     */\n    autoDetectAndUpdateTimeZone($selectElement) {\n        const detectedTimeZone = moment.tz.guess();\n        TimeZone.updateTimeZone($selectElement, detectedTimeZone);\n    },\n\n    /**\n     * Updates the specified <select> field with the chosen time zone.\n     */\n    updateTimeZone($selectElement, timeZone) {\n        if (moment.tz.names().filter(isSupportedByJava).indexOf(timeZone) !== -1) {\n            $selectElement.val(timeZone);\n        }\n    },\n};\n\nexport {\n    TimeZone,\n};\n","/**\n * Sets the chevron to point upwards.\n */\nfunction setChevronToUp(chevronContainer) {\n    chevronContainer.removeClass('glyphicon-chevron-down');\n    chevronContainer.addClass('glyphicon-chevron-up');\n}\n\n/**\n * Sets the chevron to point downwards.\n */\nfunction setChevronToDown(chevronContainer) {\n    chevronContainer.removeClass('glyphicon-chevron-up');\n    chevronContainer.addClass('glyphicon-chevron-down');\n}\n\n/**\n * Sets the chevron of a panel from up to down or from down to up depending on its current state.\n * clickedElement must be at least the parent of the chevron.\n */\nfunction toggleChevron(clickedElement) {\n    const $clickedElement = $(clickedElement);\n    const isChevronDown = $clickedElement.find('.glyphicon-chevron-down').length > 0;\n    const $chevronContainer = $clickedElement.find('.glyphicon-chevron-up, .glyphicon-chevron-down');\n\n    // clearQueue to clear the animation queue to prevent animation build up\n    $chevronContainer.clearQueue();\n\n    if (isChevronDown) {\n        setChevronToUp($chevronContainer);\n    } else {\n        setChevronToDown($chevronContainer);\n    }\n}\n\n/**\n * Shows panel's content and changes chevron to point up.\n */\nfunction showSingleCollapse(e) {\n    const heading = $(e).parent().children('.panel-heading');\n    const glyphIcon = $(heading[0]).find('.glyphicon');\n    setChevronToUp($(glyphIcon[0]));\n    $(e).collapse('show');\n    $(heading).find('a.btn').show();\n}\n\n/**\n * Hides panel's content and changes chevron to point down.\n */\nfunction hideSingleCollapse(e) {\n    const heading = $(e).parent().children('.panel-heading');\n    const glyphIcon = $(heading[0]).find('.glyphicon');\n    setChevronToDown($(glyphIcon[0]));\n    $(e).collapse('hide');\n    $(heading).find('a.btn').hide();\n}\n\n/**\n * Changes the state of the panel (collapsed/expanded).\n */\nfunction toggleSingleCollapse(e) {\n    if ($(e.target).is('a') || $(e.target).is('input')) {\n        return;\n    }\n    const glyphIcon = $(this).find('.glyphicon');\n    const className = $(glyphIcon[0]).attr('class');\n    if (className.indexOf('glyphicon-chevron-up') === -1) {\n        showSingleCollapse($(e.currentTarget).attr('data-target'));\n    } else {\n        hideSingleCollapse($(e.currentTarget).attr('data-target'));\n    }\n}\n\nfunction addLoadingIndicator(button, loadingText) {\n    button.html(loadingText);\n    button.prop('disabled', true);\n    button.append('<img src=\"/images/ajax-loader.gif\">');\n}\n\nfunction removeLoadingIndicator(button, displayText) {\n    button.empty();\n    button.html(displayText);\n    button.prop('disabled', false);\n}\n\n/**\n * Highlights all words of searchKey (case insensitive), in a particular section\n * Format of the string  higlight plugin uses - ( ['string1','string2',...] )\n * @param searchKeyId - Id of searchKey input field\n * @param sectionToHighlight - sections to higlight separated by ',' (comma)\n *                             Example- '.panel-body, #panel-data, .sub-container'\n */\nfunction highlightSearchResult(searchKeyId, sectionToHighlight) {\n    const searchKey = $(searchKeyId).val().trim();\n    // split search key string on symbols and spaces and add to searchKeyList\n    let searchKeyList = [];\n    if (searchKey.charAt(0) === '\"' && searchKey.charAt(searchKey.length - 1) === '\"') {\n        searchKeyList.push(searchKey.replace(/\"/g, '').trim());\n    } else {\n        $.each(searchKey.split(/[ \"'.-]/), function () {\n            searchKeyList.push($.trim(this));\n        });\n    }\n    // remove empty elements from searchKeyList\n    searchKeyList = searchKeyList.filter(n => n !== '');\n    $(sectionToHighlight).highlight(searchKeyList);\n}\n\n// Toggle the visibility of additional question information for the specified question.\nfunction toggleAdditionalQuestionInfo(identifier) {\n    const $questionButton = $(`#questionAdditionalInfoButton-${identifier}`);\n\n    if ($questionButton.text() === $questionButton.attr('data-more')) {\n        $questionButton.text($questionButton.attr('data-less'));\n    } else {\n        $questionButton.text($questionButton.attr('data-more'));\n    }\n\n    $(`#questionAdditionalInfo-${identifier}`).toggle();\n}\n\n/**\n * Disallow non-numeric entries\n * [Source: http://stackoverflow.com/questions/995183/how-to-allow-only-numeric-0-9-in-html-inputbox-using-jquery]\n */\nfunction disallowNonNumericEntries(element, decimalPointAllowed, negativeAllowed) {\n    element.on('keydown', (event) => {\n        const key = event.which;\n        // Allow: backspace, delete, tab, escape, enter\n        if ([46, 8, 9, 27, 13].indexOf(key) !== -1\n                // Allow: Ctrl+A\n                || (key === 65 && event.ctrlKey)\n                // Allow: home, end, left, right\n                || (key >= 35 && key <= 39)\n                // Allow dot if decimal point is allowed\n                || (decimalPointAllowed && key === 190)\n                // Allow hyphen if negative is allowed\n                // Code differs by browser (FF/Opera:109, IE/Chrome:189)\n                // see http://www.javascripter.net/faq/keycodes.htm\n                || (negativeAllowed && (key === 189 || key === 109))) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is a number and stop the keypress\n        if (event.shiftKey || ((key < 48 || key > 57) && (key < 96 || key > 105))) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    });\n}\n\nexport {\n    addLoadingIndicator,\n    disallowNonNumericEntries,\n    hideSingleCollapse,\n    highlightSearchResult,\n    removeLoadingIndicator,\n    showSingleCollapse,\n    toggleAdditionalQuestionInfo,\n    toggleChevron,\n    toggleSingleCollapse,\n};\n","/* global tinymce:false */\n\n/* eslint-disable camelcase */ // The property names are determined by external library (tinymce)\nconst richTextEditorBuilder = {\n    getDefaultConfiguration() {\n        return {\n            theme: 'modern',\n            fontsize_formats: '8pt 9pt 10pt 11pt 12pt 14pt 16pt 18pt 20pt 24pt 26pt 28pt 36pt 48pt 72pt',\n            font_formats: 'Andale Mono=andale mono,times;'\n                          + 'Arial=arial,helvetica,sans-serif;'\n                          + 'Arial Black=arial black,avant garde;'\n                          + 'Book Antiqua=book antiqua,palatino;'\n                          + 'Comic Sans MS=comic sans ms,sans-serif;'\n                          + 'Courier New=courier new,courier;'\n                          + 'Georgia=georgia,palatino;'\n                          + 'Helvetica=helvetica;'\n                          + 'Impact=impact,chicago;'\n                          + 'Symbol=symbol;'\n                          + 'Tahoma=tahoma,arial,helvetica,sans-serif;'\n                          + 'Terminal=terminal,monaco;'\n                          + 'Times New Roman=times new roman,times;'\n                          + 'Trebuchet MS=trebuchet ms,geneva;'\n                          + 'Verdana=verdana,geneva;'\n                          + 'Webdings=webdings;'\n                          + 'Wingdings=wingdings,zapf dingbats',\n\n            relative_urls: false,\n            convert_urls: false,\n            remove_linebreaks: false,\n            plugins: [\n                'advlist autolink lists link image charmap print preview hr anchor pagebreak',\n                'searchreplace wordcount visualblocks visualchars code fullscreen',\n                'insertdatetime nonbreaking save table contextmenu directionality',\n                'emoticons template paste textcolor colorpicker textpattern',\n            ],\n\n            toolbar1: 'insertfile undo redo | styleselect | bold italic underline | '\n                    + 'alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',\n            toolbar2: 'print preview | forecolor backcolor | fontsizeselect fontselect | emoticons | fullscreen',\n\n            init_instance_callback: 'initEditorCallback',\n\n        };\n    },\n\n    initEditor(selector, opts) {\n        tinymce.init($.extend(this.getDefaultConfiguration(), {\n            selector,\n        }, opts));\n    },\n\n};\n/* eslint-enable camelcase */\n\nfunction setPlaceholderText(editor) {\n    if (editor.getContent() === '') {\n        tinymce.DOM.addClass(editor.bodyElement, 'empty');\n    } else {\n        tinymce.DOM.removeClass(editor.bodyElement, 'empty');\n    }\n}\n\nfunction initEditorCallback(editor) {\n    tinymce.DOM.addClass(editor.bodyElement, 'content-editor');\n    setPlaceholderText(editor);\n\n    editor.on('selectionchange', () => {\n        setPlaceholderText(editor);\n    });\n}\n\nwindow.initEditorCallback = initEditorCallback;\n\n/**\n * Destroys an instance of TinyMCE rich-text editor.\n */\nfunction destroyEditor(id) {\n    if (typeof tinymce === 'undefined') {\n        return;\n    }\n    const currentEditor = tinymce.get(id);\n    if (currentEditor) {\n        currentEditor.destroy();\n    }\n}\n\nexport {\n    destroyEditor,\n    richTextEditorBuilder,\n};\n","/**\n * Adds an event handler on all passed in divs to open datepicker on 'click'.\n * @assumption: all passed in divs are valid datepicker divs\n */\nfunction triggerDatepickerOnClick(datepickerDivs) {\n    $.each(datepickerDivs, (i, datepickerDiv) => {\n        datepickerDiv.on('click', () => {\n            if (!datepickerDiv.prop('disabled')) {\n                datepickerDiv.datepicker('show');\n            }\n        });\n    });\n}\n\n/**\n * @assumption: startDate has a valid value\n * @returns {Date} publishDate if it is valid and smaller than startDate, else startDate\n */\nfunction getMaxDateForVisibleDate(startDate, publishDate) {\n    let minDate = 0;\n\n    if (publishDate === null || publishDate === undefined) {\n        minDate = startDate;\n    } else if (startDate > publishDate) {\n        minDate = publishDate;\n    } else {\n        minDate = startDate;\n    }\n\n    return minDate;\n}\n\n/**\n * @assumption: visibleDate has a valid value\n * @returns {Date} visibleDate\n */\nfunction getMinDateForPublishDate(visibleDate) {\n    return visibleDate;\n}\n\nfunction prepareDatepickers() {\n    const today = new Date();\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    const tomorrow = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const dateFormatDddMyy = 'D, dd M, yy';\n\n    const defaultStartDate = $('#startdate').val() === '' ? today : $('#startdate').val();\n\n    $('#startdate').datepicker({\n        dateFormat: dateFormatDddMyy,\n        showOtherMonths: true,\n        gotoCurrent: true,\n        defaultDate: today,\n        onSelect() {\n            const newVisibleDate = getMaxDateForVisibleDate($('#startdate').datepicker('getDate'),\n                    $('#publishdate').datepicker('getDate'));\n            $('#visibledate').datepicker('option', 'maxDate', newVisibleDate);\n\n            const newPublishDate = getMinDateForPublishDate($('#visibledate').datepicker('getDate'));\n            $('#publishdate').datepicker('option', 'minDate', newPublishDate);\n        },\n    });\n\n    $('#enddate').datepicker({\n        dateFormat: dateFormatDddMyy,\n        showOtherMonths: true,\n        gotoCurrent: true,\n        defaultDate: tomorrow,\n    });\n\n    $('#visibledate').datepicker({\n        dateFormat: dateFormatDddMyy,\n        showOtherMonths: true,\n        gotoCurrent: true,\n        defaultDate: yesterday,\n        maxDate: defaultStartDate,\n        onSelect() {\n            const newPublishDate = getMinDateForPublishDate($('#visibledate').datepicker('getDate'));\n            $('#publishdate').datepicker('option', 'minDate', newPublishDate);\n        },\n        onClose() {\n            if ($('#startdate').val() === $('#visibledate').val()) {\n                const $startTime = $('#starttime');\n                const $visibleTime = $('#visibletime');\n                // the visible time should not be later than the start time\n                if (parseInt($startTime.val(), 10) < parseInt($visibleTime.val(), 10)) {\n                    $visibleTime.val($startTime.val());\n                }\n            }\n        },\n    });\n\n    $('#publishdate').datepicker({\n        dateFormat: dateFormatDddMyy,\n        showOtherMonths: true,\n        gotoCurrent: true,\n        defaultDate: tomorrow,\n        onSelect() {\n            const newVisibleDate = getMaxDateForVisibleDate($('#startdate').datepicker('getDate'),\n                    $('#publishdate').datepicker('getDate'));\n            $('#visibledate').datepicker('option', 'maxDate', newVisibleDate);\n        },\n    });\n\n    triggerDatepickerOnClick([$('#startdate'), $('#enddate'), $('#visibledate'), $('#publishdate')]);\n}\n\nexport {\n    getMaxDateForVisibleDate, // for test\n    getMinDateForPublishDate, // for test\n    prepareDatepickers,\n    triggerDatepickerOnClick, // for test\n};\n","import {\n    ParamsNames,\n} from './const';\n\nfunction updateUncommonSettingsSessionVisibilityInfo() {\n    const info = 'Session is visible at submission opening time, '\n             + 'responses are only visible when you publish the results.';\n\n    $('#uncommonSettingsSessionResponsesVisibleInfoText').html(info);\n}\n\nfunction updateUncommonSettingsEmailSendingInfo() {\n    const info = 'Emails are sent when session opens (within 15 mins), '\n             + '24 hrs before session closes and when results are published.';\n\n    $('#uncommonSettingsSendEmailsInfoText').html(info);\n}\n\nfunction updateUncommonSettingsInfo() {\n    updateUncommonSettingsSessionVisibilityInfo();\n    updateUncommonSettingsEmailSendingInfo();\n}\n\nfunction isDefaultSessionResponsesVisibleSetting() {\n    return $('#sessionVisibleFromButton_atopen').prop('checked')\n           && $('#resultsVisibleFromButton_later').prop('checked');\n}\n\nfunction isDefaultSendEmailsSetting() {\n    return $('#sendreminderemail_open').prop('checked')\n           && $('#sendreminderemail_closing').prop('checked')\n           && $('#sendreminderemail_published').prop('checked');\n}\n\nfunction showUncommonPanelsForSessionResponsesVisible() {\n    const $sessionResponsesVisiblePanel = $('#sessionResponsesVisiblePanel');\n\n    $('#uncommonSettingsSessionResponsesVisible').after($sessionResponsesVisiblePanel);\n    $sessionResponsesVisiblePanel.show();\n    $('#uncommonSettingsSessionResponsesVisibleInfoText').parent().hide();\n}\n\nfunction showUncommonPanelsForSendEmails() {\n    const $sendEmailsForPanel = $('#sendEmailsForPanel');\n\n    $('#uncommonSettingsSendEmails').after($sendEmailsForPanel);\n    $sendEmailsForPanel.show();\n    $('#uncommonSettingsSendEmailsInfoText').parent().hide();\n}\n\nfunction showUncommonPanelsIfNotInDefaultValues() {\n    if (!isDefaultSessionResponsesVisibleSetting()) {\n        showUncommonPanelsForSessionResponsesVisible();\n    }\n\n    if (!isDefaultSendEmailsSetting()) {\n        showUncommonPanelsForSendEmails();\n    }\n}\n\nfunction bindUncommonSettingsEvents() {\n    $('#editUncommonSettingsSessionResponsesVisibleButton')\n            .click(showUncommonPanelsForSessionResponsesVisible);\n    $('#editUncommonSettingsSendEmailsButton')\n            .click(showUncommonPanelsForSendEmails);\n}\n\n/**\n * Saves the (disabled) state of the element in attribute data-last.<br>\n * Toggles whether the given element {@code id} is disabled or not based on\n * {@code bool}.<br>\n * Disabled if true, enabled if false.\n */\nfunction toggleDisabledAndStoreLast(id, bool) {\n    $(`#${id}`).prop('disabled', bool);\n    $(`#${id}`).data('last', $(`#${id}`).prop('disabled'));\n}\n\n/**\n * Toggles whether custom fields are enabled or not for session visible time based\n * on checkbox selection.\n * @param $privateBtn\n */\nfunction formatResponsesVisibilityGroup() {\n    const $responsesVisibilityBtnGroup = $(`[name=${ParamsNames.FEEDBACK_SESSION_RESULTSVISIBLEBUTTON}]`);\n    $responsesVisibilityBtnGroup.change(() => {\n        if ($responsesVisibilityBtnGroup.filter(':checked').val() === 'custom') {\n            toggleDisabledAndStoreLast(ParamsNames.FEEDBACK_SESSION_PUBLISHDATE, false);\n            toggleDisabledAndStoreLast(ParamsNames.FEEDBACK_SESSION_PUBLISHTIME, false);\n        } else {\n            toggleDisabledAndStoreLast(ParamsNames.FEEDBACK_SESSION_PUBLISHDATE, true);\n            toggleDisabledAndStoreLast(ParamsNames.FEEDBACK_SESSION_PUBLISHTIME, true);\n        }\n    });\n}\n\n/**\n * Hides / shows the 'Submissions Opening/Closing Time' and 'Grace Period' options\n * depending on whether a private session is selected.<br>\n * Toggles whether custom fields are enabled or not for session visible time based\n * on checkbox selection.\n * @param $privateBtn\n */\nfunction formatSessionVisibilityGroup() {\n    const $sessionVisibilityBtnGroup = $(`[name=${ParamsNames.FEEDBACK_SESSION_SESSIONVISIBLEBUTTON}]`);\n    $sessionVisibilityBtnGroup.change(() => {\n        if ($sessionVisibilityBtnGroup.filter(':checked').val() === 'custom') {\n            toggleDisabledAndStoreLast(ParamsNames.FEEDBACK_SESSION_VISIBLEDATE, false);\n            toggleDisabledAndStoreLast(ParamsNames.FEEDBACK_SESSION_VISIBLETIME, false);\n        } else {\n            toggleDisabledAndStoreLast(ParamsNames.FEEDBACK_SESSION_VISIBLEDATE, true);\n            toggleDisabledAndStoreLast(ParamsNames.FEEDBACK_SESSION_VISIBLETIME, true);\n        }\n    });\n}\n\nexport {\n    bindUncommonSettingsEvents,\n    formatResponsesVisibilityGroup,\n    formatSessionVisibilityGroup,\n    showUncommonPanelsIfNotInDefaultValues,\n    updateUncommonSettingsInfo,\n};\n","import {\n    ParamsNames,\n} from './const';\n\nconst ROW_RECIPIENT = 1;\nconst ROW_GIVER_TEAM = 2;\nconst ROW_RECIPIENT_TEAM = 3;\nconst ROW_OTHER_STUDENTS = 4;\nconst ROW_INSTRUCTORS = 5;\n\nconst NEW_QUESTION = -1;\n\n// ////////////// //\n// HELPER METHODS //\n// ////////////// //\n\nfunction setVisibilityDropdownMenuText(text, $containingForm) {\n    const $visibilityDropdown = $containingForm.find('.visibility-options-dropdown');\n\n    if (text === 'Custom visibility options...') {\n        $visibilityDropdown.find('button').text('Custom visibility option:');\n    } else {\n        $visibilityDropdown.find('button').text(text);\n    }\n}\n\nfunction uncheckAllVisibilityOptionCheckboxes($containingForm) {\n    $containingForm.find('input.visibilityCheckbox').each((index, checkbox) => {\n        checkbox.checked = false;\n    });\n}\n\n/**\n * Checks the checkboxes for recipient\n * @param checkboxClass - the CSS class of the checkbox to be checked\n */\nfunction allowRecipientToSee(checkboxClass, $containingForm) {\n    $containingForm.find(`input[type=\"checkbox\"][value=\"RECEIVER\"]${checkboxClass}`).prop('checked', true);\n}\n\n/**\n * Checks the checkboxes for giver's team members\n * @param checkboxClass - the CSS class of the checkbox to be checked\n */\nfunction allowGiversTeamToSee(checkboxClass, $containingForm) {\n    $containingForm.find(`input[type=\"checkbox\"][value=\"OWN_TEAM_MEMBERS\"]${checkboxClass}`).prop('checked', true);\n}\n\n/**\n * Checks the checkboxes for recipient's team members\n * @param checkboxClass - the CSS class of the checkbox to be checked\n */\nfunction allowRecipientsTeamToSee(checkboxClass, $containingForm) {\n    $containingForm.find(`input[type=\"checkbox\"][value=\"RECEIVER_TEAM_MEMBERS\"]${checkboxClass}`).prop('checked', true);\n}\n\n/**\n * Checks the checkboxes for instructors\n * @param checkboxClass - the CSS class of the checkbox to be checked\n */\nfunction allowInstructorToSee(checkboxClass, $containingForm) {\n    $containingForm.find(`input[type=\"checkbox\"][value=\"INSTRUCTORS\"]${checkboxClass}`).prop('checked', true);\n}\n\n/**\n * Checks the visibility checkboxes according to the common visibility option as selected using the dropdown menu\n */\nfunction checkCorrespondingCheckboxes(selectedOption, $containingForm) {\n    switch (selectedOption) {\n    case 'OTHER':\n        return;\n    case 'ANONYMOUS_TO_RECIPIENT_AND_INSTRUCTORS':\n        // recipient and instructor can see answer and recipient, but not giver name\n        allowRecipientToSee('.answerCheckbox', $containingForm);\n        allowRecipientToSee('.recipientCheckbox', $containingForm);\n\n        allowInstructorToSee('.answerCheckbox', $containingForm);\n        allowInstructorToSee('.recipientCheckbox', $containingForm);\n        break;\n    case 'ANONYMOUS_TO_RECIPIENT_VISIBLE_TO_INSTRUCTORS':\n        // recipient can see answer and recipient, but not giver name\n        allowRecipientToSee('.answerCheckbox', $containingForm);\n        allowRecipientToSee('.recipientCheckbox', $containingForm);\n\n        // instructor can see answer, recipient AND giver name\n        allowInstructorToSee('.answerCheckbox', $containingForm);\n        allowInstructorToSee('.giverCheckbox', $containingForm);\n        allowInstructorToSee('.recipientCheckbox', $containingForm);\n        break;\n    case 'ANONYMOUS_TO_RECIPIENT_AND_TEAM_VISIBLE_TO_INSTRUCTORS':\n        // recipient can see answer and recipient, but not giver name\n        allowRecipientToSee('.answerCheckbox', $containingForm);\n        allowRecipientToSee('.recipientCheckbox', $containingForm);\n\n        // instructor can see answer, recipient AND giver name\n        allowInstructorToSee('.answerCheckbox', $containingForm);\n        allowInstructorToSee('.giverCheckbox', $containingForm);\n        allowInstructorToSee('.recipientCheckbox', $containingForm);\n\n        // recipient team (same as givers team) can see answer and recipient, but not giver name\n        allowRecipientsTeamToSee('.answerCheckbox', $containingForm);\n        allowGiversTeamToSee('.answerCheckbox', $containingForm);\n        break;\n    case 'VISIBLE_TO_INSTRUCTORS_ONLY':\n        allowInstructorToSee('.answerCheckbox', $containingForm);\n        allowInstructorToSee('.giverCheckbox', $containingForm);\n        allowInstructorToSee('.recipientCheckbox', $containingForm);\n        break;\n    case 'VISIBLE_TO_RECIPIENT_AND_INSTRUCTORS':\n        allowRecipientToSee('.answerCheckbox', $containingForm);\n        allowRecipientToSee('.giverCheckbox', $containingForm);\n        allowRecipientToSee('.recipientCheckbox', $containingForm);\n\n        allowInstructorToSee('.answerCheckbox', $containingForm);\n        allowInstructorToSee('.giverCheckbox', $containingForm);\n        allowInstructorToSee('.recipientCheckbox', $containingForm);\n        break;\n    default:\n        throw new Error('Unexpected common visibility option type');\n    }\n}\n\n/**\n * Ensures the hidden checkbox for Recipient's Team Members can see answer is consistent with Recipient can see answer\n */\nfunction fixCheckboxValuesForTeamContribQuestion($containingForm) {\n    if ($containingForm.find('input[name=\"questiontype\"]').val() !== 'CONTRIB') {\n        return;\n    }\n    const recipientCanSeeAnswerCheckbox =\n        $containingForm.find('input.visibilityCheckbox').filter('[name=receiverLeaderCheckbox]');\n    const recipientTeamCanSeeAnswerCheckbox =\n        $containingForm.find('input.answerCheckbox').filter('[value=RECEIVER_TEAM_MEMBERS]');\n\n    if (recipientCanSeeAnswerCheckbox.prop('checked')) {\n        recipientTeamCanSeeAnswerCheckbox.prop('checked', true);\n    }\n}\n\n/**\n * Pushes the values of all checked check boxes for the specified question\n * into the appropriate feedback question parameters.\n * @returns questionNum\n */\nfunction tallyCheckboxes(questionNum) {\n    // update hidden parameters (the values in checkboxTypes)\n    const checkboxTypes = {\n        '.answerCheckbox': ParamsNames.FEEDBACK_QUESTION_SHOWRESPONSESTO,\n        '.giverCheckbox': ParamsNames.FEEDBACK_QUESTION_SHOWGIVERTO,\n        '.recipientCheckbox': ParamsNames.FEEDBACK_QUESTION_SHOWRECIPIENTTO,\n    };\n\n    $.each(checkboxTypes, (className, checkboxType) => {\n        const checked = [];\n        $(`#form_editquestion-${questionNum}`).find(`${className}:checked`).each(function () {\n            checked.push($(this).val());\n        });\n        $(`[name=${checkboxType}]`).val(checked.toString());\n    });\n}\n\n/**\n * Binds each question's check box field such that the user\n * cannot select an invalid combination.\n */\nfunction formatCheckBoxes() {\n    $('.visibility-checkbox-delegate').on('change', 'input.answerCheckbox', (e) => {\n        const checkbox = $(e.target);\n        if (!checkbox.is(':checked')) {\n            const $editTabRows = checkbox.closest('tr');\n            $editTabRows.find('input.giverCheckbox').prop('checked', false);\n            $editTabRows.find('input.recipientCheckbox').prop('checked', false);\n        }\n    });\n    $('.visibility-checkbox-delegate').on('change', 'input.giverCheckbox', (e) => {\n        const checkbox = $(e.target);\n        if (checkbox.is(':checked')) {\n            const $editTabRows = checkbox.closest('tr');\n            $editTabRows.find('input.answerCheckbox').prop('checked', true).trigger('change');\n        }\n    });\n    $('.visibility-checkbox-delegate').on('change', 'input.recipientCheckbox', (e) => {\n        const checkbox = $(e.target);\n        if (checkbox.is(':checked')) {\n            const $editTabRows = checkbox.closest('tr');\n            $editTabRows.find('input.answerCheckbox').prop('checked', true);\n        }\n    });\n    $('.visibility-checkbox-delegate').on('change', 'input[name=receiverLeaderCheckbox]', (e) => {\n        const checkbox = $(e.target);\n        const $editTabRows = checkbox.closest('tr');\n        $editTabRows.find('input[name=receiverFollowerCheckbox]').prop('checked', checkbox.prop('checked'));\n    });\n}\n\nfunction enableRow($containingForm, row) {\n    const $table = $containingForm.find('.visibilityOptions').find('table');\n    $($table.children().children()[row]).show();\n}\n\nfunction disableRow($containingForm, row) {\n    const $table = $containingForm.find('.visibilityOptions').find('table');\n    const $row = $($table.children().children()[row]);\n    $row.find('input[type=\"checkbox\"]').each((index, checkbox) => {\n        checkbox.checked = false;\n    });\n    $row.hide();\n}\n\nfunction enableAllRows($containingForm) {\n    const allRows = [ROW_RECIPIENT, ROW_GIVER_TEAM, ROW_RECIPIENT_TEAM, ROW_OTHER_STUDENTS, ROW_INSTRUCTORS];\n    allRows.forEach((row) => {\n        enableRow($containingForm, row);\n    });\n}\n\nfunction disableRowsAccordingToRecipient($containingForm) {\n    const recipientType = $containingForm.find('select[name=\"recipienttype\"]').val();\n    switch (recipientType) {\n    case 'SELF':\n        // ROW_RECIPIENT is disabled because self-feedback is always visible to giver\n        disableRow($containingForm, ROW_RECIPIENT);\n        // ROW_RECIPIENT_TEAM is disabled because it is the same as ROW_GIVER_TEAM\n        disableRow($containingForm, ROW_RECIPIENT_TEAM);\n        break;\n    case 'STUDENTS':\n        // all options enabled when recipientType is STUDENTS (subject to options disabled by giverType)\n        break;\n    case 'OWN_TEAM':\n        // ROW_RECIPIENT and ROW_RECIPIENT_TEAM are disabled because they are the same as ROW_GIVER_TEAM\n        disableRow($containingForm, ROW_RECIPIENT);\n        disableRow($containingForm, ROW_RECIPIENT_TEAM);\n        break;\n    case 'INSTRUCTORS':\n        // ROW_RECIPIENT_TEAM is disabled because it is the same as ROW_INSTRUCTORS\n        disableRow($containingForm, ROW_RECIPIENT_TEAM);\n        break;\n    case 'TEAMS':\n        // ROW_RECIPIENT_TEAM is disabled because it is the same as ROW_RECIPIENT\n        disableRow($containingForm, ROW_RECIPIENT_TEAM);\n        break;\n    case 'OWN_TEAM_MEMBERS':\n    case 'OWN_TEAM_MEMBERS_INCLUDING_SELF':\n        // ROW_RECIPIENT_TEAM is disabled for OWN_TEAM_MEMBERS and OWN_TEAM_MEMBERS_INCLUDING_SELF\n        // because it is the same as ROW_GIVER_TEAM\n        disableRow($containingForm, ROW_RECIPIENT_TEAM);\n        break;\n    case 'NONE':\n        // ROW_RECIPIENT and ROW_RECIPIENT_TEAM are disabled because there are no recipients\n        disableRow($containingForm, ROW_RECIPIENT);\n        disableRow($containingForm, ROW_RECIPIENT_TEAM);\n        break;\n    default:\n        throw new Error('Unexpected recipientType');\n    }\n}\n\nfunction disableRowsAccordingToGiver($containingForm) {\n    const giverType = $containingForm.find('select[name=\"givertype\"]').val();\n    switch (giverType) {\n    case 'STUDENTS':\n        // all options enabled when giverType is STUDENTS (subject to options disabled by recipientType)\n        break;\n    case 'SELF':\n    case 'INSTRUCTORS':\n        // ROW_GIVER_TEAM is disabled for SELF and INSTRUCTORS because it is the same as ROW_INSTRUCTORS\n        disableRow($containingForm, ROW_GIVER_TEAM);\n        break;\n    case 'TEAMS':\n        // ROW_GIVER_TEAM is disabled for TEAMS because giver can always see the response\n        disableRow($containingForm, ROW_GIVER_TEAM);\n        break;\n    default:\n        throw new Error('Unexpected giverType');\n    }\n}\n\nfunction disableRowsForSpecificGiverRecipientCombinations($containingForm) {\n    const giverType = $containingForm.find('select[name=\"givertype\"]').val();\n    const recipientType = $containingForm.find('select[name=\"recipienttype\"]').val();\n\n    if ((giverType === 'SELF' || giverType === 'INSTRUCTORS') && recipientType === 'SELF') {\n        // ROW_RECIPIENT_TEAM is disbled because it is the same as ROW_INSTRUCTORS\n        disableRow($containingForm, ROW_RECIPIENT_TEAM);\n    } else if (giverType === 'TEAMS' && recipientType === 'OWN_TEAM_MEMBERS_INCLUDING_SELF') {\n        // ROW_RECIPIENT is disbled because this is almost like a self-feedback where giver can always see the response\n        disableRow($containingForm, ROW_RECIPIENT);\n    }\n}\n\n// Meant to be declared outside to prevent unncessary AJAX calls\nconst previousFormDataMap = {};\n\n/**\n * Updates the visibility checkboxes div to show/hide visibility option rows\n * according to the feedback path\n */\nfunction updateVisibilityCheckboxesDiv($containingForm) {\n    enableAllRows($containingForm);\n\n    disableRowsAccordingToGiver($containingForm);\n    disableRowsAccordingToRecipient($containingForm);\n    disableRowsForSpecificGiverRecipientCombinations($containingForm);\n\n    // handles edge case for Team Contribution Question:\n    // normal behavior is that all hidden checkboxes are unchecked, but Team Contribution Question expect even the hidden\n    // Recipient's Team Members can see answer checkbox to be checked\n    fixCheckboxValuesForTeamContribQuestion($containingForm);\n}\n\nfunction showVisibilityCheckboxesIfCustomOptionSelected($containingForm) {\n    const selectedOption = $containingForm.find('.visibility-options-dropdown > button').text().trim();\n    const $visibilityCheckboxes = $containingForm.find('.visibilityOptions');\n    if (selectedOption === 'Custom visibility option:') {\n        updateVisibilityCheckboxesDiv($containingForm);\n        $visibilityCheckboxes.show();\n    } else {\n        $visibilityCheckboxes.hide();\n    }\n}\n\nfunction formatVisibilityMessageDivHtml(visibilityMessage) {\n    let htmlString = 'This is the visibility hint as seen by the feedback giver:';\n    htmlString += '<ul class=\"text-muted background-color-warning\">';\n    for (let i = 0; i < visibilityMessage.length; i += 1) {\n        htmlString += `<li>${visibilityMessage[i]}</li>`;\n    }\n    htmlString += '</ul>';\n    return htmlString;\n}\n\n/**\n * Updates visibility message div with error message and add onclick event for re-loading the visibility message\n */\nfunction showAjaxErrorMessage($containingForm) {\n    const $visibilityMessageDiv = $containingForm.find('.visibility-message');\n\n    let htmlString = 'This is the visibility hint as seen by the feedback giver:';\n    htmlString += '<ul class=\"text-muted background-color-warning\">';\n    htmlString += '<li><a>Error loading visibility hint. Click here to retry.</a></li>';\n    htmlString += '</ul>';\n\n    $visibilityMessageDiv.html(htmlString);\n    $visibilityMessageDiv.find('ul').on('click', () => {\n        $visibilityMessageDiv.html('');\n        updateVisibilityMessageDiv($containingForm); // eslint-disable-line no-use-before-define\n    });\n}\n\n/**\n * Updates the visibility message div according to configurations in the\n * visibility checkboxes div (using AJAX)\n * @param $containingForm\n */\nfunction updateVisibilityMessageDiv($containingForm) {\n    const questionNum = $containingForm.find('[name=questionnum]').val();\n    const newQuestionNum = $('input[name=questionnum]').last().val();\n\n    if (questionNum === newQuestionNum) {\n        tallyCheckboxes(NEW_QUESTION);\n    } else {\n        tallyCheckboxes(questionNum);\n    }\n\n    const formData = $containingForm.serialize();\n    const $visibilityMessageDiv = $containingForm.find('.visibility-message');\n\n    if (previousFormDataMap[questionNum] === formData) {\n        return;\n    }\n\n    // empty current visibility message in the form\n    $visibilityMessageDiv.html('');\n\n    const url = '/page/instructorFeedbackQuestionvisibilityMessage';\n    $.ajax({\n        type: 'POST',\n        url,\n        data: formData,\n        beforeSend() {\n            $visibilityMessageDiv.html(\"<img src='/images/ajax-loader.gif'/>\");\n        },\n        success(data) {\n            // update stored form data\n            previousFormDataMap[questionNum] = formData;\n\n            $visibilityMessageDiv.html(formatVisibilityMessageDivHtml(data.visibilityMessage));\n        },\n        error() {\n            showAjaxErrorMessage($containingForm);\n        },\n    });\n}\n\n// ////////////// //\n// EVENT HANDLERS //\n// ////////////// //\n\nfunction matchVisibilityOptionToFeedbackPath(selectedFeedbackPathOption) {\n    const $containingForm = $(selectedFeedbackPathOption).closest('form');\n    updateVisibilityCheckboxesDiv($containingForm);\n}\n\nfunction getVisibilityMessage(clickedButton) {\n    const $containingForm = $(clickedButton).closest('form');\n    updateVisibilityMessageDiv($containingForm);\n}\n\n/**\n * binds events to the visibility dropdown menu to\n *  - show/hide visibility checkboxes div\n *  - update dropdown button text to reflected selected option\n *  - update visibility message div\n */\nfunction attachVisibilityDropdownEvent() {\n    $('body').on('click', '.visibility-options-dropdown-option', function () {\n        const $clickedElem = $(this);\n        const selectedOption = $clickedElem.data('optionName');\n        const $containingForm = $clickedElem.closest('form');\n\n        setVisibilityDropdownMenuText($clickedElem.text(), $containingForm);\n\n        const $editTab = $containingForm.find('.visibilityOptions');\n        if (selectedOption === 'OTHER') {\n            $editTab.show();\n            updateVisibilityCheckboxesDiv($containingForm);\n        } else {\n            // only uncheck all checkboxes and update accordingly if a common option is selected\n            uncheckAllVisibilityOptionCheckboxes($containingForm);\n            checkCorrespondingCheckboxes(selectedOption, $containingForm);\n            $editTab.hide();\n        }\n\n        updateVisibilityMessageDiv($containingForm);\n    });\n}\n\n/**\n * binds click event of each visibility checkbox to update visibility message div\n */\nfunction attachVisibilityCheckboxEvent() {\n    $('body').on('change', '.visibilityCheckbox', function () {\n        const $containingForm = $(this).closest('form');\n        updateVisibilityMessageDiv($containingForm);\n    });\n}\n\nexport {\n    attachVisibilityCheckboxEvent,\n    attachVisibilityDropdownEvent,\n    formatCheckBoxes,\n    getVisibilityMessage,\n    matchVisibilityOptionToFeedbackPath,\n    showVisibilityCheckboxesIfCustomOptionSelected,\n    tallyCheckboxes,\n};\n","import {\n    showModalConfirmation,\n} from './bootboxWrapper';\n\nimport {\n    BootstrapContextualColors,\n} from './const';\n\nimport {\n    disallowNonNumericEntries,\n} from './ui';\n\nfunction getRubricChoiceElem(questionNum, col) {\n    return $(`#rubricChoice-${questionNum}-${col}`);\n}\n\nfunction getRubricWeightElem(questionNum, col) {\n    return $(`#rubricWeight-${questionNum}-${col}`);\n}\n\nfunction getRubricDescElem(questionNum, row, col) {\n    return $(`#rubricDesc-${questionNum}-${row}-${col}`);\n}\n\nfunction swapRubricCol(questionNum, firstColIndex, secondColIndex) {\n    const numberOfRows = parseInt($(`#rubricNumRows-${questionNum}`).val(), 10);\n    const CHOICE = 'RUBRIC_CHOICE';\n    const WEIGHT = 'RUBRIC_WEIGHT';\n    const DESC = 'RUBRIC_DESC';\n    const elemSelector = (type, col, row = 0) => {\n        if (type === CHOICE) {\n            return getRubricChoiceElem(questionNum, col);\n        }\n        if (type === WEIGHT) {\n            return getRubricWeightElem(questionNum, col);\n        }\n        if (type === DESC) {\n            return getRubricDescElem(questionNum, row, col);\n        }\n\n        return null;\n    };\n\n    const swapValues = (type, row = 0) => {\n        const $a = elemSelector(type, firstColIndex, row);\n        const $b = elemSelector(type, secondColIndex, row);\n        const temp = $a.val();\n        $a.val($b.val());\n        $b.val(temp);\n    };\n\n    // swap rubric choices\n    swapValues(CHOICE);\n\n    // swap rubric weights\n    swapValues(WEIGHT);\n\n    // swap options filled\n    for (let row = 0; row < numberOfRows; row += 1) {\n        swapValues(DESC, row);\n    }\n}\n\nfunction moveRubricColIfPossible(questionNum, firstColIndex, isMoveLeft) {\n    if ($(`#rubricEditTable-${questionNum}`).length === 0\n            || $(`.rubricCol-${questionNum}-${firstColIndex}`).length === 0\n            || typeof isMoveLeft !== 'boolean') {\n        // question and column should exist, isMoveLeft must be boolean\n        return;\n    }\n\n    const $swapCell = $(`#rubric-options-row-${questionNum} .rubricCol-${questionNum}-${firstColIndex}`);\n    const rubricCellSelector = `td[class*='rubricCol-${questionNum}']`;\n\n    if ((isMoveLeft && $swapCell.prev(rubricCellSelector).length === 0)\n        || (!isMoveLeft && $swapCell.next(rubricCellSelector).length === 0)) {\n        // trying to swap left most or right most column\n        return;\n    }\n\n    let secondColIndex;\n\n    if (isMoveLeft) {\n        secondColIndex = $swapCell.prev(rubricCellSelector).attr('data-col');\n    } else {\n        secondColIndex = $swapCell.next(rubricCellSelector).attr('data-col');\n    }\n\n    swapRubricCol(questionNum, firstColIndex, secondColIndex);\n\n    const $form = $(`#form_editquestion-${questionNum}`);\n\n    if ($form.attr('editstatus') === 'hasResponses') {\n        $form.attr('editstatus', 'mustDeleteResponses');\n    }\n}\n\nfunction disableCornerMoveRubricColumnButtons(questionNum) {\n    const $optionColumns = $(`#rubric-options-row-${questionNum} td[class*='rubricCol-']`);\n\n    const disableMoveLeftOfFirstCol = () => {\n        const $leftmostCol = $optionColumns.first();\n        const leftmostColIndex = $leftmostCol.attr('data-col');\n        const $leftmostColLeftBtn = $leftmostCol.find(`#rubric-move-col-left-${questionNum}-${leftmostColIndex}`);\n\n        $leftmostColLeftBtn.prop('disabled', true);\n    };\n\n    const disableMoveRightOfLastCol = () => {\n        const $rightmostCol = $optionColumns.last();\n        const rightmostColIndex = $rightmostCol.attr('data-col');\n        const $rightmostColRightBtn = $rightmostCol.find(`#rubric-move-col-right-${questionNum}-${rightmostColIndex}`);\n\n        $rightmostColRightBtn.prop('disabled', true);\n    };\n\n    const enableMoveRightOfSecondLastCol = () => {\n        const $secondlastCol = $optionColumns.last().prev();\n        const secondlastColIndex = $secondlastCol.attr('data-col');\n        const $secondlastColRightBtn = $secondlastCol.find(`#rubric-move-col-right-${questionNum}-${secondlastColIndex}`);\n\n        $secondlastColRightBtn.prop('disabled', false);\n    };\n\n    if ($optionColumns.length < 2) {\n        disableMoveLeftOfFirstCol(questionNum);\n        disableMoveRightOfLastCol(questionNum);\n        return;\n    }\n\n    disableMoveLeftOfFirstCol(questionNum);\n    disableMoveRightOfLastCol(questionNum);\n    enableMoveRightOfSecondLastCol(questionNum);\n}\n\nfunction addRubricRow(questionNum) {\n    const questionId = `#form_editquestion-${questionNum}`;\n\n    const numberOfRows = parseInt($(`#rubricNumRows-${questionNum}`).val(), 10);\n    const numberOfCols = parseInt($(`#rubricNumCols-${questionNum}`).val(), 10);\n\n    const newRowNumber = numberOfRows + 1;\n\n    let rubricRowBodyFragments = '';\n    // Create numberOfCols of <td>'s\n    for (let cols = 0; cols < numberOfCols; cols += 1) {\n        if (!$(`.rubricCol-${questionNum}-${cols}`).length) {\n            continue;\n        }\n        const rubricRowFragment =\n            `<td class=\"align-center rubricCol-${questionNum}-${cols}\">\n                <textarea class=\"form-control\" rows=\"3\" id=\"rubricDesc-${questionNum}-${newRowNumber - 1}-${cols}\"\n                        name=\"rubricDesc-${newRowNumber - 1}-${cols}\"></textarea>\n            </td>`;\n        rubricRowBodyFragments += rubricRowFragment;\n    }\n\n    // Create new rubric row\n    const newRubricRow =\n        `<tr id=\"rubricRow-${questionNum}-${newRowNumber - 1}\">\n            <td>\n                <div class=\"col-sm-12 input-group\">\n                    <span class=\"input-group-addon btn btn-default rubricRemoveSubQuestionLink-${questionNum}\"\n                            id=\"rubricRemoveSubQuestionLink-${questionNum}-${newRowNumber - 1}\"\n                            onclick=\"removeRubricRow(${newRowNumber - 1}, ${questionNum})\"\n                            onmouseover=\"highlightRubricRow(${newRowNumber - 1}, ${questionNum}, true)\"\n                            onmouseout=\"highlightRubricRow(${newRowNumber - 1}, ${questionNum}, false)\">\n                        <span class=\"glyphicon glyphicon-remove\"></span>\n                    </span>\n                    <textarea class=\"form-control\" rows=\"3\" id=\"rubricSubQn-${questionNum}-${newRowNumber - 1}\"\n                            name=\"rubricSubQn-${newRowNumber - 1}\" required=\"\"></textarea>\n                </div>\n            </td>\n            ${rubricRowBodyFragments}\n        </tr>`;\n\n    // Row to insert new row after\n    const $secondLastRow = $(`#rubricEditTable-${questionNum} tbody tr:nth-last-child(2)`);\n    $(newRubricRow).insertAfter($secondLastRow);\n\n    // Increment\n    $(`#rubricNumRows-${questionNum}`).val(newRowNumber);\n\n    if ($(questionId).attr('editStatus') === 'hasResponses') {\n        $(questionId).attr('editStatus', 'mustDeleteResponses');\n    }\n}\n\nfunction addRubricCol(questionNum) {\n    const questionId = `#form_editquestion-${questionNum}`;\n\n    const numberOfRows = parseInt($(`#rubricNumRows-${questionNum}`).val(), 10);\n    const numberOfCols = parseInt($(`#rubricNumCols-${questionNum}`).val(), 10);\n\n    const newColNumber = numberOfCols + 1;\n\n    // Insert header <th>\n    const rubricHeaderFragment =\n        `<th class=\"rubricCol-${questionNum}-${newColNumber - 1}\">\n            <input type=\"text\" class=\"col-sm-12 form-control\" value=\"\"\n                    id=\"rubricChoice-${questionNum}-${newColNumber - 1}\"\n                    name=\"rubricChoice-${newColNumber - 1}\">\n        </th>`;\n\n    // Insert after last <th>\n    const lastTh = $(`#rubricEditTable-${questionNum}`).find('tr:first').children().last();\n    $(rubricHeaderFragment).insertAfter(lastTh);\n\n    // Insert weight <th>\n    const rubricWeightFragment =\n        `<th class=\"rubricCol-${questionNum}-${newColNumber - 1}\">\n            <input type=\"number\" class=\"form-control nonDestructive\" value=\"0\"\n                    id=\"rubricWeight-${questionNum}-${newColNumber - 1}\"\n                    name=\"rubricWeight-${newColNumber - 1}\" step=\"0.01\" required>\n        </th>`;\n\n    // Insert after last <th>\n    const lastWeightCell = $(`#rubricWeights-${questionNum} th:last`);\n    $(rubricWeightFragment).insertAfter(lastWeightCell);\n\n    disallowNonNumericEntries($(`#rubricWeight-${questionNum}-${newColNumber - 1}`), true, true);\n\n    // Create numberOfRows of <td>'s\n    for (let rows = 0; rows < numberOfRows; rows += 1) {\n        if (!$(`#rubricRow-${questionNum}-${rows}`).length) {\n            continue;\n        }\n        // Insert body <td>'s\n        const rubricRowFragment =\n            `<td class=\"align-center rubricCol-${questionNum}-${newColNumber - 1}\">\n                <textarea class=\"form-control\" rows=\"3\" id=\"rubricDesc-${questionNum}-${rows}-${newColNumber - 1}\"\n                        name=\"rubricDesc-${rows}-${newColNumber - 1}\"></textarea>\n            </td>`;\n\n        // Insert after previous <td>\n        const lastTd = $(`#rubricRow-${questionNum}-${rows} td:last`);\n        $(rubricRowFragment).insertAfter(lastTd);\n    }\n\n    // Add options row at the end\n    const optionsRow =\n        `<td class=\"align-center rubricCol-${questionNum}-${newColNumber - 1}\" data-col=\"${newColNumber - 1}\">\n            <div class=\"btn-group\">\n                <button type=\"button\" class=\"btn btn-default\" id=\"rubric-move-col-left-${questionNum}-${newColNumber - 1}\"\n                        data-toggle=\"tooltip\" data-placement=\"top\" title=\"Move column left\">\n                    <span class=\"glyphicon glyphicon-arrow-left\"></span>\n                </button>\n                <button type=\"button\" class=\"btn btn-default\" id=\"rubricRemoveChoiceLink-${questionNum}-${newColNumber - 1}\"\n                        onclick=\"removeRubricCol(${newColNumber - 1}, ${questionNum})\"\n                        onmouseover=\"highlightRubricCol(${newColNumber - 1}, ${questionNum}, true)\"\n                        onmouseout=\"highlightRubricCol(${newColNumber - 1}, ${questionNum}, false)\">\n                    <span class=\"glyphicon glyphicon-remove\"></span>\n                </button>\n                <button type=\"button\" class=\"btn btn-default\" id=\"rubric-move-col-right-${questionNum}-${newColNumber - 1}\"\n                        data-toggle=\"tooltip\" data-placement=\"top\" title=\"Move column right\">\n                    <span class=\"glyphicon glyphicon-arrow-right\"></span>\n                </button>\n            </div>\n        </td>`;\n\n    const $lastTd = $(`#rubric-options-row-${questionNum} td:last`);\n    $(optionsRow).insertAfter($lastTd);\n\n    // Initialize tooltips and set click event handlers for move column buttons\n    const $newColMoveLeftBtn = $(`#rubric-move-col-left-${questionNum}-${newColNumber - 1}`);\n    const $newColMoveRightBtn = $(`#rubric-move-col-right-${questionNum}-${newColNumber - 1}`);\n\n    $newColMoveLeftBtn.tooltip({ container: 'body' });\n    $newColMoveRightBtn.tooltip({ container: 'body' });\n\n    $newColMoveLeftBtn.click(() => {\n        moveRubricColIfPossible(questionNum, newColNumber - 1, true);\n    });\n\n    $newColMoveRightBtn.click(() => {\n        moveRubricColIfPossible(questionNum, newColNumber - 1, false);\n    });\n\n    // Increment\n    $(`#rubricNumCols-${questionNum}`).val(newColNumber);\n\n    if ($(questionId).attr('editStatus') === 'hasResponses') {\n        $(questionId).attr('editStatus', 'mustDeleteResponses');\n    }\n\n    disableCornerMoveRubricColumnButtons(questionNum);\n}\n\nfunction removeRubricRow(index, questionNum) {\n    const questionId = `#form_editquestion-${questionNum}`;\n\n    const $thisRow = $(`#rubricRow-${questionNum}-${index}`);\n\n    // count number of table rows from table body\n    const numberOfRows = $thisRow.parent().children('tr').length - 1; // exclude options row\n\n    const delStr = numberOfRows <= 1 ? 'clear' : 'delete';\n    const messageText = `Are you sure you want to ${delStr} the row?`;\n    const okCallback = function () {\n        if (numberOfRows <= 1) {\n            $thisRow.find('textarea').val('');\n        } else {\n            $thisRow.remove();\n\n            if ($(questionId).attr('editStatus') === 'hasResponses') {\n                $(questionId).attr('editStatus', 'mustDeleteResponses');\n            }\n        }\n    };\n    showModalConfirmation('Confirm Deletion', messageText, okCallback, null, null, null, BootstrapContextualColors.WARNING);\n}\n\nfunction removeRubricCol(index, questionNum) {\n    const questionId = `#form_editquestion-${questionNum}`;\n\n    const $thisCol = $(`.rubricCol-${questionNum}-${index}`);\n\n    // count number of table columns from table body\n    const numberOfCols = $thisCol.first().parent().children().length - 1;\n\n    const delStr = numberOfCols <= 1 ? 'clear' : 'delete';\n    const messageText = `Are you sure you want to ${delStr} the column?`;\n    const okCallback = function () {\n        if (numberOfCols <= 1) {\n            $thisCol.find('input[id^=\"rubricChoice\"], textarea').val('');\n            $thisCol.find('input[id^=\"rubricWeight\"]').val(0);\n        } else {\n            $thisCol.remove();\n            disableCornerMoveRubricColumnButtons(questionNum);\n\n            if ($(questionId).attr('editStatus') === 'hasResponses') {\n                $(questionId).attr('editStatus', 'mustDeleteResponses');\n            }\n        }\n    };\n    showModalConfirmation('Confirm Deletion', messageText, okCallback, null, null, null, BootstrapContextualColors.WARNING);\n}\n\nfunction highlightRubricRow(index, questionNum, highlight) {\n    const $rubricRow = $(`#rubricRow-${questionNum}-${index}`);\n\n    if (highlight) {\n        $rubricRow.find('td').addClass('cell-selected-negative');\n    } else {\n        $rubricRow.find('td').removeClass('cell-selected-negative');\n    }\n}\n\nfunction highlightRubricCol(index, questionNum, highlight) {\n    const $rubricCol = $(`.rubricCol-${questionNum}-${index}`);\n\n    if (highlight) {\n        $rubricCol.addClass('cell-selected-negative');\n    } else {\n        $rubricCol.removeClass('cell-selected-negative');\n    }\n}\n\n/**\n * Sets the 'required' attribute in weight cells.\n */\nfunction setRequiredAttributeToRubricWeights($weightRow, isRequired) {\n    const $weightCells = $weightRow.find('input[id^=\"rubricWeight\"]');\n\n    $weightCells.each(function () {\n        $(this).prop('required', isRequired);\n    });\n}\n\n/**\n * Shows the weight row and makes weight cells required if the \"Choices are weighted\" checkbox is checked,\n * otherwise hides the weight row and removes the 'required' field from all weight cells.\n *\n * @param checkbox the \"Choices are weighted\" checkbox\n */\nfunction toggleAssignWeightsRow($checkbox) {\n    const $weightsRow = $checkbox.closest('form').find('tr[id^=\"rubricWeights\"]');\n    const $weightsRowFirstCell = $weightsRow.find('th').first();\n\n    if ($checkbox.prop('checked')) {\n        $weightsRow.show();\n        $weightsRowFirstCell.html('Weights <span class=\"glyphicon glyphicon-arrow-right\"></span>');\n        setRequiredAttributeToRubricWeights($weightsRow, true);\n    } else {\n        setRequiredAttributeToRubricWeights($weightsRow, false);\n        $weightsRow.hide();\n    }\n}\n\n/**\n * Attaches event handlers to \"Choices are weighted\" checkboxes to toggle the visibility of\n * the input boxes for rubric weights.\n */\nfunction bindAssignWeightsCheckboxes() {\n    $('body').on('click', 'input[id^=\"rubricAssignWeights\"]', function () {\n        const $checkbox = $(this);\n\n        toggleAssignWeightsRow($checkbox);\n    });\n}\n\n/**\n * Attaches click event handlers move rubric column buttons to\n * all rubric questions. To be called in $(document).ready().\n */\nfunction bindMoveRubricColButtons() {\n    $('table[id^=\"rubricEditTable-\"]').each(function () {\n        const questionNum = $(this).closest('form').data('qnnumber');\n\n        $(`#rubric-options-row-${questionNum} td[class*=\"rubricCol-${questionNum}\"]`).each(function () {\n            const colNum = $(this).attr('data-col');\n\n            $(`#rubric-move-col-left-${questionNum}-${colNum}`).click(() => {\n                moveRubricColIfPossible(questionNum, colNum, true);\n            });\n\n            $(`#rubric-move-col-right-${questionNum}-${colNum}`).click(() => {\n                moveRubricColIfPossible(questionNum, colNum, false);\n            });\n        });\n    });\n}\n\n/**\n * @param questionNum\n *            the question number of the feedback question\n * @returns {Boolean} true if the weights are assigned by the user, otherwise false\n */\nfunction hasAssignedWeights(questionNum) {\n    return $(`#rubricAssignWeights-${questionNum}`).prop('checked');\n}\n\nexport {\n    addRubricCol,\n    addRubricRow,\n    bindAssignWeightsCheckboxes,\n    bindMoveRubricColButtons,\n    disableCornerMoveRubricColumnButtons,\n    hasAssignedWeights,\n    highlightRubricCol,\n    highlightRubricRow,\n    removeRubricCol,\n    removeRubricRow,\n    toggleAssignWeightsRow,\n};\n","import {\n    ParamsNames,\n} from './const';\n\nfunction isRankOptionsQuestion(qnNumber) {\n    return $(`#form_editquestion-${qnNumber}`).children('input[name=\"questiontype\"]').val() === 'RANK_OPTIONS';\n}\n\nfunction isMinOptionsToBeRankedEnabled(qnNumber) {\n    return isRankOptionsQuestion(qnNumber) ? $(`#minOptionsToBeRankedEnabled-${qnNumber}`).prop('checked')\n            : $(`#minRecipientsToBeRankedEnabled-${qnNumber}`).prop('checked');\n}\n\nfunction isMaxOptionsToBeRankedEnabled(qnNumber) {\n    return isRankOptionsQuestion(qnNumber) ? $(`#maxOptionsToBeRankedEnabled-${qnNumber}`).prop('checked')\n            : $(`#maxRecipientsToBeRankedEnabled-${qnNumber}`).prop('checked');\n}\n\nfunction getNumOfRankOptions(qnNumber) {\n    if (isRankOptionsQuestion(qnNumber)) {\n        // for rank options question, return number of options\n        return $(`#rankOptionTable-${qnNumber}`).children('div[id^=\"rankOptionRow\"]').length;\n    }\n\n    // for rank recipients question, compute the number of recipients\n    const recipient = $(`#recipienttype-${qnNumber}`).val();\n\n    switch (recipient) {\n    case 'STUDENTS':\n    case 'INSTRUCTORS':\n    case 'TEAMS':\n        return $(`#num-${recipient.toLowerCase()}`).val();\n    case 'OWN_TEAM_MEMBERS':\n    case 'OWN_TEAM_MEMBERS_INCLUDING_SELF':\n        // returning infinite as this is dependent on team size\n        return Number.MAX_SAFE_INTEGER;\n    default:\n        // other recipient types like NONE, SELF have only 1 recipient\n        return 1;\n    }\n}\n\nfunction getMinOptionsToBeRankedBox(qnNumber) {\n    return isRankOptionsQuestion(qnNumber) ? $(`#minOptionsToBeRanked-${qnNumber}`)\n            : $(`#minRecipientsToBeRanked-${qnNumber}`);\n}\n\nfunction getMaxOptionsToBeRankedBox(qnNumber) {\n    return isRankOptionsQuestion(qnNumber) ? $(`#maxOptionsToBeRanked-${qnNumber}`)\n            : $(`#maxRecipientsToBeRanked-${qnNumber}`);\n}\n\nfunction setUpperLimitForMinOptionsToBeRanked(qnNumber, upperLimit) {\n    getMinOptionsToBeRankedBox(qnNumber).prop('max', upperLimit);\n}\n\nfunction setUpperLimitForMaxOptionsToBeRanked(qnNumber, upperLimit) {\n    getMaxOptionsToBeRankedBox(qnNumber).prop('max', upperLimit);\n}\n\nfunction getMinOptionsToBeRanked(qnNumber) {\n    if (isMinOptionsToBeRankedEnabled(qnNumber)) {\n        return parseInt(getMinOptionsToBeRankedBox(qnNumber).val(), 10);\n    }\n\n    return Number.MAX_SAFE_INTEGER;\n}\n\nfunction getMaxOptionsToBeRanked(qnNumber) {\n    if (isMaxOptionsToBeRankedEnabled(qnNumber)) {\n        return parseInt(getMaxOptionsToBeRankedBox(qnNumber).val(), 10);\n    }\n\n    return Number.MAX_SAFE_INTEGER;\n}\n\nfunction setMinOptionsToBeRanked(qnNumber, newVal) {\n    if (!isMinOptionsToBeRankedEnabled(qnNumber) || newVal < 1) {\n        return;\n    }\n\n    getMinOptionsToBeRankedBox(qnNumber).val(newVal);\n}\n\nfunction setMaxOptionsToBeRanked(qnNumber, newVal) {\n    if (!isMaxOptionsToBeRankedEnabled(qnNumber) || newVal < 1) {\n        return;\n    }\n\n    getMaxOptionsToBeRankedBox(qnNumber).val(newVal);\n}\n\nfunction adjustMinOptionsToBeRanked(qnNumber) {\n    if (!isMinOptionsToBeRankedEnabled(qnNumber)) {\n        return;\n    }\n\n    const upperLimit = getNumOfRankOptions(qnNumber);\n    const currentVal = Math.min(getMinOptionsToBeRanked(qnNumber), upperLimit);\n\n    setUpperLimitForMinOptionsToBeRanked(qnNumber, upperLimit);\n    setMinOptionsToBeRanked(qnNumber, currentVal);\n\n    if (getMaxOptionsToBeRanked(qnNumber) < currentVal) {\n        setMaxOptionsToBeRanked(qnNumber, currentVal);\n    }\n}\n\nfunction adjustMaxOptionsToBeRanked(qnNumber) {\n    if (!isMaxOptionsToBeRankedEnabled(qnNumber)) {\n        return;\n    }\n\n    const upperLimit = getNumOfRankOptions(qnNumber);\n    const currentVal = Math.min(getMaxOptionsToBeRanked(qnNumber), upperLimit);\n\n    setUpperLimitForMaxOptionsToBeRanked(qnNumber, upperLimit);\n    setMaxOptionsToBeRanked(qnNumber, currentVal);\n\n    if (currentVal < getMinOptionsToBeRanked(qnNumber)) {\n        setMinOptionsToBeRanked(qnNumber, currentVal);\n    }\n}\n\nfunction adjustMinMaxOptionsToBeRanked(qnNumber) {\n    adjustMaxOptionsToBeRanked(qnNumber);\n    adjustMinOptionsToBeRanked(qnNumber);\n}\n\nfunction toggleMinOptionsToBeRanked(qnNumber) {\n    const $maxOptionsToBeRanked = getMinOptionsToBeRankedBox(qnNumber);\n\n    $maxOptionsToBeRanked.prop('disabled', !isMinOptionsToBeRankedEnabled(qnNumber));\n    adjustMinMaxOptionsToBeRanked(qnNumber);\n}\n\nfunction toggleMaxOptionsToBeRanked(qnNumber) {\n    const $maxOptionsToBeRanked = getMaxOptionsToBeRankedBox(qnNumber);\n\n    $maxOptionsToBeRanked.prop('disabled', !isMaxOptionsToBeRankedEnabled(qnNumber));\n    adjustMinMaxOptionsToBeRanked(qnNumber);\n}\n\nfunction addRankOption(questionNum) {\n    const questionId = `#form_editquestion-${questionNum}`;\n\n    const curNumberOfChoiceCreated =\n            parseInt($(`#${ParamsNames.FEEDBACK_QUESTION_NUMBEROFCHOICECREATED}-${questionNum}`).val(), 10);\n\n    $(`\n    <div class=\"margin-bottom-7px\" id=\"rankOptionRow-${curNumberOfChoiceCreated}-${questionNum}\">\n        <div class=\"input-group\">\n            <input type=\"text\" name=\"${ParamsNames.FEEDBACK_QUESTION_RANKOPTION}-${curNumberOfChoiceCreated}\"\n                    id=\"${ParamsNames.FEEDBACK_QUESTION_RANKOPTION}-${curNumberOfChoiceCreated}-${questionNum}\"\n                    class=\"form-control rankOptionTextBox\">\n            <span class=\"input-group-btn\">\n                <button class=\"btn btn-default removeOptionLink\" id=\"rankRemoveOptionLink\"\n                        onclick=\"removeRankOption(${curNumberOfChoiceCreated}, ${questionNum})\" tabindex=\"-1\">\n                    <span class=\"glyphicon glyphicon-remove\"></span>\n                </button>\n            </span>\n        </div>\n    </div>\n    `).insertBefore($(`#rankAddOptionRow-${questionNum}`));\n\n    $(`#${ParamsNames.FEEDBACK_QUESTION_NUMBEROFCHOICECREATED}-${questionNum}`).val(curNumberOfChoiceCreated + 1);\n\n    if ($(questionId).attr('editStatus') === 'hasResponses') {\n        $(questionId).attr('editStatus', 'mustDeleteResponses');\n    }\n\n    adjustMinMaxOptionsToBeRanked(questionNum);\n}\n\nfunction showRankOptionTable(questionNum) {\n    $(`#rankOptionTable-${questionNum}`).show();\n}\n\nfunction hideRankOptionTable(questionNum) {\n    $(`#rankOptionTable-${questionNum}`).hide();\n}\n\nfunction removeRankOption(index, questionNum) {\n    const questionId = `#form_editquestion-${questionNum}`;\n    const $thisRow = $(`#rankOptionRow-${index}-${questionNum}`);\n\n    // count number of child rows the table have and - 1 because of 'add option' button\n    const numberOfOptions = $thisRow.parent().children('div').length - 1;\n\n    if (numberOfOptions <= 2) {\n        $thisRow.find('input').val('');\n    } else {\n        $thisRow.remove();\n\n        if ($(questionId).attr('editStatus') === 'hasResponses') {\n            $(questionId).attr('editStatus', 'mustDeleteResponses');\n        }\n    }\n\n    adjustMinMaxOptionsToBeRanked(questionNum);\n}\n\nfunction bindRankEvents() {\n    $(document).on('change', 'input[name=\"minOptionsToBeRanked\"],input[name=\"minRecipientsToBeRanked\"]', (e) => {\n        const questionNum = $(e.currentTarget).closest('form').attr('data-qnnumber');\n        adjustMinOptionsToBeRanked(questionNum);\n    });\n\n    $(document).on('change', 'input[name=\"maxOptionsToBeRanked\"],input[name=\"maxRecipientsToBeRanked\"]', (e) => {\n        const questionNum = $(e.currentTarget).closest('form').attr('data-qnnumber');\n        adjustMaxOptionsToBeRanked(questionNum);\n    });\n\n    $(document).on('change',\n            'input[name=\"minOptionsToBeRankedEnabled\"],input[name=\"minRecipientsToBeRankedEnabled\"]', (e) => {\n                const questionNum = $(e.currentTarget).closest('form').attr('data-qnnumber');\n                toggleMinOptionsToBeRanked(questionNum);\n            });\n\n    $(document).on('change',\n            'input[name=\"maxOptionsToBeRankedEnabled\"],input[name=\"maxRecipientsToBeRankedEnabled\"]', (e) => {\n                const questionNum = $(e.currentTarget).closest('form').attr('data-qnnumber');\n                toggleMaxOptionsToBeRanked(questionNum);\n            });\n}\n\nfunction hideInvalidRankRecipientFeedbackPaths(qnNum) {\n    const $form = $(`#form_editquestion-${qnNum}`);\n    const qnType = $form.find('[name=\"questiontype\"]').val();\n\n    if (qnType === 'RANK_RECIPIENTS') {\n        $form.find('[data-recipient-type=\"NONE\"],[data-recipient-type=\"SELF\"]').hide();\n    } else {\n        $form.find('[data-recipient-type=\"NONE\"],[data-recipient-type=\"SELF\"]').show();\n    }\n}\n\n/**\n * Auto fills the min and max options to 1 if empty when the corresponding checkbox is checked\n * in Rank options and Rank recipients questions\n */\nfunction bindAutoFillEmptyRankOptionsChangeEvent() {\n    $(`[id^=${ParamsNames.FEEDBACK_QUESTION_RANK_IS_MAX_OPTIONS_TO_BE_RANKED_ENABLED}]`\n            + `, [id^=${ParamsNames.FEEDBACK_QUESTION_RANK_IS_MIN_OPTIONS_TO_BE_RANKED_ENABLED}]`\n            + `, [id^=${ParamsNames.FEEDBACK_QUESTION_RANK_IS_MIN_RECIPIENTS_TO_BE_RANKED_ENABLED}]`\n            + `, [id^=${ParamsNames.FEEDBACK_QUESTION_RANK_IS_MAX_RECIPIENTS_TO_BE_RANKED_ENABLED}]`).change((e) => {\n        const linkedInputId = $(e.currentTarget).data('linkedInputId');\n        const linkedInput = $(`#${linkedInputId}`);\n\n        if ($(e.currentTarget).prop('checked')) {\n            if ($(linkedInput).val() === '') {\n                $(linkedInput).val('1');\n            }\n        }\n    });\n}\n\nexport {\n    addRankOption,\n    bindRankEvents,\n    hideInvalidRankRecipientFeedbackPaths,\n    hideRankOptionTable,\n    removeRankOption,\n    showRankOptionTable,\n    toggleMaxOptionsToBeRanked,\n    toggleMinOptionsToBeRanked,\n    bindAutoFillEmptyRankOptionsChangeEvent,\n};\n","function roundToThreeDp(num) {\n    return parseFloat(num.toFixed(3));\n}\n\nfunction updateNumScalePossibleValues(questionNum) {\n    const min = parseInt($(`#minScaleBox-${questionNum}`).val(), 10);\n    let max = parseInt($(`#maxScaleBox-${questionNum}`).val(), 10);\n    let step = parseFloat($(`#stepBox-${questionNum}`).val());\n\n    if (max <= min) {\n        max = min + 1;\n        $(`#maxScaleBox-${questionNum}`).val(max);\n    }\n\n    step = roundToThreeDp(step);\n    if (step === 0) {\n        step = 0.001;\n    }\n\n    const $stepBox = $(`#stepBox-${questionNum}`);\n    $stepBox.val(Number.isNaN(step) ? '' : step);\n\n    const possibleValuesCount = Math.floor(roundToThreeDp((max - min) / step)) + 1;\n    const largestValueInRange = min + (possibleValuesCount - 1) * step;\n    const $numScalePossibleValues = $(`#numScalePossibleValues-${questionNum}`);\n    let possibleValuesString;\n    if (roundToThreeDp(largestValueInRange) !== max) {\n        $numScalePossibleValues.css('color', 'red');\n\n        if (Number.isNaN(min) || Number.isNaN(max) || Number.isNaN(step)) {\n            possibleValuesString = '[Please enter valid numbers for all the options.]';\n        } else {\n            possibleValuesString = `[The interval ${min.toString()} - ${max.toString()}`\n                    + ' is not divisible by the specified increment.]';\n        }\n\n        $numScalePossibleValues.text(possibleValuesString);\n        return false;\n    }\n    $numScalePossibleValues.css('color', 'black');\n    possibleValuesString = '[Based on the above settings, acceptable responses are: ';\n\n    // step is 3 d.p. at most, so round it after * 1000.\n    if (possibleValuesCount > 6) {\n        possibleValuesString +=\n            `${min.toString()}, ${(Math.round((min + step) * 1000) / 1000).toString()},\n            ${(Math.round((min + 2 * step) * 1000) / 1000).toString()}, ...,\n            ${(Math.round((max - 2 * step) * 1000) / 1000).toString()},\n            ${(Math.round((max - step) * 1000) / 1000).toString()}, ${max.toString()}`;\n    } else {\n        possibleValuesString += min.toString();\n        let cur = min + step;\n        while (max - cur >= -1e-9) {\n            possibleValuesString += `, ${(Math.round(cur * 1000) / 1000).toString()}`;\n            cur += step;\n        }\n    }\n\n    possibleValuesString += ']';\n    $numScalePossibleValues.text(possibleValuesString);\n    return true;\n}\n\nexport {\n    roundToThreeDp, // for test\n    updateNumScalePossibleValues,\n};\n","import {\n    ParamsNames,\n} from './const';\n\nfunction isMaxSelectableChoicesEnabled(questionNum) {\n    return $(`#msqEnableMaxSelectableChoices-${questionNum}`).prop('checked');\n}\n\nfunction isMinSelectableChoicesEnabled(questionNum) {\n    return $(`#msqEnableMinSelectableChoices-${questionNum}`).prop('checked');\n}\n\nfunction isGenerateOptionsEnabled(questionNum) {\n    return $(`#generateMsqOptionsCheckbox-${questionNum}`).prop('checked');\n}\n\nfunction getNumOfMsqOptions(questionNum) {\n    return $(`#msqChoiceTable-${questionNum}`).children().length - 1;\n}\n\nfunction getMaxSelectableChoicesElement(questionNum) {\n    return $(`#msqMaxSelectableChoices-${questionNum}`);\n}\n\nfunction getMaxSelectableChoicesValue(questionNum) {\n    if (isMaxSelectableChoicesEnabled(questionNum)) {\n        return parseInt(getMaxSelectableChoicesElement(questionNum).val(), 10);\n    }\n\n    // return infinity\n    return Number.MAX_SAFE_INTEGER;\n}\n\nfunction setUpperLimitForMaxSelectableChoices(questionNum, upperLimit) {\n    getMaxSelectableChoicesElement(questionNum).prop('max', upperLimit);\n}\n\nfunction setMaxSelectableChoices(questionNum, newVal) {\n    if (newVal >= 2) {\n        // No use if max selectable choices were 1\n        getMaxSelectableChoicesElement(questionNum).val(newVal);\n    }\n}\n\nfunction getMinSelectableChoicesElement(questionNum) {\n    return $(`#msqMinSelectableChoices-${questionNum}`);\n}\n\nfunction getMinSelectableChoicesValue(questionNum) {\n    if (isMinSelectableChoicesEnabled(questionNum)) {\n        return parseInt(getMinSelectableChoicesElement(questionNum).val(), 10);\n    }\n\n    // return infinity\n    return Number.MAX_SAFE_INTEGER;\n}\n\nfunction setMinSelectableChoices(questionNum, newVal) {\n    if (newVal >= 1) {\n        // No use if min selectable choices where 0\n        getMinSelectableChoicesElement(questionNum).val(newVal);\n    }\n}\n\nfunction setUpperLimitForMinSelectableChoices(questionNum, upperLimit) {\n    getMinSelectableChoicesElement(questionNum).prop('max', upperLimit);\n}\n\n/**\n * Returns total number of options for the selected generate options type.\n * Eg. if 'instructors' is selected, returns number of instructors for feedback session.\n * Assumes that 'generateOptions' checkbox is checked.\n */\nfunction getTotalOptionsForSelectedGenerateOptionsType(questionNum) {\n    const category = $(`#msqGenerateForSelect-${questionNum}`).prop('value').toLowerCase();\n    return $(`#num-${category}`).val();\n}\n\nfunction adjustMaxSelectableChoices(questionNum) {\n    if (!isMaxSelectableChoicesEnabled(questionNum)) {\n        return;\n    }\n\n    const upperLimit = isGenerateOptionsEnabled(questionNum)\n            ? getTotalOptionsForSelectedGenerateOptionsType(questionNum) : getNumOfMsqOptions(questionNum);\n    const currentVal = getMaxSelectableChoicesValue(questionNum);\n\n    setUpperLimitForMaxSelectableChoices(questionNum, upperLimit);\n    setMaxSelectableChoices(questionNum, Math.min(currentVal, upperLimit));\n}\n\nfunction adjustMinSelectableChoices(questionNum) {\n    if (!isMinSelectableChoicesEnabled(questionNum)) {\n        return;\n    }\n\n    const currentVal = getMinSelectableChoicesValue(questionNum);\n    const upperLimit = Math.min(getMaxSelectableChoicesValue(questionNum), isGenerateOptionsEnabled(questionNum)\n            ? getTotalOptionsForSelectedGenerateOptionsType(questionNum) : getNumOfMsqOptions(questionNum));\n\n    setUpperLimitForMinSelectableChoices(questionNum, upperLimit);\n    setMinSelectableChoices(questionNum, Math.min(currentVal, upperLimit));\n}\n\nfunction adjustMinMaxSelectableChoices(questionNum) {\n    adjustMaxSelectableChoices(questionNum);\n    adjustMinSelectableChoices(questionNum);\n}\n\nfunction addMsqOption(questionNum) {\n    const questionId = `#form_editquestion-${questionNum}`;\n\n    const curNumberOfChoiceCreated =\n            parseInt($(`#${ParamsNames.FEEDBACK_QUESTION_NUMBEROFCHOICECREATED}-${questionNum}`).val(), 10);\n\n    $(`\n    <div class=\"margin-bottom-7px\" id=\"msqOptionRow-${curNumberOfChoiceCreated}-${questionNum}\">\n        <div class=\"input-group\">\n            <span class=\"input-group-addon\">\n                <input type=\"checkbox\" disabled>\n            </span>\n            <input type=\"text\" name=\"${ParamsNames.FEEDBACK_QUESTION_MSQCHOICE}-${curNumberOfChoiceCreated}\"\n                    id=\"${ParamsNames.FEEDBACK_QUESTION_MSQCHOICE}-${curNumberOfChoiceCreated}-${questionNum}\"\n                    class=\"form-control msqOptionTextBox\">\n            <span class=\"input-group-btn\">\n                <button type=\"button\" class=\"btn btn-default removeOptionLink\" id=\"msqRemoveOptionLink\"\n                        onclick=\"removeMsqOption(${curNumberOfChoiceCreated}, ${questionNum})\" tabindex=\"-1\">\n                    <span class=\"glyphicon glyphicon-remove\"></span>\n                </button>\n            </span>\n        </div>\n    </div>\n    `).insertBefore($(`#msqAddOptionRow-${questionNum}`));\n\n    $(`#${ParamsNames.FEEDBACK_QUESTION_NUMBEROFCHOICECREATED}-${questionNum}`).val(curNumberOfChoiceCreated + 1);\n\n    if ($(questionId).attr('editStatus') === 'hasResponses') {\n        $(questionId).attr('editStatus', 'mustDeleteResponses');\n    }\n\n    adjustMinMaxSelectableChoices(questionNum);\n}\n\nfunction removeMsqOption(index, questionNum) {\n    const questionId = `#form_editquestion-${questionNum}`;\n\n    const $thisRow = $(`#msqOptionRow-${index}-${questionNum}`);\n\n    // count number of child rows the table have and - 1 because of add option button\n    const numberOfOptions = $thisRow.parent().children('div').length - 1;\n\n    if (numberOfOptions <= 1) {\n        $thisRow.find('input').val('');\n    } else {\n        $thisRow.remove();\n\n        if ($(questionId).attr('editStatus') === 'hasResponses') {\n            $(questionId).attr('editStatus', 'mustDeleteResponses');\n        }\n    }\n\n    adjustMinMaxSelectableChoices(questionNum);\n}\n\nfunction toggleMsqMaxSelectableChoices(questionNum) {\n    const $checkbox = $(`#msqEnableMaxSelectableChoices-${questionNum}`);\n\n    $(`#msqMaxSelectableChoices-${questionNum}`).prop('disabled', !$checkbox.prop('checked'));\n    adjustMinMaxSelectableChoices(questionNum);\n}\n\nfunction toggleMsqMinSelectableChoices(questionNum) {\n    const $checkbox = $(`#msqEnableMinSelectableChoices-${questionNum}`);\n\n    $(`#msqMinSelectableChoices-${questionNum}`).prop('disabled', !$checkbox.prop('checked'));\n    adjustMinMaxSelectableChoices(questionNum);\n}\n\nfunction changeMsqGenerateFor(questionNum) {\n    $(`#msqGeneratedOptions-${questionNum}`).val($(`#msqGenerateForSelect-${questionNum}`).prop('value'));\n    adjustMinMaxSelectableChoices(questionNum);\n}\n\nfunction toggleMsqGeneratedOptions(checkbox, questionNum) {\n    if ($(checkbox).prop('checked')) {\n        $(`#msqChoiceTable-${questionNum}`).find('input[type=text]').prop('disabled', true);\n        $(`#msqChoiceTable-${questionNum}`).hide();\n        $(`#msqGenerateForSelect-${questionNum}`).prop('disabled', false);\n        $(`#msqOtherOptionFlag-${questionNum}`).closest('.checkbox').hide();\n        changeMsqGenerateFor(questionNum);\n    } else {\n        $(`#msqChoiceTable-${questionNum}`).find('input[type=text]').prop('disabled', false);\n        $(`#msqChoiceTable-${questionNum}`).show();\n        $(`#msqGenerateForSelect-${questionNum}`).prop('disabled', true);\n        $(`#msqOtherOptionFlag-${questionNum}`).closest('.checkbox').show();\n        $(`#msqGeneratedOptions-${questionNum}`).val('NONE');\n    }\n\n    adjustMinMaxSelectableChoices(questionNum);\n}\n\nfunction toggleMsqOtherOptionEnabled(checkbox, questionNum) {\n    const questionId = `#form_editquestion-${questionNum}`;\n\n    if ($(questionId).attr('editStatus') === 'hasResponses') {\n        $(questionId).attr('editStatus', 'mustDeleteResponses');\n    }\n}\n\nfunction bindMsqEvents() {\n    $(document).on('change', 'input[name=\"msqMaxSelectableChoices\"]', (e) => {\n        const questionNum = $(e.currentTarget).closest('form').attr('data-qnnumber');\n        adjustMinMaxSelectableChoices(questionNum);\n    });\n\n    $(document).on('change', 'input[name=\"msqMinSelectableChoices\"]', (e) => {\n        const questionNum = $(e.currentTarget).closest('form').attr('data-qnnumber');\n        adjustMinMaxSelectableChoices(questionNum);\n    });\n\n    $(document).on('change', 'input[name*=\"msqEnableMaxSelectableChoices\"]', (e) => {\n        const questionNumber = $(e.currentTarget).closest('form').attr('data-qnnumber');\n        toggleMsqMaxSelectableChoices(questionNumber);\n    });\n\n    $(document).on('change', 'input[name*=\"msqEnableMinSelectableChoices\"]', (e) => {\n        const questionNumber = $(e.currentTarget).closest('form').attr('data-qnnumber');\n        toggleMsqMinSelectableChoices(questionNumber);\n    });\n}\n\nexport {\n    addMsqOption,\n    bindMsqEvents,\n    changeMsqGenerateFor,\n    removeMsqOption,\n    toggleMsqGeneratedOptions,\n    toggleMsqOtherOptionEnabled,\n    toggleMsqMaxSelectableChoices,\n    toggleMsqMinSelectableChoices,\n};\n","import {\n    ParamsNames,\n} from './const';\n\nfunction addMcqOption(questionNum) {\n    const questionId = `#form_editquestion-${questionNum}`;\n\n    const curNumberOfChoiceCreated =\n            parseInt($(`#${ParamsNames.FEEDBACK_QUESTION_NUMBEROFCHOICECREATED}-${questionNum}`).val(), 10);\n    const $choiceColumn = $(`#mcqChoices-${questionNum}`);\n    const $weightColumn = $(`#mcqWeights-${questionNum}`);\n\n    const choiceFragment = (`\n    <div class=\"margin-bottom-7px\" id=\"mcqOptionRow-${curNumberOfChoiceCreated}-${questionNum}\">\n        <div class=\"input-group\">\n            <span class=\"input-group-addon\">\n                <input type=\"radio\" disabled>\n            </span>\n            <input type=\"text\" name=\"${ParamsNames.FEEDBACK_QUESTION_MCQCHOICE}-${curNumberOfChoiceCreated}\"\n                    id=\"${ParamsNames.FEEDBACK_QUESTION_MCQCHOICE}-${curNumberOfChoiceCreated}-${questionNum}\"\n                    class=\"form-control mcqOptionTextBox\">\n            <span class=\"input-group-btn\">\n                <button type=\"button\" class=\"btn btn-default removeOptionLink\" id=\"mcqRemoveOptionLink\"\n                        onclick=\"removeMcqOption(${curNumberOfChoiceCreated}, ${questionNum})\" tabindex=\"-1\">\n                    <span class=\"glyphicon glyphicon-remove\"></span>\n                </button>\n            </span>\n        </div>\n    </div>\n    `);\n\n    const weightFragment = (`\n    <div class=\"margin-bottom-7px\">\n        <input type=\"number\" class=\"form-control nonDestructive\" value=\"0\"\n                id=\"${ParamsNames.FEEDBACK_QUESTION_MCQ_WEIGHT}-${curNumberOfChoiceCreated}-${questionNum}\"\n                name=\"${ParamsNames.FEEDBACK_QUESTION_MCQ_WEIGHT}-${curNumberOfChoiceCreated}\" step=\"0.01\" min=\"0\" required>\n    </div>\n    `);\n\n    if (curNumberOfChoiceCreated === 0) {\n        $choiceColumn.html(choiceFragment);\n        $weightColumn.html(weightFragment);\n    } else {\n        $choiceColumn.append(choiceFragment);\n        $weightColumn.append(weightFragment);\n    }\n\n    $(`#${ParamsNames.FEEDBACK_QUESTION_NUMBEROFCHOICECREATED}-${questionNum}`).val(curNumberOfChoiceCreated + 1);\n\n    if ($(questionId).attr('editStatus') === 'hasResponses') {\n        $(questionId).attr('editStatus', 'mustDeleteResponses');\n    }\n}\n\nfunction removeMcqOption(index, questionNum) {\n    const questionId = `#form_editquestion-${questionNum}`;\n\n    const $thisChoice = $(`#mcqOptionRow-${index}-${questionNum}`);\n    const $thisWeight = $(`#mcqWeight-${index}-${questionNum}`);\n\n    // count number of child of mcqChoices div\n    const numberOfOptions = $(`#mcqChoices-${questionNum}`).children('div').length;\n\n    if (numberOfOptions <= 1) {\n        $thisChoice.find('input').val('');\n        $thisWeight.val(0);\n    } else {\n        $thisChoice.remove();\n        // Remove the containing div of weight input field.\n        $thisWeight.parent().remove();\n\n        if ($(questionId).attr('editStatus') === 'hasResponses') {\n            $(questionId).attr('editStatus', 'mustDeleteResponses');\n        }\n    }\n}\n\n/**\n * Sets the required attribute for Mcq weight cells, and if 'other' option is checked,\n * then sets the required attribute for other weight cell too.\n */\nfunction setRequiredAttributeForMcqWeightCells($weightColumn, questionNum, isRequired) {\n    const $weightCells = $weightColumn.find('input[id^=\"mcqWeight\"]');\n    const $otherWeightCell = $(`#mcqOtherWeight-${questionNum}`);\n    const isOtherOptionEnabled = $(`#mcqOtherOptionFlag-${questionNum}`).prop('checked');\n\n    $weightCells.each(function () {\n        $(this).prop('required', isRequired);\n    });\n\n    // If 'other' option is checked, make other weight required.\n    if (isOtherOptionEnabled) {\n        $otherWeightCell.prop('required', isRequired);\n    }\n}\n\nfunction toggleVisibilityOfMcqOtherWeight($checkbox, questionNum) {\n    // The 'Choices are weighted' checkbox\n    const $mcqAssignWeightCheckbox = $(`#mcqHasAssignedWeights-${questionNum}`);\n    const $mcqOtherWeightCell = $(`#mcqOtherWeight-${questionNum}`);\n\n    if ($checkbox.prop('checked') && $mcqAssignWeightCheckbox.prop('checked')) {\n        $mcqOtherWeightCell.show();\n        // Set other weight as required.\n        $mcqOtherWeightCell.prop('required', true);\n    } else {\n        $mcqOtherWeightCell.prop('required', false);\n        $mcqOtherWeightCell.hide();\n    }\n}\n\n/**\n * Hides the weight cells and weight label on top of the cells when the checkbox is unchecked,\n * otherwise, shows the weight cells and label.\n * If 'other' option is enabled, and 'choices are weighted' checkbox is checked, shows the 'other' weight cell,\n * otherwise if the checkbox is unchecked, hides the 'other' weight cell.\n * @param $checkbox\n * @param questionNum\n */\nfunction toggleMcqHasAssignedWeights($checkbox, questionNum) {\n    // The weight label\n    const $weightLabel = $checkbox.parent().siblings('div');\n    const $weightColumn = $(`#mcqWeights-${questionNum}`);\n    const $otherEnabledCheckbox = $(`#mcqOtherOptionFlag-${questionNum}`);\n\n    if ($checkbox.prop('checked')) {\n        $weightLabel.show();\n        $weightColumn.show();\n\n        // Set the weight cells as required.\n        setRequiredAttributeForMcqWeightCells($weightColumn, questionNum, true);\n    } else {\n        $weightLabel.hide();\n        // Set the weight cells as not required.\n        setRequiredAttributeForMcqWeightCells($weightColumn, questionNum, false);\n        $weightColumn.hide();\n    }\n\n    // Set the visibility of the 'Other' weight cell\n    toggleVisibilityOfMcqOtherWeight($otherEnabledCheckbox, questionNum);\n}\n\nfunction changeMcqGenerateFor(questionNum) {\n    $(`#mcqGeneratedOptions-${questionNum}`).val($(`#mcqGenerateForSelect-${questionNum}`).prop('value'));\n}\n\nfunction toggleMcqGeneratedOptions(checkbox, questionNum) {\n    if ($(checkbox).prop('checked')) {\n        $(`#mcqChoices-${questionNum}`).find('input[type=text]').prop('disabled', true);\n        $(`#mcqWeights-${questionNum}`).find('input[type=number]').prop('disabled', true);\n        $(`#mcqOtherWeight-${questionNum}`).prop('disabled', true);\n        $(`#mcqChoiceTable-${questionNum}`).hide();\n        $(`#mcqHasAssignedWeights-${questionNum}`).parent().hide();\n        // Hide the 'Weights' label\n        $(`#mcqHasAssignedWeights-${questionNum}`).parent().siblings('div').hide();\n        $(`#mcqGenerateForSelect-${questionNum}`).prop('disabled', false);\n        $(`#mcqOtherOptionFlag-${questionNum}`).closest('.checkbox').hide();\n        $(`#mcqOtherWeight-${questionNum}`).hide();\n        changeMcqGenerateFor(questionNum);\n    } else {\n        $(`#mcqChoices-${questionNum}`).find('input[type=text]').prop('disabled', false);\n        $(`#mcqWeights-${questionNum}`).find('input[type=number]').prop('disabled', false);\n        $(`#mcqOtherWeight-${questionNum}`).prop('disabled', false);\n        $(`#mcqChoiceTable-${questionNum}`).show();\n        $(`#mcqHasAssignedWeights-${questionNum}`).parent().show();\n        $(`#mcqOtherOptionFlag-${questionNum}`).closest('.checkbox').show();\n        toggleMcqHasAssignedWeights($(`#mcqHasAssignedWeights-${questionNum}`), questionNum);\n        $(`#mcqGenerateForSelect-${questionNum}`).prop('disabled', true);\n        $(`#mcqGeneratedOptions-${questionNum}`).val('NONE');\n    }\n}\n\n/**\n * If the 'other' option and Assign weight both are checked, shows the 'other' option,\n * otherwise hides it.\n * @param checkbox (Note that checkbox is a DOM element, not a jquery element)\n * @param questionNum\n */\nfunction toggleMcqOtherOptionEnabled(checkbox, questionNum) {\n    const questionId = `#form_editquestion-${questionNum}`;\n\n    // Set visibility of mcq other weight cell.\n    toggleVisibilityOfMcqOtherWeight($(checkbox), questionNum);\n\n    if ($(questionId).attr('editStatus') === 'hasResponses') {\n        $(questionId).attr('editStatus', 'mustDeleteResponses');\n    }\n}\n\nfunction bindMcqOtherOptionEnabled() {\n    $('body').on('click', 'input[id^=\"mcqOtherOptionFlag\"]', function () {\n        const checkbox = (this);\n        const questionNum = $(checkbox).closest('form').data('qnnumber');\n        toggleMcqOtherOptionEnabled(checkbox, questionNum);\n    });\n}\n\nfunction bindMcqHasAssignedWeightsCheckbox() {\n    $('body').on('click', 'input[id^=\"mcqHasAssignedWeights\"]', function () {\n        const $checkbox = $(this);\n        const questionNum = $checkbox.closest('form').data('qnnumber');\n        toggleMcqHasAssignedWeights($checkbox, questionNum);\n    });\n}\n\nexport {\n    addMcqOption,\n    bindMcqHasAssignedWeightsCheckbox,\n    bindMcqOtherOptionEnabled,\n    changeMcqGenerateFor,\n    removeMcqOption,\n    toggleMcqHasAssignedWeights,\n    toggleMcqGeneratedOptions,\n    toggleMcqOtherOptionEnabled,\n};\n","function setDefaultContribQnVisibilityIfNeeded(questionNum) {\n    // If visibility options have already been copied from the previous contrib question, skip\n    const hasPreviousQuestion = $('.questionTable').size() >= 2;\n    if (hasPreviousQuestion) {\n        const previousQuestionType = $('input[name=\"questiontype\"]').eq(-2).val();\n        if (previousQuestionType === 'CONTRIB') {\n            return;\n        }\n    }\n\n    const $currentQuestionTable = $(`#questionTable-${questionNum}`);\n\n    $currentQuestionTable.find(\n            'a[data-option-name=\"ANONYMOUS_TO_RECIPIENT_AND_TEAM_VISIBLE_TO_INSTRUCTORS\"]').click();\n}\n\nfunction setContribQnVisibilityFormat(questionNum) {\n    const $currentQuestionTable = $(`#questionTable-${questionNum}`);\n\n    // Show only the two visibility options valid for contrib questions; hide the rest\n    $currentQuestionTable.find('.visibility-options-dropdown-option')\n            .not('[data-option-name=\"ANONYMOUS_TO_RECIPIENT_AND_TEAM_VISIBLE_TO_INSTRUCTORS\"]')\n            .not('[data-option-name=\"VISIBLE_TO_INSTRUCTORS_ONLY\"]')\n            .parent()\n            .addClass('hidden');\n    $currentQuestionTable.find('.visibility-options-dropdown .dropdown-menu .divider').addClass('hidden');\n\n    // Format checkboxes 'Can See Answer' for recipient/giver's team members/recipient's team members must be the same.\n\n    $currentQuestionTable.find('input.visibilityCheckbox').off('change');\n\n    $currentQuestionTable.find('input.visibilityCheckbox').filter('.answerCheckbox').change(function () {\n        if (!$(this).prop('checked')) {\n            if ($(this).val() === 'RECEIVER'\n                    || $(this).val() === 'OWN_TEAM_MEMBERS'\n                    || $(this).val() === 'RECEIVER_TEAM_MEMBERS') {\n                $currentQuestionTable.find('input.visibilityCheckbox')\n                        .filter('input[class*=\"giverCheckbox\"],input[class*=\"recipientCheckbox\"]')\n                        .filter('[value=\"RECEIVER\"],[value=\"OWN_TEAM_MEMBERS\"],[value=\"RECEIVER_TEAM_MEMBERS\"]')\n                        .prop('checked', false);\n            } else {\n                const visibilityOptionsRow = $(this).closest('tr');\n                visibilityOptionsRow.find('input[class*=\"giverCheckbox\"]')\n                        .prop('checked', false);\n                visibilityOptionsRow.find('input[class*=\"recipientCheckbox\"]')\n                        .prop('checked', false);\n            }\n        }\n\n        if ($(this).val() === 'RECEIVER'\n                || $(this).val() === 'OWN_TEAM_MEMBERS'\n                || $(this).val() === 'RECEIVER_TEAM_MEMBERS') {\n            $currentQuestionTable.find('input.visibilityCheckbox')\n                    .filter('input[name=receiverFollowerCheckbox]')\n                    .prop('checked', $(this).prop('checked'));\n        }\n\n        if ($(this).val() === 'RECEIVER'\n                || $(this).val() === 'OWN_TEAM_MEMBERS'\n                || $(this).val() === 'RECEIVER_TEAM_MEMBERS') {\n            $currentQuestionTable.find('input.visibilityCheckbox')\n                    .filter('.answerCheckbox')\n                    .filter('[value=\"RECEIVER\"],[value=\"OWN_TEAM_MEMBERS\"],[value=\"RECEIVER_TEAM_MEMBERS\"]')\n                    .prop('checked', $(this).prop('checked'));\n        }\n    });\n\n    $currentQuestionTable.find('input.visibilityCheckbox').filter('[class*=\"giverCheckbox\"]').change(function () {\n        if ($(this).is(':checked')) {\n            const visibilityOptionsRow = $(this).closest('tr');\n            visibilityOptionsRow.find('input.answerCheckbox')\n                    .prop('checked', true)\n                    .trigger('change');\n        }\n    });\n\n    $currentQuestionTable.find('input.visibilityCheckbox').filter('[class*=\"recipientCheckbox\"]').change(function () {\n        if ($(this).is(':checked')) {\n            const visibilityOptionsRow = $(this).closest('tr');\n            visibilityOptionsRow.find('input.answerCheckbox')\n                    .prop('checked', true)\n                    .trigger('change');\n        }\n    });\n\n    $currentQuestionTable.find('input.visibilityCheckbox').filter('[name=receiverLeaderCheckbox]').change(function () {\n        const visibilityOptionsRow = $(this).closest('tr');\n        visibilityOptionsRow.find('input[name=receiverFollowerCheckbox]')\n                .prop('checked', $(this).prop('checked'));\n    });\n}\n\nfunction fixContribQnGiverRecipient(questionNum) {\n    const $giverType = $(`#givertype-${questionNum}`);\n    const $recipientType = $(`#recipienttype-${questionNum}`);\n    const $questionTable = $(`#questionTable-${questionNum}`);\n\n    // Fix giver->recipient to be STUDENT->OWN_TEAM_MEMBERS_INCLUDING_SELF\n    $giverType.find('option').not('[value=\"STUDENTS\"]').hide();\n    $recipientType.find('option').not('[value=\"OWN_TEAM_MEMBERS_INCLUDING_SELF\"]').hide();\n\n    $giverType.find('option').not('[value=\"STUDENTS\"]').prop('disabled', true);\n    $recipientType.find('option').not('[value=\"OWN_TEAM_MEMBERS_INCLUDING_SELF\"]').prop('disabled', true);\n\n    $giverType.find('option').filter('[value=\"STUDENTS\"]').prop('selected', true);\n    $recipientType.find('option').filter('[value=\"OWN_TEAM_MEMBERS_INCLUDING_SELF\"]').prop('selected', true);\n\n    // simulate a click to update the text of the dropdown menu button\n    $questionTable.find('.feedback-path-dropdown-option[data-giver-type=\"STUDENTS\"]'\n            + '[data-recipient-type=\"OWN_TEAM_MEMBERS_INCLUDING_SELF\"]').click();\n    // the dropdown button is not an input tag and has no property \"disabled\", so .addClass is used\n    $questionTable.find('.feedback-path-dropdown > button').addClass('disabled');\n}\n\nexport {\n    fixContribQnGiverRecipient,\n    setContribQnVisibilityFormat,\n    setDefaultContribQnVisibilityIfNeeded,\n};\n","import {\n    ParamsNames,\n} from './const';\n\nfunction updateConstSumPointsValue(questionNum) {\n    if ($(`#${ParamsNames.FEEDBACK_QUESTION_CONSTSUMPOINTS}-${questionNum}`).val() < 1) {\n        $(`#${ParamsNames.FEEDBACK_QUESTION_CONSTSUMPOINTS}-${questionNum}`).val(100);\n    }\n    if ($(`#${ParamsNames.FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHOPTION}-${questionNum}`).val() < 1) {\n        $(`#${ParamsNames.FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHOPTION}-${questionNum}`).val(100);\n    }\n    if ($(`#${ParamsNames.FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHRECIPIENT}-${questionNum}`).val() < 1) {\n        $(`#${ParamsNames.FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHRECIPIENT}-${questionNum}`).val(100);\n    }\n}\n\nfunction addConstSumOption(questionNum) {\n    const questionId = `#form_editquestion-${questionNum}`;\n\n    const curNumberOfChoiceCreated =\n            parseInt($(`#${ParamsNames.FEEDBACK_QUESTION_NUMBEROFCHOICECREATED}-${questionNum}`).val(), 10);\n\n    $(`\n    <div class=\"margin-bottom-7px\" id=\"constSumOptionRow-${curNumberOfChoiceCreated}-${questionNum}\">\n        <div class=\"input-group width-100-pc\">\n            <input type=\"text\" name=\"${ParamsNames.FEEDBACK_QUESTION_CONSTSUMOPTION}-${curNumberOfChoiceCreated}\"\n                    id=\"${ParamsNames.FEEDBACK_QUESTION_CONSTSUMOPTION}-${curNumberOfChoiceCreated}-${questionNum}\"\n                    class=\"form-control constSumOptionTextBox\">\n            <span class=\"input-group-btn\">\n                <button class=\"btn btn-default removeOptionLink\" id=\"constSumRemoveOptionLink\"\n                        onclick=\"removeConstSumOption(${curNumberOfChoiceCreated}, ${questionNum})\"\n                        tabindex=\"-1\">\n                    <span class=\"glyphicon glyphicon-remove\"></span>\n                </button>\n            </span>\n        </div>\n    </div>\n    `).insertBefore($(`#constSumAddOptionRow-${questionNum}`));\n\n    $(`#${ParamsNames.FEEDBACK_QUESTION_NUMBEROFCHOICECREATED}-${questionNum}`).val(curNumberOfChoiceCreated + 1);\n\n    if ($(questionId).attr('editStatus') === 'hasResponses') {\n        $(questionId).attr('editStatus', 'mustDeleteResponses');\n    }\n}\n\nfunction showConstSumOptionTable(questionNum) {\n    $(`#constSumOptionTable-${questionNum}`).show();\n}\n\nfunction hideConstSumOptionTable(questionNum) {\n    $(`#constSumOptionTable-${questionNum}`).hide();\n}\n\nfunction removeConstSumOption(index, questionNum) {\n    const questionId = `#form_editquestion-${questionNum}`;\n    const $thisRow = $(`#constSumOptionRow-${index}-${questionNum}`);\n\n    // count number of child rows the table have and - 1 because of add option button\n    const numberOfOptions = $thisRow.parent().children('div').length - 1;\n\n    if (numberOfOptions <= 1) {\n        $thisRow.find('input').val('');\n    } else {\n        $thisRow.remove();\n\n        if ($(questionId).attr('editStatus') === 'hasResponses') {\n            $(questionId).attr('editStatus', 'mustDeleteResponses');\n        }\n    }\n}\n/**\n * If the radio button is checked, the corresponding number field will be enabled,\n * otherwise it will be disabled.\n */\nfunction toggleConstSumOptionsRadioButton(questionNum) {\n    const isConstSumPointsTotalChecked = $(`#constSumPointsTotal-${questionNum}`).prop('checked');\n    $(`#constSumPoints-${questionNum}`).prop('disabled', !isConstSumPointsTotalChecked);\n\n    const isConstSumPointsPerOptionChecked = $(`#constSumPointsPerOption-${questionNum}`).prop('checked');\n    $(`#constSumPointsForEachOption-${questionNum}`).prop('disabled', !isConstSumPointsPerOptionChecked);\n\n    const isConstSumPointsPerRecipientChecked = $(`#constSumPointsPerRecipient-${questionNum}`).prop('checked');\n    $(`#constSumPointsForEachRecipient-${questionNum}`).prop('disabled', !isConstSumPointsPerRecipientChecked);\n}\n\nfunction bindConstSumOptionsRadioButtons() {\n    $(document).on('change', 'input[name=\"constSumPointsPerOption\"]', (e) => {\n        const questionNumber = $(e.currentTarget).closest('form').attr('data-qnnumber');\n        toggleConstSumOptionsRadioButton(questionNumber);\n    });\n}\n\nfunction toggleConstSumDistributePointsOptions(checkbox, questionNum) {\n    const constSumDistributePointsSelect = `#constSumDistributePointsSelect-${questionNum}`;\n    const constSumDistributePointsOptions = `#constSumDistributePointsOptions-${questionNum}`;\n\n    if (checkbox.checked) {\n        $(constSumDistributePointsSelect).prop('disabled', false);\n        $(constSumDistributePointsOptions).attr('value',\n                $(constSumDistributePointsSelect).prop('value'));\n    } else {\n        $(constSumDistributePointsSelect).prop('disabled', true);\n        $(constSumDistributePointsOptions).attr('value', 'None');\n    }\n}\n\nfunction changeConstSumDistributePointsFor(questionNum) {\n    $(`#constSumDistributePointsOptions-${questionNum}`).attr('value',\n            $(`#constSumDistributePointsSelect-${questionNum}`).prop('value'));\n}\n\nexport {\n    addConstSumOption,\n    bindConstSumOptionsRadioButtons,\n    hideConstSumOptionTable,\n    removeConstSumOption,\n    showConstSumOptionTable,\n    toggleConstSumOptionsRadioButton,\n    updateConstSumPointsValue,\n    toggleConstSumDistributePointsOptions,\n    changeConstSumDistributePointsFor,\n};\n","const FeedbackPath = {\n    attachEvents() {\n        const allDropdownOptions = $('.feedback-path-dropdown-option');\n        FeedbackPath.attachEventsForAllOptions(allDropdownOptions);\n\n        const commonOptions = allDropdownOptions.not('.feedback-path-dropdown-option-other');\n        FeedbackPath.attachEventsForCommonOptions(commonOptions);\n\n        const otherOption = $('.feedback-path-dropdown-option-other');\n        FeedbackPath.attachEventsForOtherOption(otherOption);\n    },\n\n    attachEventsForAllOptions(allDropdownOptions) {\n        allDropdownOptions.on('click', (event) => {\n            const clickedElem = $(event.currentTarget);\n            const containingForm = FeedbackPath.getContainingForm(clickedElem);\n\n            FeedbackPath.setDropdownText(clickedElem.data('pathDescription'), containingForm);\n        });\n    },\n\n    attachEventsForCommonOptions(commonOptions) {\n        commonOptions.on('click', (event) => {\n            const clickedElem = $(event.currentTarget);\n            const containingForm = FeedbackPath.getContainingForm(clickedElem);\n\n            FeedbackPath.updateInputTags(\n                    clickedElem.data('giverType'), clickedElem.data('recipientType'), containingForm);\n            FeedbackPath.hideOtherOption(containingForm);\n        });\n    },\n\n    attachEventsForOtherOption(otherOption) {\n        otherOption.on('click', (event) => {\n            const clickedElem = $(event.currentTarget);\n            const containingForm = FeedbackPath.getContainingForm(clickedElem);\n\n            FeedbackPath.showOtherOption(containingForm);\n        });\n    },\n\n    showOtherOption(containingForm) {\n        containingForm.find('.feedback-path-others').show();\n    },\n\n    hideOtherOption(containingForm) {\n        containingForm.find('.feedback-path-others').hide();\n        containingForm.find('[class*= numberOfEntitiesElements]').hide();\n    },\n\n    updateInputTags(giverType, recipientType, containingForm) {\n        containingForm.find('[id^=givertype]').val(giverType);\n        containingForm.find('[id^=givertype]').trigger('change');\n\n        containingForm.find('[id^=recipienttype]').val(recipientType);\n        containingForm.find('[id^=recipienttype]').trigger('change');\n    },\n\n    getDropdownText(containingForm) {\n        const feedbackPathDropdown = containingForm.find('.feedback-path-dropdown');\n        return feedbackPathDropdown.find('button').html();\n    },\n\n    setDropdownText(text, containingForm) {\n        const feedbackPathDropdown = containingForm.find('.feedback-path-dropdown');\n        feedbackPathDropdown.find('button').html(text);\n    },\n\n    getContainingForm(elem) {\n        return elem.closest('form');\n    },\n\n    isCommonOptionSelected(containingForm) {\n        return containingForm.find('.feedback-path-dropdown > button').html().trim() !== 'Predefined combinations:';\n    },\n};\n\nexport {\n    FeedbackPath,\n};\n","/* global tinymce:false */\n\nimport {\n    showModalConfirmation,\n} from '../common/bootboxWrapper';\n\nimport {\n    ParamsNames,\n    BootstrapContextualColors,\n} from '../common/const';\n\nimport {\n    makeCsrfTokenParam,\n} from '../common/crypto';\n\nimport {\n    prepareDatepickers,\n} from '../common/datepicker';\n\nimport {\n    FeedbackPath,\n} from '../common/feedbackPath';\n\nimport {\n    isWithinView,\n} from '../common/helper';\n\nimport {\n    prepareInstructorPages,\n    setupFsCopyModal,\n} from '../common/instructor';\n\nimport {\n    bindUncommonSettingsEvents,\n    formatResponsesVisibilityGroup,\n    formatSessionVisibilityGroup,\n    showUncommonPanelsIfNotInDefaultValues,\n    updateUncommonSettingsInfo,\n} from '../common/instructorFeedbacks';\n\nimport {\n    addConstSumOption,\n    bindConstSumOptionsRadioButtons,\n    changeConstSumDistributePointsFor,\n    hideConstSumOptionTable,\n    removeConstSumOption,\n    showConstSumOptionTable,\n    toggleConstSumDistributePointsOptions,\n    toggleConstSumOptionsRadioButton,\n    updateConstSumPointsValue,\n} from '../common/questionConstSum';\n\nimport {\n    fixContribQnGiverRecipient,\n    setContribQnVisibilityFormat,\n    setDefaultContribQnVisibilityIfNeeded,\n} from '../common/questionContrib';\n\nimport {\n    addMcqOption,\n    bindMcqHasAssignedWeightsCheckbox,\n    bindMcqOtherOptionEnabled,\n    removeMcqOption,\n    toggleMcqHasAssignedWeights,\n    toggleMcqGeneratedOptions,\n    toggleMcqOtherOptionEnabled,\n    changeMcqGenerateFor,\n} from '../common/questionMcq';\n\nimport {\n    addMsqOption,\n    bindMsqEvents,\n    removeMsqOption,\n    toggleMsqGeneratedOptions,\n    toggleMsqMaxSelectableChoices,\n    toggleMsqMinSelectableChoices,\n    toggleMsqOtherOptionEnabled,\n    changeMsqGenerateFor,\n} from '../common/questionMsq';\n\nimport {\n    updateNumScalePossibleValues,\n} from '../common/questionNumScale';\n\nimport {\n    addRankOption,\n    bindRankEvents,\n    hideInvalidRankRecipientFeedbackPaths,\n    hideRankOptionTable,\n    removeRankOption,\n    showRankOptionTable,\n    toggleMaxOptionsToBeRanked,\n    toggleMinOptionsToBeRanked,\n    bindAutoFillEmptyRankOptionsChangeEvent,\n} from '../common/questionRank';\n\nimport {\n    addRubricCol,\n    addRubricRow,\n    bindAssignWeightsCheckboxes,\n    bindMoveRubricColButtons,\n    disableCornerMoveRubricColumnButtons,\n    hasAssignedWeights,\n    highlightRubricCol,\n    highlightRubricRow,\n    removeRubricCol,\n    removeRubricRow,\n    toggleAssignWeightsRow,\n} from '../common/questionRubric';\n\nimport {\n    destroyEditor,\n    richTextEditorBuilder,\n} from '../common/richTextEditor';\n\nimport {\n    scrollToElement,\n} from '../common/scrollTo';\n\nimport {\n    appendNewStatusMessage,\n    clearStatusMessages,\n    setStatusMessage,\n    setStatusMessageToForm,\n} from '../common/statusMessage';\n\nimport {\n    addLoadingIndicator,\n    disallowNonNumericEntries,\n    removeLoadingIndicator,\n} from '../common/ui';\n\nimport {\n    attachVisibilityCheckboxEvent,\n    attachVisibilityDropdownEvent,\n    formatCheckBoxes,\n    getVisibilityMessage,\n    matchVisibilityOptionToFeedbackPath,\n    showVisibilityCheckboxesIfCustomOptionSelected,\n    tallyCheckboxes,\n} from '../common/visibilityOptions';\n\nconst NEW_QUESTION = -1;\n\nconst WARNING_DISCARD_CHANGES = 'Warning: Any unsaved changes will be lost';\nconst CONFIRM_DISCARD_CHANGES = 'Are you sure you want to discard your unsaved edits?';\nconst CONFIRM_DISCARD_NEW_QNS = 'Are you sure you want to discard this question?';\n\nconst WARNING_DELETE_QNS = 'Warning: Deleted question cannot be recovered';\nconst CONFIRM_DELETE_QNS = 'Are you sure you want to delete this question?';\n\nconst WARNING_EDIT_DELETE_RESPONSES = 'Warning: Existing responses will be deleted by your action';\nconst CONFIRM_EDIT_DELETE_RESPONSES =\n        '<p>Editing these fields will result in <strong>all existing responses for this question to be deleted.</strong></p>'\n        + '<p>Are you sure you want to continue?</p>';\n\nconst FEEDBACK_QUESTION_TYPENAME_TEXT = 'Essay question';\nconst FEEDBACK_QUESTION_TYPENAME_MCQ = 'Multiple-choice (single answer)';\nconst FEEDBACK_QUESTION_TYPENAME_MSQ = 'Multiple-choice (multiple answers)';\nconst FEEDBACK_QUESTION_TYPENAME_NUMSCALE = 'Numerical-scale question';\nconst FEEDBACK_QUESTION_TYPENAME_CONSTSUM_OPTION = 'Distribute points (among options) question';\nconst FEEDBACK_QUESTION_TYPENAME_CONSTSUM_RECIPIENT = 'Distribute points (among recipients) question';\nconst FEEDBACK_QUESTION_TYPENAME_CONTRIB = 'Team contribution question';\nconst FEEDBACK_QUESTION_TYPENAME_RUBRIC = 'Rubric question';\nconst FEEDBACK_QUESTION_TYPENAME_RANK_OPTION = 'Rank options question';\nconst FEEDBACK_QUESTION_TYPENAME_RANK_RECIPIENT = 'Rank recipients question';\n\nconst DISPLAY_FEEDBACK_QUESTION_COPY_INVALID = 'There are no questions to be copied.';\nconst DISPLAY_FEEDBACK_QUESTION_NUMBEROFENTITIESINVALID =\n        'Please enter the maximum number of recipients each respondents should give feedback to.';\nconst DISPLAY_FEEDBACK_QUESTION_TEXTINVALID = 'Please enter a valid question. The question text cannot be empty.';\nconst DISPLAY_FEEDBACK_QUESTION_NUMSCALE_OPTIONSINVALID = 'Please enter valid options. The min/max/step cannot be empty.';\nconst DISPLAY_FEEDBACK_QUESTION_NUMSCALE_INTERVALINVALID =\n        'Please enter valid options. The interval is not divisible by the specified increment.';\nconst DISPLAY_FEEDBACK_SESSION_VISIBLE_DATEINVALID = 'Feedback session visible date must not be empty';\nconst DISPLAY_FEEDBACK_SESSION_PUBLISH_DATEINVALID = 'Feedback session publish date must not be empty';\n\nconst questionsBeforeEdit = [];\n\nfunction getCustomDateTimeFields() {\n    return $(`#${ParamsNames.FEEDBACK_SESSION_PUBLISHDATE}`).add(`#${ParamsNames.FEEDBACK_SESSION_PUBLISHTIME}`)\n            .add(`#${ParamsNames.FEEDBACK_SESSION_VISIBLEDATE}`)\n            .add(`#${ParamsNames.FEEDBACK_SESSION_VISIBLETIME}`);\n}\n\nfunction extractQuestionNumFromEditFormId(id) {\n    return parseInt(id.substring('form_editquestion-'.length, id.length), 10);\n}\n\nfunction getQuestionNumFromEditForm(form) {\n    if ($(form).attr('name') === 'form_addquestions') {\n        return -1;\n    }\n    return extractQuestionNumFromEditFormId($(form).attr('id'));\n}\n\n/**\n * Check whether the feedback question input is valid\n * @param form\n * @returns {Boolean}\n */\nfunction checkFeedbackQuestion(form) {\n    const recipientType = $(form).find(`select[name|=${ParamsNames.FEEDBACK_QUESTION_RECIPIENTTYPE}]`)\n            .find(':selected')\n            .val();\n    if (recipientType === 'STUDENTS' || recipientType === 'TEAMS') {\n        if ($(form).find(`[name|=${ParamsNames.FEEDBACK_QUESTION_NUMBEROFENTITIESTYPE}]:checked`).val() === 'custom'\n                && !$(form).find('.numberOfEntitiesBox').val()) {\n            setStatusMessageToForm(DISPLAY_FEEDBACK_QUESTION_NUMBEROFENTITIESINVALID,\n                    BootstrapContextualColors.DANGER, form);\n            return false;\n        }\n    }\n    if (!$(form).find(`[name=${ParamsNames.FEEDBACK_QUESTION_TEXT}]`).val()) {\n        setStatusMessageToForm(DISPLAY_FEEDBACK_QUESTION_TEXTINVALID, BootstrapContextualColors.DANGER, form);\n        return false;\n    }\n    if ($(form).find(`[name=${ParamsNames.FEEDBACK_QUESTION_TYPE}]`).val() === 'NUMSCALE') {\n        if (!$(form).find(`[name=${ParamsNames.FEEDBACK_QUESTION_NUMSCALE_MIN}]`).val()\n                || !$(form).find(`[name=${ParamsNames.FEEDBACK_QUESTION_NUMSCALE_MAX}]`).val()\n                || !$(form).find(`[name=${ParamsNames.FEEDBACK_QUESTION_NUMSCALE_STEP}]`).val()) {\n            setStatusMessageToForm(DISPLAY_FEEDBACK_QUESTION_NUMSCALE_OPTIONSINVALID,\n                    BootstrapContextualColors.DANGER, form);\n            return false;\n        }\n        const qnNum = getQuestionNumFromEditForm(form);\n        if (updateNumScalePossibleValues(qnNum)) {\n            return true;\n        }\n        setStatusMessageToForm(DISPLAY_FEEDBACK_QUESTION_NUMSCALE_INTERVALINVALID, BootstrapContextualColors.DANGER, form);\n        return false;\n    }\n    return true;\n}\n\nfunction checkEditFeedbackSession(form) {\n    if (form.visibledate.getAttribute('disabled')) {\n        if (!form.visibledate.value) {\n            setStatusMessageToForm(DISPLAY_FEEDBACK_SESSION_VISIBLE_DATEINVALID, BootstrapContextualColors.DANGER, form);\n            return false;\n        }\n    }\n    if (form.publishdate.getAttribute('disabled')) {\n        if (!form.publishdate.value) {\n            setStatusMessageToForm(DISPLAY_FEEDBACK_SESSION_PUBLISH_DATEINVALID, BootstrapContextualColors.DANGER, form);\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction duplicateQuestion(questionNum) {\n    if (questionNum === NEW_QUESTION) {\n        window.location.reload();\n        return false;\n    }\n    $(`#${ParamsNames.FEEDBACK_QUESTION_EDITTYPE}-${questionNum}`).val('duplicate');\n    $(`#form_editquestion-${questionNum}`).submit();\n    return false;\n}\n/**\n * Disables the editing of feedback session details.\n */\nfunction disableEditFS() {\n    // Save then disable fields\n    getCustomDateTimeFields().each(function () {\n        $(this).data('last', $(this).prop('disabled'));\n    });\n    $('#form_feedbacksession').find('text,input,button,textarea,select')\n            .prop('disabled', true);\n\n    if (typeof richTextEditorBuilder !== 'undefined') {\n        destroyEditor('instructions');\n        richTextEditorBuilder.initEditor('#instructions', {\n            inline: true,\n            readonly: true,\n        });\n    }\n\n    $('#fsEditLink').show();\n    $('#fsSaveLink').hide();\n    $('#button_submit').hide();\n}\n\nfunction bindFeedbackSessionEditFormSubmission() {\n    $('#form_feedbacksession').submit((event) => {\n        // Prevent form submission\n        event.preventDefault();\n\n        // populate hidden input\n        if (typeof tinymce !== 'undefined') {\n            tinymce.get('instructions').save();\n        }\n        const $form = $(event.currentTarget);\n\n        // LEGACY IMPLEMENTATION: Ensure the 'editType' to be 'edit' before submitting,\n        // as the global state below might be modified erroneously elsewhere\n        const questionNum = $($form).data('qnnumber');\n        $(`#${ParamsNames.FEEDBACK_QUESTION_EDITTYPE}-${questionNum}`).val('edit');\n\n        addLoadingIndicator($('#button_submit'), 'Saving');\n\n        // Use Ajax to submit form data\n        $.ajax({\n            url: `/page/instructorFeedbackEditSave?${makeCsrfTokenParam()}`,\n            type: 'POST',\n            data: $form.serialize(),\n            beforeSend() {\n                clearStatusMessages();\n            },\n            success(result) {\n                const { statusMessagesToUser, resolvedTimeFields, hasError } = result;\n\n                for (let i = 0; i < statusMessagesToUser.length; i += 1) {\n                    const statusMessageToUser = statusMessagesToUser[i];\n                    appendNewStatusMessage(statusMessageToUser.text, BootstrapContextualColors[statusMessageToUser.color]);\n                }\n\n                const resolvedTimeInputIds = Object.keys(resolvedTimeFields);\n                for (let i = 0; i < resolvedTimeInputIds.length; i += 1) {\n                    const resolvedTimeInputId = resolvedTimeInputIds[i];\n                    const resolvedTimeInputValue = resolvedTimeFields[resolvedTimeInputId];\n                    $(`#${resolvedTimeInputId}`).val(resolvedTimeInputValue);\n                }\n\n                removeLoadingIndicator($('#button_submit'), 'Save Changes');\n                if (!hasError) {\n                    disableEditFS();\n                }\n            },\n        });\n    });\n}\n\n/**\n * If an input field is hidden, removes required attribute when saving changes. See issue #8688.\n *\n * TODO: Remove this function when #8688 is fixed.\n */\nfunction removeRequiredIfElementHidden() {\n    $('#form_editquestion--1').on('click', '#button_submit_add', () => {\n        $('input:hidden').prop('required', false);\n    });\n}\n\n/**\n * Disable question fields and \"save changes\" button for the given question number,\n * and shows the edit link.\n * @param questionNum\n */\nfunction disableQuestion(questionNum) {\n    if (typeof richTextEditorBuilder !== 'undefined') {\n        destroyEditor(`${ParamsNames.FEEDBACK_QUESTION_DESCRIPTION}-${questionNum}`);\n        /* eslint-disable camelcase */ // The property names are determined by external library (tinymce)\n        richTextEditorBuilder.initEditor(`#${ParamsNames.FEEDBACK_QUESTION_DESCRIPTION}-${questionNum}`, {\n            inline: true,\n            readonly: true,\n        });\n        /* eslint-enable camelcase */\n    }\n    $(`#${ParamsNames.FEEDBACK_QUESTION_DESCRIPTION}-${questionNum}`).addClass('well');\n\n    const $currentQuestionTable = $(`#questionTable-${questionNum}`);\n\n    $currentQuestionTable.find('text,button,textarea,select,input').prop('disabled', true);\n    $currentQuestionTable.find(`#${ParamsNames.FEEDBACK_QUESTION_NUMBER}-${questionNum}`).hide();\n    $currentQuestionTable.find(`#${ParamsNames.FEEDBACK_QUESTION_NUMBER_STATIC}-${questionNum}`).show();\n    $currentQuestionTable.find('[id^=\"mcqAddOptionLink-\"]').hide();\n    $currentQuestionTable.find('[id^=\"msqAddOptionLink-\"]').hide();\n    $currentQuestionTable.find('.removeOptionLink').hide();\n\n    /* Check whether generate options for students/instructors/teams is selected\n       If so, hide 'add Other option' and the mcq weight checkbox for mcq questions */\n    if ($currentQuestionTable.find(`#generateMcqOptionsCheckbox-${questionNum}`).prop('checked')) {\n        $currentQuestionTable.find(`#mcqOtherOptionFlag-${questionNum}`).closest('.checkbox').hide();\n        // Hide the enclosing parent div to hide the weight checkbox and 'Choices are weighted' label.\n        $currentQuestionTable.find(`#mcqHasAssignedWeights-${questionNum}`).parent().hide();\n        $currentQuestionTable.find(`#mcqOtherWeight-${questionNum}`).hide();\n    } else if ($currentQuestionTable.find(`#generateMsqOptionsCheckbox-${questionNum}`).prop('checked')) {\n        $currentQuestionTable.find(`#msqOtherOptionFlag-${questionNum}`).closest('.checkbox').hide();\n    } else {\n        $currentQuestionTable.find(`#mcqOtherOptionFlag-${questionNum}`).closest('.checkbox').show();\n        $currentQuestionTable.find(`#msqOtherOptionFlag-${questionNum}`).closest('.checkbox').show();\n        // Shows the enclosing parent div to show the weight checkbox and 'Choices are weighted' label.\n        $currentQuestionTable.find(`#mcqHasAssignedWeights-${questionNum}`).parent().show();\n        $currentQuestionTable.find(`#mcqOtherWeight-${questionNum}`).show();\n    }\n    toggleMcqHasAssignedWeights($currentQuestionTable.find(`#mcqHasAssignedWeights-${questionNum}`), questionNum);\n\n    $currentQuestionTable.find(`#rubricAddChoiceLink-${questionNum}`).hide();\n    $currentQuestionTable.find(`#rubricAddSubQuestionLink-${questionNum}`).hide();\n    $currentQuestionTable.find(`.rubricRemoveChoiceLink-${questionNum}`).hide();\n    $currentQuestionTable.find(`.rubricRemoveSubQuestionLink-${questionNum}`).hide();\n\n    toggleAssignWeightsRow($currentQuestionTable.find('input[id^=\"rubricAssignWeights\"]'));\n\n    if (!hasAssignedWeights(questionNum)) {\n        $currentQuestionTable.find(`#rubricWeights-${questionNum}`).hide();\n    }\n\n    $(`#${ParamsNames.FEEDBACK_QUESTION_EDITTEXT}-${questionNum}`).show();\n    $(`#${ParamsNames.FEEDBACK_QUESTION_SAVECHANGESTEXT}-${questionNum}`).hide();\n    $(`#button_question_submit-${questionNum}`).hide();\n\n    hideInvalidRankRecipientFeedbackPaths(questionNum);\n}\n\n/**\n * Disables all questions\n */\nfunction disableAllQuestions() {\n    const numQuestions = $('.questionTable').length;\n    for (let i = 0; i < numQuestions; i += 1) {\n        disableQuestion(i);\n    }\n}\n\n/**\n * Enables the editing of feedback session details.\n */\nfunction enableEditFS() {\n    const $customDateTimeFields = getCustomDateTimeFields();\n\n    $customDateTimeFields.each(function () {\n        $(this).prop('disabled', $(this).data('last'));\n    });\n\n    // instructors should not be able to prevent Session Opening reminder from getting sent\n    // as students without accounts need to receive the session opening email to respond\n    const $sessionOpeningReminder = $('#sendreminderemail_open');\n\n    $('#form_feedbacksession').find('text,input,button,textarea,select')\n            .not($customDateTimeFields)\n            .not($sessionOpeningReminder)\n            .not('.disabled')\n            .prop('disabled', false);\n\n    if (typeof richTextEditorBuilder !== 'undefined') {\n        destroyEditor('instructions');\n        /* eslint-disable camelcase */ // The property names are determined by external library (tinymce)\n        richTextEditorBuilder.initEditor('#instructions', {\n            inline: true,\n        });\n        /* eslint-enable camelcase */\n    }\n    $('#fsEditLink').hide();\n    $('#fsSaveLink').show();\n    $('#button_submit').show();\n}\n\n/**\n * Creates a copy of the original question before any new edits\n * @param questionNum\n */\nfunction backupQuestion(questionNum) {\n    questionsBeforeEdit[questionNum] = questionsBeforeEdit[questionNum]\n                                       || $(`#questionTable-${questionNum} > .panel-body`).html();\n}\n\n/**\n * Enables question fields and \"save changes\" button for the given question number,\n * and hides the edit link.\n * @param questionNum\n */\nfunction enableQuestion(questionNum) {\n    if (typeof richTextEditorBuilder !== 'undefined') {\n        destroyEditor(`${ParamsNames.FEEDBACK_QUESTION_DESCRIPTION}-${questionNum}`);\n        /* eslint-disable camelcase */ // The property names are determined by external library (tinymce)\n        richTextEditorBuilder.initEditor(`#${ParamsNames.FEEDBACK_QUESTION_DESCRIPTION}-${questionNum}`, {\n            inline: true,\n        });\n        /* eslint-enable camelcase */\n    }\n    $(`#${ParamsNames.FEEDBACK_QUESTION_DESCRIPTION}-${questionNum}`).removeClass('well');\n\n    const $currentQuestionTable = $(`#questionTable-${questionNum}`);\n\n    $currentQuestionTable.find('text,button,textarea,select,input')\n            .not('[name=\"receiverFollowerCheckbox\"]')\n            .not('.disabled_radio')\n            .prop('disabled', false);\n\n    $currentQuestionTable.find(`#${ParamsNames.FEEDBACK_QUESTION_NUMBER_STATIC}-${questionNum}`).hide();\n\n    $currentQuestionTable.find('.removeOptionLink').show();\n    $currentQuestionTable.find('.addOptionLink').show();\n\n    $currentQuestionTable.find(`#rubricAddChoiceLink-${questionNum}`).show();\n    $currentQuestionTable.find(`#rubricAddSubQuestionLink-${questionNum}`).show();\n    $currentQuestionTable.find(`.rubricRemoveChoiceLink-${questionNum}`).show();\n    $currentQuestionTable.find(`.rubricRemoveSubQuestionLink-${questionNum}`).show();\n\n    toggleMcqGeneratedOptions($currentQuestionTable.find(`#generateMcqOptionsCheckbox-${questionNum}`).get(0), questionNum);\n    toggleMsqGeneratedOptions($currentQuestionTable.find(`#generateMsqOptionsCheckbox-${questionNum}`).get(0), questionNum);\n\n    toggleMsqMaxSelectableChoices(questionNum);\n    toggleMsqMinSelectableChoices(questionNum);\n    if ($(`#constSumToRecipients-${questionNum}`).val() === 'true') {\n        $(`#constSumOptionTable-${questionNum}`).hide();\n        $(`#constSumOption_Option-${questionNum}`).hide();\n        $(`#constSumOption_Recipient-${questionNum}`).show();\n    } else {\n        $(`#constSumOptionTable-${questionNum}`).show();\n        $(`#constSumOption_Option-${questionNum}`).show();\n        $(`#constSumOption_Recipient-${questionNum}`).hide();\n    }\n\n    toggleConstSumOptionsRadioButton(questionNum);\n    if ($(`#constSum_UnevenDistribution-${questionNum}`).prop('checked')) {\n        $(`#constSumDistributePointsSelect-${questionNum}`).prop('disabled', false);\n    } else {\n        $(`#constSumDistributePointsSelect-${questionNum}`).prop('disabled', true);\n    }\n\n    if ($(`#questionTable-${questionNum}`).parent().find('input[name=\"questiontype\"]').val() === 'CONTRIB') {\n        fixContribQnGiverRecipient(questionNum);\n        setContribQnVisibilityFormat(questionNum);\n    }\n\n    $(`#${ParamsNames.FEEDBACK_QUESTION_NUMBER}-${questionNum}`).show();\n    $(`#${ParamsNames.FEEDBACK_QUESTION_EDITTEXT}-${questionNum}`).hide();\n    $(`#${ParamsNames.FEEDBACK_QUESTION_SAVECHANGESTEXT}-${questionNum}`).show();\n    $(`#${ParamsNames.FEEDBACK_QUESTION_DISCARDCHANGES}-${questionNum}`).show();\n    $(`#${ParamsNames.FEEDBACK_QUESTION_EDITTYPE}-${questionNum}`).val('edit');\n    $(`#button_question_submit-${questionNum}`).show();\n    toggleMaxOptionsToBeRanked(questionNum);\n    toggleMinOptionsToBeRanked(questionNum);\n\n    const $currentQuestionForm = $currentQuestionTable.closest('form');\n    showVisibilityCheckboxesIfCustomOptionSelected($currentQuestionForm);\n    disableCornerMoveRubricColumnButtons(questionNum);\n    hideInvalidRankRecipientFeedbackPaths(questionNum);\n}\n\n/**\n *Enables editing of question fields and enables the \"save changes\" button for\n * the given question number, while hiding the edit link. Does the opposite for all other questions.\n * @param questionNum\n */\nfunction enableEdit(questionNum, maxQuestions) {\n    let i = maxQuestions;\n    while (i) {\n        if (questionNum === i) {\n            backupQuestion(i);\n            enableQuestion(i);\n        } else {\n            disableQuestion(i);\n        }\n        i -= 1;\n    }\n\n    return false;\n}\n\nfunction enableNewQuestion() {\n    if (typeof richTextEditorBuilder !== 'undefined') {\n        destroyEditor(`${ParamsNames.FEEDBACK_QUESTION_DESCRIPTION}-${NEW_QUESTION}`);\n        /* eslint-disable camelcase */ // The property names are determined by external library (tinymce)\n        richTextEditorBuilder.initEditor(`#${ParamsNames.FEEDBACK_QUESTION_DESCRIPTION}-${NEW_QUESTION}`, {\n            inline: true,\n        });\n        /* eslint-enable camelcase */\n    }\n\n    removeRequiredIfElementHidden(); // TODO: Remove this function call when #8688 is fixed.\n\n    const $newQuestionTable = $(`#questionTable-${NEW_QUESTION}`);\n\n    $newQuestionTable.find('text,button,textarea,select,input')\n            .not('[name=\"receiverFollowerCheckbox\"]')\n            .not('.disabled_radio')\n            .prop('disabled', false);\n    $newQuestionTable.find('.removeOptionLink').show();\n    $newQuestionTable.find('.addOptionLink').show();\n\n    $newQuestionTable.find(`#rubricAddChoiceLink-${NEW_QUESTION}`).show();\n    $newQuestionTable.find(`#rubricAddSubQuestionLink-${NEW_QUESTION}`).show();\n\n    // If instructor had assigned rubric weights before,\n    // then display the weights row, otherwise hide it.\n    if (hasAssignedWeights(NEW_QUESTION)) {\n        $newQuestionTable.find(`#rubricWeights-${NEW_QUESTION}`).show();\n    } else {\n        $newQuestionTable.find(`#rubricWeights-${NEW_QUESTION}`).hide();\n    }\n\n    $newQuestionTable.find(`.rubricRemoveChoiceLink-${NEW_QUESTION}`).show();\n    $newQuestionTable.find(`.rubricRemoveSubQuestionLink-${NEW_QUESTION}`).show();\n\n    toggleAssignWeightsRow($newQuestionTable.find(`#rubricAssignWeights-${NEW_QUESTION}`));\n\n    toggleMcqGeneratedOptions($(`#generateMcqOptionsCheckbox-${NEW_QUESTION}`), NEW_QUESTION);\n    toggleMcqHasAssignedWeights($(`#mcqHasAssignedWeights-${NEW_QUESTION}`), NEW_QUESTION);\n    toggleMsqGeneratedOptions($(`#generateMsqOptionsCheckbox-${NEW_QUESTION}`), NEW_QUESTION);\n\n    toggleConstSumDistributePointsOptions($(`#constSum_UnevenDistribution-${NEW_QUESTION}`), NEW_QUESTION);\n\n    toggleMsqMaxSelectableChoices(NEW_QUESTION);\n    toggleMsqMinSelectableChoices(NEW_QUESTION);\n    $(`#${ParamsNames.FEEDBACK_QUESTION_EDITTEXT}-${NEW_QUESTION}`).hide();\n    $(`#${ParamsNames.FEEDBACK_QUESTION_SAVECHANGESTEXT}-${NEW_QUESTION}`).show();\n    $(`#${ParamsNames.FEEDBACK_QUESTION_EDITTYPE}-${NEW_QUESTION}`).val('edit');\n    $(`#button_question_submit-${NEW_QUESTION}`).show();\n    disableCornerMoveRubricColumnButtons(NEW_QUESTION);\n    toggleMaxOptionsToBeRanked(NEW_QUESTION);\n    toggleMinOptionsToBeRanked(NEW_QUESTION);\n    hideInvalidRankRecipientFeedbackPaths(NEW_QUESTION);\n    toggleConstSumOptionsRadioButton(NEW_QUESTION);\n}\n\n/**\n * Pops up confirmation dialog whether to delete specified question\n * @param question questionNum\n * @returns\n */\nfunction deleteQuestion(questionNum) {\n    if (questionNum === NEW_QUESTION) {\n        window.location.reload();\n        return false;\n    }\n\n    const okCallback = function () {\n        $(`#${ParamsNames.FEEDBACK_QUESTION_EDITTYPE}-${questionNum}`).val('delete');\n        $(`#form_editquestion-${questionNum}`).submit();\n    };\n    showModalConfirmation(WARNING_DELETE_QNS, CONFIRM_DELETE_QNS, okCallback,\n            null, null, null, BootstrapContextualColors.DANGER);\n    return false;\n}\n\nfunction hideNewQuestionAndShowNewQuestionForm() {\n    $(`#questionTable-${NEW_QUESTION}`).hide();\n    $('#addNewQuestionTable').show();\n\n    // re-enables all feedback path options, which may have been hidden by team contribution question\n    $(`#givertype-${NEW_QUESTION}`).find('option').show().prop('disabled', false);\n    $(`#recipienttype-${NEW_QUESTION}`).find('option').show().prop('disabled', false);\n    $(`#questionTable-${NEW_QUESTION}`).find('.feedback-path-dropdown > button').removeClass('disabled');\n    $(`#questionTable-${NEW_QUESTION}`).find('.visibility-options-dropdown .dropdown-menu li').removeClass('hidden');\n    FeedbackPath.attachEvents();\n}\n\nfunction getQuestionNum($elementInQuestionForm) {\n    const $questionForm = $elementInQuestionForm.closest('form');\n    const cssId = $questionForm.attr('id');\n    if (cssId.endsWith(`-${NEW_QUESTION}`)) {\n        return NEW_QUESTION;\n    }\n    const splitCssId = cssId.split('-');\n    return splitCssId[splitCssId.length - 1];\n}\n\n/**\n * Hides/shows the \"Number of Recipients Box\" of the question\n * depending on the participant type and formats the label text for it.\n * @param participantType, questionNum\n */\nfunction formatNumberBox(participantType, questionNum) {\n    const $questionForm = $(`#form_editquestion-${questionNum}`);\n    const $numberOfEntitiesBox = $questionForm.find('.numberOfEntitiesElements');\n\n    if (participantType === 'STUDENTS' || participantType === 'TEAMS' || participantType === 'INSTRUCTORS') {\n        $numberOfEntitiesBox.show();\n\n        const $numberOfEntitiesLabel = $numberOfEntitiesBox.find('.number-of-entities-inner-text');\n        $numberOfEntitiesLabel.html(participantType.toLowerCase());\n    } else {\n        $numberOfEntitiesBox.hide();\n    }\n\n    tallyCheckboxes(questionNum);\n}\n\nconst updateVisibilityOfNumEntitiesBox = function () {\n    const questionNum = getQuestionNum($(this));\n    const participantType = $(this).val();\n    formatNumberBox(participantType, questionNum);\n};\n\n/**\n * Discards new changes made and restores the original question\n * @param questionNum\n */\nfunction restoreOriginal(questionNum) {\n    if (questionNum === NEW_QUESTION) {\n        hideNewQuestionAndShowNewQuestionForm();\n    } else {\n        $(`#questionTable-${questionNum} > .panel-body`).html(questionsBeforeEdit[questionNum]);\n\n        $(`#${ParamsNames.FEEDBACK_QUESTION_EDITTEXT}-${questionNum}`).show();\n        $(`#${ParamsNames.FEEDBACK_QUESTION_SAVECHANGESTEXT}-${questionNum}`).hide();\n        $(`#${ParamsNames.FEEDBACK_QUESTION_DISCARDCHANGES}-${questionNum}`).hide();\n        $(`#${ParamsNames.FEEDBACK_QUESTION_EDITTYPE}-${questionNum}`).val('');\n        $(`#button_question_submit-${questionNum}`).hide();\n        $(`#${ParamsNames.FEEDBACK_QUESTION_NUMBER}-${questionNum}`).val(questionNum);\n        $(`#${ParamsNames.FEEDBACK_QUESTION_NUMBER}-${questionNum}`).prop('disabled', true);\n        $(`#${ParamsNames.FEEDBACK_QUESTION_NUMBER}-${questionNum}`).hide();\n        $(`#${ParamsNames.FEEDBACK_QUESTION_NUMBER_STATIC}-${questionNum}`).show();\n    }\n\n    // re-attach events for form elements\n    $(`#${ParamsNames.FEEDBACK_QUESTION_RECIPIENTTYPE}-${questionNum}`).change(updateVisibilityOfNumEntitiesBox);\n    FeedbackPath.attachEvents();\n}\n\n/**\n * Allows users to discard unsaved edits to the question\n */\nfunction discardChanges(questionNum) {\n    const confirmationMsg = questionNum === NEW_QUESTION\n            ? CONFIRM_DISCARD_NEW_QNS\n            : CONFIRM_DISCARD_CHANGES;\n    const okCallback = function () {\n        restoreOriginal(questionNum);\n    };\n    showModalConfirmation(WARNING_DISCARD_CHANGES, confirmationMsg, okCallback, null, null, null,\n            BootstrapContextualColors.WARNING);\n}\n\n/**\n * 1. Disallow non-numeric input to all inputs expecting numbers\n * 2. Initialize the visibility of 'Number of Recipients Box' according to the participant type (visible only\n * when participant type is STUDENTS OR TEAMS)\n * 3. Bind onChange of recipientType to modify numEntityBox visibility\n */\nfunction formatNumberBoxes() {\n    disallowNonNumericEntries($('input.numberOfEntitiesBox'), false, false);\n    disallowNonNumericEntries($('input.minScaleBox'), false, true);\n    disallowNonNumericEntries($('input.maxScaleBox'), false, true);\n    disallowNonNumericEntries($('input.stepBox'), true, false);\n    disallowNonNumericEntries($('input.pointsBox'), false, false);\n    disallowNonNumericEntries($('input[id^=\"rubricWeight\"]'), true, true);\n\n    $(`select[name=${ParamsNames.FEEDBACK_QUESTION_RECIPIENTTYPE}]`).each(updateVisibilityOfNumEntitiesBox)\n            .change(updateVisibilityOfNumEntitiesBox);\n}\n\nfunction hideAllNewQuestionForms() {\n    $('#textForm').hide();\n    $('#mcqForm').hide();\n    $('#msqForm').hide();\n    $('#numScaleForm').hide();\n    $('#constSumForm').hide();\n    $('#rubricForm').hide();\n    $('#contribForm').hide();\n    $('#rankOptionsForm').hide();\n    $('#rankRecipientsForm').hide();\n}\n\nfunction prepareQuestionForm(type) {\n    hideAllNewQuestionForms();\n\n    switch (type) {\n    case 'TEXT':\n        $('#questionTypeHeader').html(FEEDBACK_QUESTION_TYPENAME_TEXT);\n\n        $('#textForm').show();\n        break;\n    case 'MCQ':\n        $(`#${ParamsNames.FEEDBACK_QUESTION_NUMBEROFCHOICECREATED}-${NEW_QUESTION}`).val(2);\n        $('#questionTypeHeader').html(FEEDBACK_QUESTION_TYPENAME_MCQ);\n\n        $('#mcqForm').show();\n        break;\n    case 'MSQ':\n        $(`#${ParamsNames.FEEDBACK_QUESTION_NUMBEROFCHOICECREATED}-${NEW_QUESTION}`).val(2);\n        $('#questionTypeHeader').html(FEEDBACK_QUESTION_TYPENAME_MSQ);\n\n        $('#msqForm').show();\n        break;\n    case 'NUMSCALE':\n        $('#questionTypeHeader').html(FEEDBACK_QUESTION_TYPENAME_NUMSCALE);\n\n        $('#numScaleForm').show();\n        $(`#${ParamsNames.FEEDBACK_QUESTION_TEXT}`).attr(\n                'placeholder', 'e.g. Rate the class from 1 (very bad) to 5 (excellent)');\n        break;\n    case 'CONSTSUM_OPTION':\n        $(`#${ParamsNames.FEEDBACK_QUESTION_NUMBEROFCHOICECREATED}-${NEW_QUESTION}`).val(2);\n        $(`#${ParamsNames.FEEDBACK_QUESTION_CONSTSUMTORECIPIENTS}-${NEW_QUESTION}`).val('false');\n        $(`#constSumOption_Recipient-${NEW_QUESTION}`).hide();\n        $(`#constSumOption_Option-${NEW_QUESTION}`).show();\n        showConstSumOptionTable(NEW_QUESTION);\n        $('#questionTypeHeader').html(FEEDBACK_QUESTION_TYPENAME_CONSTSUM_OPTION);\n\n        $('#constSumForm').show();\n        $(`#constSumPointsTotal-${NEW_QUESTION}`).prop('checked', true);\n        break;\n    case 'CONSTSUM_RECIPIENT': {\n        const optionText = $(`#constSum_labelText-${NEW_QUESTION}`).text();\n        const tooltipText = $(`#constSum_tooltipText-${NEW_QUESTION}`).attr('data-original-title');\n\n        $(`#${ParamsNames.FEEDBACK_QUESTION_CONSTSUMTORECIPIENTS}-${NEW_QUESTION}`).val('true');\n        $(`#constSumOption_Option-${NEW_QUESTION}`).hide();\n        $(`#constSumOption_Recipient-${NEW_QUESTION}`).show();\n        hideConstSumOptionTable(NEW_QUESTION);\n        $('#questionTypeHeader').html(FEEDBACK_QUESTION_TYPENAME_CONSTSUM_RECIPIENT);\n\n        $('#constSumForm').show();\n        $(`#constSumPointsTotal-${NEW_QUESTION}`).prop('checked', true);\n        $(`#constSum_labelText-${NEW_QUESTION}`).text(optionText.replace('option', 'recipient'));\n        $(`#constSum_tooltipText-${NEW_QUESTION}`).attr('data-original-title', tooltipText.replace('option', 'recipient'));\n        break;\n    }\n    case 'CONTRIB':\n        $('#questionTypeHeader').html(FEEDBACK_QUESTION_TYPENAME_CONTRIB);\n\n        $('#contribForm').show();\n        fixContribQnGiverRecipient(NEW_QUESTION);\n        setContribQnVisibilityFormat(NEW_QUESTION);\n        setDefaultContribQnVisibilityIfNeeded(NEW_QUESTION);\n        break;\n    case 'RUBRIC':\n        $('#questionTypeHeader').html(FEEDBACK_QUESTION_TYPENAME_RUBRIC);\n\n        $('#rubricForm').show();\n        break;\n    case 'RANK_OPTIONS':\n        $(`#${ParamsNames.FEEDBACK_QUESTION_NUMBEROFCHOICECREATED}-${NEW_QUESTION}`).val(2);\n        $(`#${ParamsNames.FEEDBACK_QUESTION_RANKTORECIPIENTS}-${NEW_QUESTION}`).val('false');\n        $(`#rankOption_Recipient-${NEW_QUESTION}`).hide();\n        showRankOptionTable(NEW_QUESTION);\n        $('#questionTypeHeader').html(FEEDBACK_QUESTION_TYPENAME_RANK_OPTION);\n\n        $('#rankOptionsForm').show();\n        break;\n    case 'RANK_RECIPIENTS':\n        $(`#${ParamsNames.FEEDBACK_QUESTION_RANKTORECIPIENTS}-${NEW_QUESTION}`).val('true');\n        $(`#rankOption_Option-${NEW_QUESTION}`).hide();\n        hideRankOptionTable(NEW_QUESTION);\n        $('#questionTypeHeader').html(FEEDBACK_QUESTION_TYPENAME_RANK_RECIPIENT);\n\n        $('#rankRecipientsForm').show();\n        break;\n    default:\n        // do nothing if the question type is not recognized, which should not happen\n        break;\n    }\n}\n\n/**\n * Copy options (Feedback giver, recipient, and all check boxes)\n * from the previous question\n */\nfunction copyOptions(newType) {\n    // If there is one or less questions, there's no need to copy.\n    if ($('.questionTable').size() < 2) {\n        return;\n    }\n\n    const prevType = $('input[name=\"questiontype\"]').eq(-2).val();\n\n    // Don't copy from non-contrib to contrib question, as these have special restrictions\n    if (newType === 'CONTRIB' && prevType !== 'CONTRIB') {\n        return;\n    }\n\n    // Feedback giver setup\n    const $prevGiver = $('select[name=\"givertype\"]').eq(-2);\n    const $currGiver = $('select[name=\"givertype\"]').last();\n\n    $currGiver.val($prevGiver.val());\n\n    // Feedback recipient setup\n    const $prevRecipient = $('select[name=\"recipienttype\"]').eq(-2);\n    const $currRecipient = $('select[name=\"recipienttype\"]').last();\n\n    $currRecipient.val($prevRecipient.val());\n\n    // Hide other feedback path options and update common feedback path dropdown text if a common option is selected\n    const $prevQuestionForm = $('form[id^=\"form_editquestion-\"]').eq(-2);\n    const $newQuestionForm = $(`#form_editquestion-${NEW_QUESTION}`);\n\n    const isPrevQuestionUsingCommonOption = FeedbackPath.isCommonOptionSelected($prevQuestionForm);\n    if (isPrevQuestionUsingCommonOption) {\n        FeedbackPath.hideOtherOption($newQuestionForm);\n        const prevQuestionSelectedOption = FeedbackPath.getDropdownText($prevQuestionForm);\n        FeedbackPath.setDropdownText(prevQuestionSelectedOption, $newQuestionForm);\n    } else {\n        FeedbackPath.showOtherOption($newQuestionForm);\n        FeedbackPath.setDropdownText('Predefined combinations:', $newQuestionForm);\n    }\n\n    // Number of recipient setup\n    formatNumberBox($currRecipient.val(), NEW_QUESTION);\n    const $prevRadioButtons = $('.questionTable').eq(-2).find('input[name=\"numofrecipientstype\"]');\n    const $currRadioButtons = $('.questionTable').last().find('input[name=\"numofrecipientstype\"]');\n\n    $currRadioButtons.each(function (index) {\n        $(this).prop('checked', $prevRadioButtons.eq(index).prop('checked'));\n    });\n\n    const $prevNumOfRecipients = $('input[name=\"numofrecipients\"]').eq(-2);\n    const $currNumOfRecipients = $('input[name=\"numofrecipients\"]').last();\n\n    $currNumOfRecipients.val($prevNumOfRecipients.val());\n\n    // Check boxes setup\n    const $prevTable = $('.data-table').eq(-2).find('.visibilityCheckbox');\n    const $currTable = $('.data-table').last().find('.visibilityCheckbox');\n\n    $currTable.each(function (index) {\n        $(this).prop('checked', $prevTable.eq(index).prop('checked'));\n    });\n\n    // Hide visibility options and update common visibility options dropdown text if a common option is selected\n    const prevQuestionVisibilityOption = $prevQuestionForm.find('.visibility-options-dropdown > button').text();\n    $newQuestionForm.find('.visibility-options-dropdown > button').text(prevQuestionVisibilityOption);\n\n    const isCommonVisibilityOptionSelected = prevQuestionVisibilityOption.trim() !== 'Custom visibility option:';\n    if (isCommonVisibilityOptionSelected) {\n        $newQuestionForm.find('.visibilityOptions').hide();\n    } else {\n        $newQuestionForm.find('.visibilityOptions').show();\n    }\n\n    matchVisibilityOptionToFeedbackPath($currGiver);\n}\n\n/**\n * Sets the correct initial question number from the value field\n */\nfunction formatQuestionNumbers() {\n    const $questions = $('.questionTable');\n\n    $questions.each(function (index) {\n        const $selector = $(this).find('.questionNumber');\n        $selector.val(index + 1);\n        if (index !== $questions.size() - 1) {\n            $selector.prop('disabled', true);\n        }\n    });\n}\n\n/**\n * Adds event handler to load 'copy question' modal contents by ajax.\n */\nfunction setupQuestionCopyModal() {\n    $('#copyModal').on('show.bs.modal', (event) => {\n        const button = $(event.relatedTarget); // Button that triggered the modal\n        const actionlink = button.data('actionlink');\n        const courseid = button.data('courseid');\n        const fsname = button.data('fsname');\n\n        const $questionCopyStatusMessage = $('#question-copy-modal-status');\n        $.ajax({\n            type: 'GET',\n            url: `${actionlink}&courseid=${encodeURIComponent(courseid)}&fsname=${encodeURIComponent(fsname)}`,\n            beforeSend() {\n                $('#button_copy_submit').prop('disabled', true);\n                $('#copyTableModal').remove();\n                $questionCopyStatusMessage.removeClass('alert alert-danger');\n                $questionCopyStatusMessage.html(\n                        'Loading possible questions to copy. Please wait ...<br>'\n                      + \"<img class='margin-center-horizontal' src='/images/ajax-loader.gif'/>\");\n            },\n            error() {\n                $questionCopyStatusMessage.html(\n                        'Error retrieving questions. Please close the dialog window and try again.');\n                $questionCopyStatusMessage.addClass('alert alert-danger');\n            },\n            success(data) {\n                const $questionRows = $(data).find('tbody > tr');\n                if ($questionRows.length) {\n                    $('#copyModalForm').prepend(data);\n                    $questionCopyStatusMessage.html('');\n                } else {\n                    $questionCopyStatusMessage.addClass('alert alert-danger');\n                    $questionCopyStatusMessage.prepend('<br>').html(DISPLAY_FEEDBACK_QUESTION_COPY_INVALID);\n                }\n            },\n        });\n    });\n}\n\nfunction bindCopyButton() {\n    $('#button_copy_submit').click((e) => {\n        e.preventDefault();\n\n        let index = 0;\n        let hasRowSelected = false;\n\n        $('#copyTableModal > tbody > tr').each(function () {\n            const $this = $(this);\n            const questionIdInput = $this.children('input:first');\n\n            if (!questionIdInput.length) {\n                return;\n            }\n            if ($this.hasClass('row-selected')) {\n                $(questionIdInput).attr('name', `questionid-${index}`);\n                $this.find('input.courseid').attr('name', `courseid-${index}`);\n                $this.find('input.fsname').attr('name', `fsname-${index}`);\n\n                index += 1;\n                hasRowSelected = true;\n            }\n        });\n\n        if (hasRowSelected) {\n            $('#copyModalForm').submit();\n        } else {\n            setStatusMessage('No questions are selected to be copied', BootstrapContextualColors.DANGER);\n            $('#copyModal').modal('hide');\n        }\n\n        return false;\n    });\n}\n\nlet numRowsSelected = 0;\n\nfunction bindCopyEvents() {\n    $('body').on('click', '#copyTableModal > tbody > tr', function (e) {\n        e.preventDefault();\n\n        if ($(this).hasClass('row-selected')) {\n            $(this).removeClass('row-selected');\n            $(this).children('td:first').html('<input type=\"checkbox\">');\n            numRowsSelected -= 1;\n        } else {\n            $(this).addClass('row-selected');\n            $(this).children('td:first').html('<input type=\"checkbox\" checked>');\n            numRowsSelected += 1;\n        }\n\n        const $button = $('#button_copy_submit');\n\n        $button.prop('disabled', numRowsSelected <= 0);\n\n        return false;\n    });\n}\n\nfunction hideOption($containingSelect, value) {\n    $containingSelect.find(`option[value=\"${value}\"]`).hide();\n}\n\nfunction setRecipientSelectToFirstVisibleOption($recipientSelect) {\n    $recipientSelect.find('option').each(function (e) {\n        const $recipientOption = $(this);\n        if ($recipientOption.css('display') !== 'none') {\n            $recipientSelect.val($recipientOption.val());\n            e.preventDefault();\n        }\n    });\n}\n\nfunction hideInvalidRecipientTypeOptions($giverSelect) {\n    const giverType = $giverSelect.val();\n    const $recipientSelect = $giverSelect.closest('.form_question').find('select[name=\"recipienttype\"]');\n    const recipientType = $recipientSelect.val();\n    const qnType = $giverSelect.closest('.form_question').find('[name=\"questiontype\"]').val();\n    // For question type \"RANK_RECIPIENTS\", hide recipient options \"SELF\" and \"NONE\"\n    if (qnType === 'RANK_RECIPIENTS') {\n        hideOption($recipientSelect, 'SELF');\n        hideOption($recipientSelect, 'NONE');\n    }\n    switch (giverType) {\n    case 'STUDENTS':\n        // all recipientType options enabled\n        // except for 'SELF' and 'NONE' options in 'RANK_RECIPIENTS' questions\n        break;\n    case 'SELF':\n    case 'INSTRUCTORS':\n        hideOption($recipientSelect, 'OWN_TEAM_MEMBERS');\n        hideOption($recipientSelect, 'OWN_TEAM_MEMBERS_INCLUDING_SELF');\n        if (recipientType === 'OWN_TEAM_MEMBERS' || recipientType === 'OWN_TEAM_MEMBERS_INCLUDING_SELF') {\n            setRecipientSelectToFirstVisibleOption($recipientSelect);\n        }\n        break;\n    case 'TEAMS':\n        hideOption($recipientSelect, 'OWN_TEAM');\n        hideOption($recipientSelect, 'OWN_TEAM_MEMBERS');\n        if (recipientType === 'OWN_TEAM' || recipientType === 'OWN_TEAM_MEMBERS') {\n            setRecipientSelectToFirstVisibleOption($recipientSelect);\n        }\n        break;\n    default:\n        throw new Error('Unexpected giverType');\n    }\n}\n\nfunction bindParticipantSelectChangeEvents() {\n    $('body').on('change', 'select[name=\"givertype\"]', function () {\n        const $recipientSelect = $(this).closest('.form_question').find('select[name=\"recipienttype\"]');\n        $recipientSelect.find('option').show();\n        hideInvalidRecipientTypeOptions($(this));\n    });\n}\n\nfunction hideInvalidRecipientTypeOptionsForAllPreviouslyAddedQuestions() {\n    $('.form_question').not('[name=\"form_addquestions\"]').find('select[name=\"givertype\"]').each(function () {\n        hideInvalidRecipientTypeOptions($(this));\n    });\n}\n\nfunction hideInvalidRecipientTypeOptionsForNewlyAddedQuestion() {\n    hideInvalidRecipientTypeOptions($('form[name=\"form_addquestions\"]').find('select[name=\"givertype\"]'));\n}\n\n/**\n * Shows the new question div frame and scrolls to it\n */\nfunction showNewQuestionFrame(type) {\n    $('#questiontype').val(type);\n\n    copyOptions(type);\n    prepareQuestionForm(type);\n    $(`#questionTable-${NEW_QUESTION}`).show();\n    hideInvalidRecipientTypeOptionsForNewlyAddedQuestion();\n    enableNewQuestion();\n\n    $('#addNewQuestionTable').hide();\n    $('#empty_message').hide();\n    scrollToElement($(`#questionTable-${NEW_QUESTION}`)[0], { duration: 1000 });\n\n    getVisibilityMessage($(`#questionTable-${NEW_QUESTION}`));\n}\n\nfunction prepareDescription(form) {\n    const questionNum = getQuestionNum(form);\n    const content = tinymce.get(`questiondescription-${questionNum}`).getContent();\n    form.find('input[name=questiondescription]').val(content);\n    form.find(`input[name=questiondescription-${questionNum}]`).prop('disabled', true);\n}\n\n/**\n * This function is called on edit page load.\n */\nfunction readyFeedbackEditPage() {\n    $(document).on('click', '.enable-edit-fs', () => enableEditFS());\n\n    // Disable all questions\n    disableAllQuestions();\n\n    // Bind submit text links\n    $('a[id|=questionsavechangestext]').click(function () {\n        const form = $(this).parents('form.form_question');\n        prepareDescription(form);\n\n        $(this).parents('form.form_question').submit();\n    });\n\n    // Bind submit actions\n    $('form[id|=form_editquestion]').submit(function (event) {\n        prepareDescription($(event.currentTarget));\n        if ($(this).attr('editStatus') === 'mustDeleteResponses') {\n            event.preventDefault();\n            const okCallback = function () {\n                event.currentTarget.submit();\n            };\n            showModalConfirmation(WARNING_EDIT_DELETE_RESPONSES, CONFIRM_EDIT_DELETE_RESPONSES, okCallback, null,\n                    null, null, BootstrapContextualColors.DANGER);\n        }\n    });\n\n    $('form.form_question').submit(function (event) {\n        // LEGACY IMPLEMENTATION: Submission and deletion logic are coupled and determined by the global state.\n        // However, validating the form does not make sense when deleting.\n        const questionNum = $(event.currentTarget).data('qnnumber');\n        const editType = $(`#${ParamsNames.FEEDBACK_QUESTION_EDITTYPE}-${questionNum}`).val();\n        if (editType === 'delete') {\n            return true;\n        }\n\n        addLoadingIndicator($('#button_submit_add'), 'Saving ');\n        const formStatus = checkFeedbackQuestion(this);\n        if (!formStatus) {\n            removeLoadingIndicator($('#button_submit_add'), 'Save Question');\n        }\n        return formStatus;\n    });\n\n    // Bind destructive changes\n    $('form[id|=form_editquestion]').find(':input').not('.nonDestructive').not('.visibilityCheckbox')\n            .change(function () {\n                const editStatus = $(this).parents('form').attr('editStatus');\n                if (editStatus === 'hasResponses') {\n                    $(this).parents('form').attr('editStatus', 'mustDeleteResponses');\n                }\n            });\n\n    $('#add-new-question-dropdown > li').click(function () {\n        showNewQuestionFrame($(this).data('questiontype'));\n    });\n\n    // Copy Binding\n    bindCopyButton();\n    bindCopyEvents();\n    setupQuestionCopyModal();\n\n    // Additional formatting & bindings.\n    if ($('#form_feedbacksession').data(`${ParamsNames.FEEDBACK_SESSION_ENABLE_EDIT}`) === true) {\n        enableEditFS();\n    } else {\n        disableEditFS();\n    }\n    formatSessionVisibilityGroup();\n    formatResponsesVisibilityGroup();\n    formatNumberBoxes();\n    formatCheckBoxes();\n    formatQuestionNumbers();\n\n    setupFsCopyModal();\n\n    bindAssignWeightsCheckboxes();\n    bindMcqHasAssignedWeightsCheckbox();\n    bindMcqOtherOptionEnabled();\n    bindMsqEvents();\n    bindMoveRubricColButtons();\n    bindRankEvents();\n    bindConstSumOptionsRadioButtons();\n\n    bindAutoFillEmptyRankOptionsChangeEvent();\n\n    // Bind feedback session edit form submission\n    bindFeedbackSessionEditFormSubmission();\n}\n\n/**\n * Adds hover event handler on menu options which\n * toggles a tooltip over the submenu options\n */\nfunction setTooltipTriggerOnFeedbackPathMenuOptions() {\n    $('.dropdown-submenu').hover(function () {\n        $(this).children('.dropdown-menu').tooltip('toggle');\n    });\n}\n\n$(document).ready(() => {\n    prepareInstructorPages();\n\n    prepareDatepickers();\n\n    readyFeedbackEditPage();\n    bindUncommonSettingsEvents();\n    bindParticipantSelectChangeEvents();\n    updateUncommonSettingsInfo();\n    showUncommonPanelsIfNotInDefaultValues();\n    FeedbackPath.attachEvents();\n    hideInvalidRecipientTypeOptionsForAllPreviouslyAddedQuestions();\n    attachVisibilityDropdownEvent();\n    attachVisibilityCheckboxEvent();\n    setTooltipTriggerOnFeedbackPathMenuOptions();\n\n    $('#fsSaveLink').on('click', (e) => {\n        checkEditFeedbackSession(e.currentTarget.form);\n    });\n\n    $(document).on('change', '.participantSelect', (e) => {\n        matchVisibilityOptionToFeedbackPath(e.currentTarget);\n        getVisibilityMessage(e.currentTarget);\n    });\n\n    $(document).on('click', '.btn-duplicate-qn', (e) => {\n        duplicateQuestion($(e.currentTarget).data('qnnumber'));\n    });\n\n    $(document).on('click', '.btn-discard-changes', (e) => {\n        discardChanges($(e.currentTarget).data('qnnumber'));\n    });\n\n    $(document).on('click', '.btn-edit-qn', (e) => {\n        const maxQuestions = parseInt($('#num-questions').val(), 10);\n        enableEdit($(e.currentTarget).data('qnnumber'), maxQuestions);\n    });\n\n    $(document).on('click', '.btn-delete-qn', (e) => {\n        deleteQuestion($(e.currentTarget).data('qnnumber'));\n    });\n\n    $(document).on('submit', '.tally-checkboxes', (e) => {\n        tallyCheckboxes($(e.currentTarget).data('qnnumber'));\n    });\n});\n\nwindow.updateConstSumPointsValue = updateConstSumPointsValue;\nwindow.addConstSumOption = addConstSumOption;\nwindow.removeConstSumOption = removeConstSumOption;\nwindow.toggleConstSumDistributePointsOptions = toggleConstSumDistributePointsOptions;\nwindow.changeConstSumDistributePointsFor = changeConstSumDistributePointsFor;\nwindow.addMcqOption = addMcqOption;\nwindow.removeMcqOption = removeMcqOption;\nwindow.toggleMcqGeneratedOptions = toggleMcqGeneratedOptions;\nwindow.toggleMcqOtherOptionEnabled = toggleMcqOtherOptionEnabled;\nwindow.changeMcqGenerateFor = changeMcqGenerateFor;\nwindow.addMsqOption = addMsqOption;\nwindow.removeMsqOption = removeMsqOption;\nwindow.toggleMsqGeneratedOptions = toggleMsqGeneratedOptions;\nwindow.toggleMsqOtherOptionEnabled = toggleMsqOtherOptionEnabled;\nwindow.changeMsqGenerateFor = changeMsqGenerateFor;\nwindow.updateNumScalePossibleValues = updateNumScalePossibleValues;\nwindow.addRankOption = addRankOption;\nwindow.removeRankOption = removeRankOption;\nwindow.addRubricRow = addRubricRow;\nwindow.removeRubricRow = removeRubricRow;\nwindow.highlightRubricRow = highlightRubricRow;\nwindow.addRubricCol = addRubricCol;\nwindow.removeRubricCol = removeRubricCol;\nwindow.highlightRubricCol = highlightRubricCol;\n\nwindow.scrollToElement = scrollToElement;\nwindow.isWithinView = isWithinView;\n\nexport {\n    extractQuestionNumFromEditFormId,\n};\n"],"sourceRoot":""}