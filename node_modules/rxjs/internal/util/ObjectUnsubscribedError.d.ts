<<<<<<< HEAD
export interface ObjectUnsubscribedError extends Error {
}
export interface ObjectUnsubscribedErrorCtor {
    new (): ObjectUnsubscribedError;
}
/**
 * An error thrown when an action is invalid because the object has been
 * unsubscribed.
 *
 * @see {@link Subject}
 * @see {@link BehaviorSubject}
 *
 * @class ObjectUnsubscribedError
 */
export declare const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor;
||||||| merged common ancestors
=======
<<<<<<< HEAD
/**
 * An error thrown when an action is invalid because the object has been
 * unsubscribed.
 *
 * @see {@link Subject}
 * @see {@link BehaviorSubject}
 *
 * @class ObjectUnsubscribedError
 */
export declare class ObjectUnsubscribedError extends Error {
    readonly name: string;
    constructor();
}
||||||| merged common ancestors
=======
export interface ObjectUnsubscribedError extends Error {
}
export interface ObjectUnsubscribedErrorCtor {
    new (): ObjectUnsubscribedError;
}
/**
 * An error thrown when an action is invalid because the object has been
 * unsubscribed.
 *
 * @see {@link Subject}
 * @see {@link BehaviorSubject}
 *
 * @class ObjectUnsubscribedError
 */
export declare const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor;
>>>>>>> 1b023684bf57de724b98ec9602a7d5b5f83ebc0f
>>>>>>> master
