<<<<<<< HEAD
export interface ArgumentOutOfRangeError extends Error {
}
export interface ArgumentOutOfRangeErrorCtor {
    new (): ArgumentOutOfRangeError;
}
/**
 * An error thrown when an element was queried at a certain index of an
 * Observable, but no such index or position exists in that sequence.
 *
 * @see {@link elementAt}
 * @see {@link take}
 * @see {@link takeLast}
 *
 * @class ArgumentOutOfRangeError
 */
export declare const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor;
||||||| merged common ancestors
=======
<<<<<<< HEAD
/**
 * An error thrown when an element was queried at a certain index of an
 * Observable, but no such index or position exists in that sequence.
 *
 * @see {@link elementAt}
 * @see {@link take}
 * @see {@link takeLast}
 *
 * @class ArgumentOutOfRangeError
 */
export declare class ArgumentOutOfRangeError extends Error {
    readonly name: string;
    constructor();
}
||||||| merged common ancestors
=======
export interface ArgumentOutOfRangeError extends Error {
}
export interface ArgumentOutOfRangeErrorCtor {
    new (): ArgumentOutOfRangeError;
}
/**
 * An error thrown when an element was queried at a certain index of an
 * Observable, but no such index or position exists in that sequence.
 *
 * @see {@link elementAt}
 * @see {@link take}
 * @see {@link takeLast}
 *
 * @class ArgumentOutOfRangeError
 */
export declare const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor;
>>>>>>> 1b023684bf57de724b98ec9602a7d5b5f83ebc0f
>>>>>>> master
