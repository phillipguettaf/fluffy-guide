<<<<<<< HEAD
/** Symbol.observable addition */
declare global {
    interface SymbolConstructor {
        readonly observable: symbol;
    }
}
/** Symbol.observable or a string "@@observable". Used for interop */
export declare const observable: string | symbol;
||||||| merged common ancestors
=======
<<<<<<< HEAD
/** Symbol.observable addition */
declare global  {
    interface SymbolConstructor {
        readonly observable: symbol;
    }
}
/** Symbol.observable or a string "@@observable". Used for interop */
export declare const observable: string | symbol;
||||||| merged common ancestors
=======
/** Symbol.observable addition */
declare global {
    interface SymbolConstructor {
        readonly observable: symbol;
    }
}
/** Symbol.observable or a string "@@observable". Used for interop */
export declare const observable: string | symbol;
>>>>>>> 1b023684bf57de724b98ec9602a7d5b5f83ebc0f
>>>>>>> master
