{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main/webapp/dev/js/common/const.js","webpack:///./src/main/webapp/dev/js/common/helper.js","webpack:///./src/main/webapp/dev/js/common/ui.js","webpack:///./src/main/webapp/dev/js/common/richTextEditor.js","webpack:///./src/main/webapp/dev/js/common/student.js","webpack:///./src/main/webapp/dev/js/common/sortBy.js","webpack:///./src/main/webapp/dev/js/common/sanitizer.js","webpack:///./src/main/webapp/dev/js/common/crypto.js","webpack:///./src/main/webapp/dev/js/common/scrollTo.js","webpack:///./src/main/webapp/dev/js/common/onStart.js","webpack:///./src/main/webapp/dev/js/common/statusMessage.js","webpack:///./src/main/webapp/dev/js/common/bootboxWrapper.js","webpack:///./src/main/webapp/dev/js/main/feedbackSubmissionsEdit.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","BootstrapContextualColors","SUCCESS","INFO","WARNING","DANGER","PRIMARY","isValidType","type","DEFAULT","Const","ModalDialog","UNREGISTERED_STUDENT","header","text","StatusMessages","INSTRUCTOR_DETAILS_LENGTH_INVALID","ParamsNames","SESSION_TOKEN","COPIED_FEEDBACK_SESSION_NAME","COURSE_ID","COURSE_NAME","COURSE_TIME_ZONE","FEEDBACK_SESSION_NAME","FEEDBACK_SESSION_STARTDATE","FEEDBACK_SESSION_STARTTIME","FEEDBACK_SESSION_VISIBLEDATE","FEEDBACK_SESSION_VISIBLETIME","FEEDBACK_SESSION_PUBLISHDATE","FEEDBACK_SESSION_PUBLISHTIME","FEEDBACK_SESSION_TIMEZONE","FEEDBACK_SESSION_SESSIONVISIBLEBUTTON","FEEDBACK_SESSION_RESULTSVISIBLEBUTTON","FEEDBACK_SESSION_ENABLE_EDIT","FEEDBACK_QUESTION_TEXT","FEEDBACK_QUESTION_DESCRIPTION","FEEDBACK_QUESTION_TYPE","FEEDBACK_QUESTION_NUMBEROFCHOICECREATED","FEEDBACK_QUESTION_MCQCHOICE","FEEDBACK_QUESTION_MCQ_WEIGHT","FEEDBACK_QUESTION_MSQCHOICE","FEEDBACK_QUESTION_CONSTSUMOPTION","FEEDBACK_QUESTION_CONSTSUMTORECIPIENTS","FEEDBACK_QUESTION_CONSTSUMPOINTS","FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHOPTION","FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHRECIPIENT","FEEDBACK_QUESTION_CONSTSUMALLUNEVENDISTRIBUTION","FEEDBACK_QUESTION_CONSTSUMSOMEUNEVENDISTRIBUTION","FEEDBACK_QUESTION_CONSTSUMNOUNEVENDISTRIBUTION","FEEDBACK_QUESTION_RECIPIENTTYPE","FEEDBACK_QUESTION_NUMBEROFENTITIESTYPE","FEEDBACK_QUESTION_EDITTEXT","FEEDBACK_QUESTION_DISCARDCHANGES","FEEDBACK_QUESTION_EDITTYPE","FEEDBACK_QUESTION_SAVECHANGESTEXT","FEEDBACK_QUESTION_SHOWRESPONSESTO","FEEDBACK_QUESTION_SHOWGIVERTO","FEEDBACK_QUESTION_SHOWRECIPIENTTO","FEEDBACK_QUESTION_NUMSCALE_MIN","FEEDBACK_QUESTION_NUMSCALE_MAX","FEEDBACK_QUESTION_NUMSCALE_STEP","FEEDBACK_QUESTION_RANKOPTION","FEEDBACK_QUESTION_RANKTORECIPIENTS","FEEDBACK_QUESTION_NUMBER","FEEDBACK_QUESTION_NUMBER_STATIC","FEEDBACK_QUESTION_RANK_IS_MIN_OPTIONS_TO_BE_RANKED_ENABLED","FEEDBACK_QUESTION_RANK_IS_MAX_OPTIONS_TO_BE_RANKED_ENABLED","FEEDBACK_QUESTION_RANK_MIN_OPTIONS_TO_BE_RANKED","FEEDBACK_QUESTION_RANK_MAX_OPTIONS_TO_BE_RANKED","FEEDBACK_QUESTION_RANK_IS_MIN_RECIPIENTS_TO_BE_RANKED_ENABLED","FEEDBACK_QUESTION_RANK_IS_MAX_RECIPIENTS_TO_BE_RANKED_ENABLED","FEEDBACK_QUESTION_RANK_MIN_RECIPIENTS_TO_BE_RANKED","FEEDBACK_QUESTION_RANK_MAX_RECIPIENTS_TO_BE_RANKED","isDate","date","Number","isNaN","Date","parse","isNumber","num","isWithinView","element","rect","$","getBoundingClientRect","$viewport","window","top","left","right","width","bottom","height","extractIdSuffixFromId","_ref","arguments","length","undefined","idPrefix","id","RegExp","exec","setChevronToUp","chevronContainer","removeClass","addClass","setChevronToDown","showSingleCollapse","e","heading","parent","children","glyphIcon","find","collapse","show","hideSingleCollapse","hide","addLoadingIndicator","button","loadingText","html","prop","append","disallowNonNumericEntries","decimalPointAllowed","negativeAllowed","on","event","which","indexOf","ctrlKey","shiftKey","preventDefault","stopPropagation","highlightSearchResult","searchKeyId","sectionToHighlight","searchKey","val","trim","searchKeyList","charAt","push","replace","each","split","this","filter","highlight","removeLoadingIndicator","displayText","empty","toggleAdditionalQuestionInfo","identifier","$questionButton","attr","toggle","toggleChevron","clickedElement","$clickedElement","isChevronDown","$chevronContainer","clearQueue","toggleSingleCollapse","target","is","currentTarget","richTextEditorBuilder","getDefaultConfiguration","theme","fontsize_formats","font_formats","relative_urls","convert_urls","remove_linebreaks","plugins","toolbar1","toolbar2","init_instance_callback","initEditor","selector","opts","tinymce","init","extend","setPlaceholderText","editor","getContent","DOM","bodyElement","initEditorCallback","destroyEditor","currentEditor","destroy","_const","_bootboxWrapper","bindLinksInUnregisteredPage","document","$clickedLink","_Const$ModalDialog$UN","showModalConfirmation","location","_helper","isDefined","varToCheck","getPointValue","ditchZero","s0","parseFloat","Comparators","x","y","x0","y0","a","b","a0","b0","sortNum","sortBase","columnType","sortDate","Extractors","$tableCell","data","textExtractor","TableButtonHelpers","$button","parents","idx","index","$table","clearAllSortStates","getEnclosingTable","toggleSort","comparatorStringOrNull","extractorStringOrNull","shouldSortAscending","hasClass","colIdx","comparatorOrNull","extractorOrNull","store","$rowList","cells","extractor","getDefaultExtractor","textToCompare","comparator","getDefaultComparator","sort","compareResult","toUpperCase","$tbody","size","j","appendChild","sortTable","getColumnPositionOfButton","setButtonToSortedAscending","setButtonToSortedDescending","replaceAll","string","escapeRegExp","encodeHtmlString","stringToEncode","sanitizeForJs","rawString","getCookie","cookieNameToFind","cookies","cookie","map","cookieName","cookieValue","makeCsrfTokenParam","updateCsrfTokenInInputFields","updatedToken","scrollToPosition","scrollPos","duration","scrollTop","animate","scrollToElement","defaultOptions","options","offset","isViewType","navbar","navbarHeight","offsetHeight","footer","footerHeight","isElementTallerThanWindow","innerHeight","isFromAbove","scrollY","offsetTop","isAlignedToTop","scrollToTop","_crypto","_sortBy","String","includes","search","startParam","start","$tooltips","tooltip","container","DocumentTouch","submit","_scrollTo","DIV_STATUS_MESSAGE","buildNewStatusMessageDiv","message","bootstrapContextualColor","$newStatusMessageDivContent","contextualColor","populateStatusMessageDiv","$statusMessageDivToUser","$statusMessageDivContent","appendNewStatusMessage","$statusMessagesDivToUser","appendStatusMessage","messages","$statusMessagesToUser","clearStatusMessages","setStatusMessage","setStatusMessageToForm","form","$copyOfStatusMessagesToUser","clone","remove","prepend","DEFAULT_OK_TEXT","DEFAULT_CANCEL_TEXT","DEFAULT_YES_TEXT","DEFAULT_NO_TEXT","applyStyleToModal","modal","showModalAlert","titleText","messageText","okButtonText","bootbox","dialog","title","buttons","okay","label","className","okCallback","cancelCallback","cancelButtonText","onHiddenCallback","onEscape","cancel","callback","ok","showModalConfirmationWithCancel","yesButtonCallback","noButtonCallback","cancelButtonCallback","yesButtonText","noButtonText","yes","no","_richTextEditor","_sanitizer","_statusMessage","_student","_ui","FEEDBACK_RESPONSE_RECIPIENT","FEEDBACK_RESPONSE_TEXT","FEEDBACK_MISSING_RECIPIENT","INFO_STATUS_MESSAGE","WARNING_STATUS_MESSAGE","SUCCESS_STATUS_MESSAGE","END_TIME","MS_IN_FIFTEEN_MINUTES","SESSION_NOT_OPEN","SESSION_CLOSING_HEADER","SESSION_CLOSING_MESSAGE","RESPONSES_SUCCESSFULLY_SUBMITTED","isPreview","updateOtherOptionAttributes","otherOption","indexSuffix","bindModerationHintButton","$moderationHintButton","$moderationHint","click","getQuestionTypeNumbers","qnType","questions","questionNums","substring","updateRubricCellSelectedColor","radioInput","cell","tableRow","prepareDesktopRubricQuestions","$rubricRadioInputs","$parentCell","hover","$radioInput","trigger","isSync","$rowRadioInputs","closest","changedInput","$changedInput","mobileInputId","mobileInputName","syncRubricsMobileUi","prepareMobileRubricQuestions","$self","$parentPanel","desktopInputId","desktopInputName","syncRubricsDesktopUi","mousedown","unbind","up","setTimeout","one","updateConstSumQnInstructions","qnNum","numOptions","points","parseInt","numRecipients","distributeToRecipients","pointsPerOption","forceUnevenDistribution","constSumDistributePointsOptionSelected","forceAllUnevenDistribution","forceSomeUnevenDistribution","instructionElement","instruction","infoIcon","updateConstSumQnMessages","sum","remainingPoints","allUnique","allSame","allInputsEmpty","answerSet","repeatedPoints","fillWithZeroIfEmpty","inputFieldElement","checkAndDisplayMessage","messageElement","approvedIcon","errorIcon","allChecksPassed","recipientIndex","k","updateSumBasedOn","ptsAllocatedParam","pointsAllocated","keys","$constSumMessageElement","updateConstSumMessages","constSumQuestionNums","getMaxSelectableMsqChoices","qNum","$input","MAX_SAFE_INTEGER","getMinSelectableMsqChoices","isAnswerBlank","question","response","$answer","isMinOptionsToBeRankedEnabled","isMaxOptionsToBeRankedEnabled","getMinOptionsToBeRanked","getMaxOptionsToBeRanked","updateRankMessageQn","isDistributingToRecipients","areDuplicateRanksAllowed","areAllAnswersUnique","allocatedRanks","isAllOptionsRanked","isMinOptionsToBeRankedViolated","isMaxOptionsToBeRankedViolated","isMinOrMaxOptionsToBeRankedEnabled","resetState","updateRankMessagesInUpdatingRankMessageQn","$messageElement","updateAllocatedRanks","rankAllocated","updateDropdownOptions","questionNumber","rankedOptions","checkMinMaxRestrictions","$rankMessageElement","i1","$rankMsgElement","j1","updateRankMessages","rankQuestionNums","concat","hasUnansweredQuestionMessage","showModalWarningIfSessionClosed","showModalWarningIfSessionClosingSoon","endTimeData","remainingTime","isSessionClosingSoon","showModalSuccessIfResponsesSubmitted","unansweredMessage","updateTextQuestionWordsCount","textAreaId","wordsCountId","recommendedLength","$wordsCountElement","wordsCount","item","match","css","ready","textFields","textField","isSessionOpenData","isSessionOpen","inline","readonly","setup","ed","rubricQuestionNums","numResponses","responsetext","$responses","formatRubricQuestions","validationStatus","statusMessage","errorCount","validateConstSumQuestions","validateRankQuestions","blankRecipients","isAllAnswersToMissingRecipientEmpty","recipient","validateAllAnswersHaveRecipient","msqQuestionNums","maxSelectableChoices","minSelectableChoices","numOfSelectedChoices","validateMsqQuestions","mcqQuestionNums","updateMcqOtherOptionField","updateMsqOtherOptionField","$submissionButton","selectedOption","not","change","lastSelectedOption","curSelectedOption","firstUnhidden","style","display","reverse","after","idOfOtherOptionText","substr","idOfOtherOptionFlag","keyup","idOfOtherOptionRadioButton","off","contribQuestionNums","$dropdown","selectedIndex","prepareContribQuestions","noneOfTheAboveOption","$options","prepareMSQQuestions","_loop2","responseIndx","prepareConstSumQuestions","radioButtons","radioStates","_loop","radio","stopImmediatePropagation","prepareMCQQuestions","isRankingRecipients","prepareRankQuestions","validateNumScaleAnswer","qnIdx","responseIdx","$answerBox","min","max","answer"],"mappings":"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","file":"feedbackSubmissionsEdit.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 97);\n","/**\n * Contains constants to be used across the application.\n */\n\n// Frontend only constants\nconst Const = {\n    ModalDialog: {\n        UNREGISTERED_STUDENT: {\n            header: 'Register for TEAMMATES',\n            text: 'You have to register using a google account in order to access this page. '\n                  + 'Would you like to proceed and register?',\n        },\n    },\n    StatusMessages: {\n        INSTRUCTOR_DETAILS_LENGTH_INVALID: 'Instructor Details must have 3 columns',\n    },\n};\n\n// Shared constants between frontend and backend\n\n/**\n * Subset of Bootstrap contextual colors for use in status messages and components of modals.\n * @enum {BootstrapContextualColors}\n */\nconst BootstrapContextualColors = {\n    // Mirrored colors from StatusMessageColor\n    SUCCESS: 'success',\n    INFO: 'info',\n    WARNING: 'warning',\n    DANGER: 'danger',\n    // Additional contextual colors that can be used in the components of modals\n    PRIMARY: 'primary',\n    isValidType(type) {\n        return type === BootstrapContextualColors.SUCCESS || type === BootstrapContextualColors.INFO\n                || type === BootstrapContextualColors.PRIMARY || type === BootstrapContextualColors.WARNING\n                || type === BootstrapContextualColors.DANGER;\n    },\n};\nBootstrapContextualColors.DEFAULT = BootstrapContextualColors.INFO;\n\n// Mirrored subset of Const#ParamsNames\nconst ParamsNames = {\n    SESSION_TOKEN: 'token',\n    COPIED_FEEDBACK_SESSION_NAME: 'copiedfsname',\n\n    COURSE_ID: 'courseid',\n    COURSE_NAME: 'coursename',\n    COURSE_TIME_ZONE: 'coursetimezone',\n\n    FEEDBACK_SESSION_NAME: 'fsname',\n    FEEDBACK_SESSION_STARTDATE: 'startdate',\n    FEEDBACK_SESSION_STARTTIME: 'starttime',\n    FEEDBACK_SESSION_VISIBLEDATE: 'visibledate',\n    FEEDBACK_SESSION_VISIBLETIME: 'visibletime',\n    FEEDBACK_SESSION_PUBLISHDATE: 'publishdate',\n    FEEDBACK_SESSION_PUBLISHTIME: 'publishtime',\n    FEEDBACK_SESSION_TIMEZONE: 'timezone',\n    FEEDBACK_SESSION_SESSIONVISIBLEBUTTON: 'sessionVisibleFromButton',\n    FEEDBACK_SESSION_RESULTSVISIBLEBUTTON: 'resultsVisibleFromButton',\n    FEEDBACK_SESSION_ENABLE_EDIT: 'editsessiondetails',\n\n    FEEDBACK_QUESTION_TEXT: 'questiontext',\n    FEEDBACK_QUESTION_DESCRIPTION: 'questiondescription',\n    FEEDBACK_QUESTION_TYPE: 'questiontype',\n    FEEDBACK_QUESTION_NUMBEROFCHOICECREATED: 'noofchoicecreated',\n    FEEDBACK_QUESTION_MCQCHOICE: 'mcqOption',\n    FEEDBACK_QUESTION_MCQ_WEIGHT: 'mcqWeight',\n    FEEDBACK_QUESTION_MSQCHOICE: 'msqOption',\n    FEEDBACK_QUESTION_CONSTSUMOPTION: 'constSumOption',\n    FEEDBACK_QUESTION_CONSTSUMTORECIPIENTS: 'constSumToRecipients',\n    FEEDBACK_QUESTION_CONSTSUMPOINTS: 'constSumPoints',\n    FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHOPTION: 'constSumPointsForEachOption',\n    FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHRECIPIENT: 'constSumPointsForEachRecipient',\n    FEEDBACK_QUESTION_CONSTSUMALLUNEVENDISTRIBUTION: 'All options',\n    FEEDBACK_QUESTION_CONSTSUMSOMEUNEVENDISTRIBUTION: 'At least some options',\n    FEEDBACK_QUESTION_CONSTSUMNOUNEVENDISTRIBUTION: 'None',\n    FEEDBACK_QUESTION_RECIPIENTTYPE: 'recipienttype',\n    FEEDBACK_QUESTION_NUMBEROFENTITIESTYPE: 'numofrecipientstype',\n    FEEDBACK_QUESTION_EDITTEXT: 'questionedittext',\n    FEEDBACK_QUESTION_DISCARDCHANGES: 'questiondiscardchanges',\n    FEEDBACK_QUESTION_EDITTYPE: 'questionedittype',\n    FEEDBACK_QUESTION_SAVECHANGESTEXT: 'questionsavechangestext',\n    FEEDBACK_QUESTION_SHOWRESPONSESTO: 'showresponsesto',\n    FEEDBACK_QUESTION_SHOWGIVERTO: 'showgiverto',\n    FEEDBACK_QUESTION_SHOWRECIPIENTTO: 'showrecipientto',\n    FEEDBACK_QUESTION_NUMSCALE_MIN: 'numscalemin',\n    FEEDBACK_QUESTION_NUMSCALE_MAX: 'numscalemax',\n    FEEDBACK_QUESTION_NUMSCALE_STEP: 'numscalestep',\n    FEEDBACK_QUESTION_RANKOPTION: 'rankOption',\n    FEEDBACK_QUESTION_RANKTORECIPIENTS: 'rankToRecipients',\n    FEEDBACK_QUESTION_NUMBER: 'questionnum',\n    FEEDBACK_QUESTION_NUMBER_STATIC: 'questionnum-static',\n    FEEDBACK_QUESTION_RANK_IS_MIN_OPTIONS_TO_BE_RANKED_ENABLED: 'minOptionsToBeRankedEnabled',\n    FEEDBACK_QUESTION_RANK_IS_MAX_OPTIONS_TO_BE_RANKED_ENABLED: 'maxOptionsToBeRankedEnabled',\n    FEEDBACK_QUESTION_RANK_MIN_OPTIONS_TO_BE_RANKED: 'minOptionsToBeRanked',\n    FEEDBACK_QUESTION_RANK_MAX_OPTIONS_TO_BE_RANKED: 'maxOptionsToBeRanked',\n    FEEDBACK_QUESTION_RANK_IS_MIN_RECIPIENTS_TO_BE_RANKED_ENABLED: 'minRecipientsToBeRankedEnabled',\n    FEEDBACK_QUESTION_RANK_IS_MAX_RECIPIENTS_TO_BE_RANKED_ENABLED: 'maxRecipientsToBeRankedEnabled',\n    FEEDBACK_QUESTION_RANK_MIN_RECIPIENTS_TO_BE_RANKED: 'minRecipientsToBeRanked',\n    FEEDBACK_QUESTION_RANK_MAX_RECIPIENTS_TO_BE_RANKED: 'maxRecipientsToBeRanked',\n};\n\nexport {\n    Const,\n    ParamsNames,\n    BootstrapContextualColors,\n};\n","/**\n * Tests whether the passed object is an actual date\n * with an accepted format\n *\n * Allowed formats : http://dygraphs.com/date-formats.html\n *\n * TEAMMATES currently follows the RFC2822 / IETF date syntax\n * e.g. 02 Apr 2012, 23:59\n *\n * @param date\n * @returns boolean\n */\nfunction isDate(date) {\n    return !Number.isNaN(Date.parse(date));\n}\n\n/**\n* Function to test if param is a numerical value\n* @param num\n* @returns boolean\n*/\nfunction isNumber(num) {\n    return (typeof num === 'string' || typeof num === 'number') && !Number.isNaN(num - 0) && num !== '';\n}\n\n/**\n * Checks if element is within browser's viewport.\n * @return true if it is within the viewport, false otherwise\n * @see http://stackoverflow.com/q/123999\n */\nfunction isWithinView(element) {\n    const baseElement = $(element)[0]; // unwrap jquery element\n    const rect = baseElement.getBoundingClientRect();\n\n    const $viewport = $(window);\n\n    // makes the viewport size slightly larger to account for rounding errors\n    const tolerance = 0.25;\n    return (\n        rect.top >= 0 - tolerance // below the top of viewport\n        && rect.left >= 0 - tolerance // within the left of viewport\n        && rect.right <= $viewport.width() + tolerance // within the right of viewport\n        && rect.bottom <= $viewport.height() + tolerance // above the bottom of viewport\n    );\n}\n\n/**\n * Extracts the suffix that follows the prefix from the id. For example, commentDelete-1-1-0-1 => 1-1-0-1.\n * @param {Object} options required options\n * @param {string} options.idPrefix the prefix of the id\n * @param {string} options.id the id to extract from\n * @return {string} the suffix that uniquely identifies an element among elements with the same prefix\n */\nfunction extractIdSuffixFromId({ idPrefix, id } = {}) {\n    return new RegExp(`${idPrefix}-(.*)`).exec(id)[1];\n}\n\nexport {\n    isDate,\n    isNumber,\n    isWithinView,\n    extractIdSuffixFromId,\n};\n","/**\n * Sets the chevron to point upwards.\n */\nfunction setChevronToUp(chevronContainer) {\n    chevronContainer.removeClass('glyphicon-chevron-down');\n    chevronContainer.addClass('glyphicon-chevron-up');\n}\n\n/**\n * Sets the chevron to point downwards.\n */\nfunction setChevronToDown(chevronContainer) {\n    chevronContainer.removeClass('glyphicon-chevron-up');\n    chevronContainer.addClass('glyphicon-chevron-down');\n}\n\n/**\n * Sets the chevron of a panel from up to down or from down to up depending on its current state.\n * clickedElement must be at least the parent of the chevron.\n */\nfunction toggleChevron(clickedElement) {\n    const $clickedElement = $(clickedElement);\n    const isChevronDown = $clickedElement.find('.glyphicon-chevron-down').length > 0;\n    const $chevronContainer = $clickedElement.find('.glyphicon-chevron-up, .glyphicon-chevron-down');\n\n    // clearQueue to clear the animation queue to prevent animation build up\n    $chevronContainer.clearQueue();\n\n    if (isChevronDown) {\n        setChevronToUp($chevronContainer);\n    } else {\n        setChevronToDown($chevronContainer);\n    }\n}\n\n/**\n * Shows panel's content and changes chevron to point up.\n */\nfunction showSingleCollapse(e) {\n    const heading = $(e).parent().children('.panel-heading');\n    const glyphIcon = $(heading[0]).find('.glyphicon');\n    setChevronToUp($(glyphIcon[0]));\n    $(e).collapse('show');\n    $(heading).find('a.btn').show();\n}\n\n/**\n * Hides panel's content and changes chevron to point down.\n */\nfunction hideSingleCollapse(e) {\n    const heading = $(e).parent().children('.panel-heading');\n    const glyphIcon = $(heading[0]).find('.glyphicon');\n    setChevronToDown($(glyphIcon[0]));\n    $(e).collapse('hide');\n    $(heading).find('a.btn').hide();\n}\n\n/**\n * Changes the state of the panel (collapsed/expanded).\n */\nfunction toggleSingleCollapse(e) {\n    if ($(e.target).is('a') || $(e.target).is('input')) {\n        return;\n    }\n    const glyphIcon = $(this).find('.glyphicon');\n    const className = $(glyphIcon[0]).attr('class');\n    if (className.indexOf('glyphicon-chevron-up') === -1) {\n        showSingleCollapse($(e.currentTarget).attr('data-target'));\n    } else {\n        hideSingleCollapse($(e.currentTarget).attr('data-target'));\n    }\n}\n\nfunction addLoadingIndicator(button, loadingText) {\n    button.html(loadingText);\n    button.prop('disabled', true);\n    button.append('<img src=\"/images/ajax-loader.gif\">');\n}\n\nfunction removeLoadingIndicator(button, displayText) {\n    button.empty();\n    button.html(displayText);\n    button.prop('disabled', false);\n}\n\n/**\n * Highlights all words of searchKey (case insensitive), in a particular section\n * Format of the string  higlight plugin uses - ( ['string1','string2',...] )\n * @param searchKeyId - Id of searchKey input field\n * @param sectionToHighlight - sections to higlight separated by ',' (comma)\n *                             Example- '.panel-body, #panel-data, .sub-container'\n */\nfunction highlightSearchResult(searchKeyId, sectionToHighlight) {\n    const searchKey = $(searchKeyId).val().trim();\n    // split search key string on symbols and spaces and add to searchKeyList\n    let searchKeyList = [];\n    if (searchKey.charAt(0) === '\"' && searchKey.charAt(searchKey.length - 1) === '\"') {\n        searchKeyList.push(searchKey.replace(/\"/g, '').trim());\n    } else {\n        $.each(searchKey.split(/[ \"'.-]/), function () {\n            searchKeyList.push($.trim(this));\n        });\n    }\n    // remove empty elements from searchKeyList\n    searchKeyList = searchKeyList.filter(n => n !== '');\n    $(sectionToHighlight).highlight(searchKeyList);\n}\n\n// Toggle the visibility of additional question information for the specified question.\nfunction toggleAdditionalQuestionInfo(identifier) {\n    const $questionButton = $(`#questionAdditionalInfoButton-${identifier}`);\n\n    if ($questionButton.text() === $questionButton.attr('data-more')) {\n        $questionButton.text($questionButton.attr('data-less'));\n    } else {\n        $questionButton.text($questionButton.attr('data-more'));\n    }\n\n    $(`#questionAdditionalInfo-${identifier}`).toggle();\n}\n\n/**\n * Disallow non-numeric entries\n * [Source: http://stackoverflow.com/questions/995183/how-to-allow-only-numeric-0-9-in-html-inputbox-using-jquery]\n */\nfunction disallowNonNumericEntries(element, decimalPointAllowed, negativeAllowed) {\n    element.on('keydown', (event) => {\n        const key = event.which;\n        // Allow: backspace, delete, tab, escape, enter\n        if ([46, 8, 9, 27, 13].indexOf(key) !== -1\n                // Allow: Ctrl+A\n                || (key === 65 && event.ctrlKey)\n                // Allow: home, end, left, right\n                || (key >= 35 && key <= 39)\n                // Allow dot if decimal point is allowed\n                || (decimalPointAllowed && key === 190)\n                // Allow hyphen if negative is allowed\n                // Code differs by browser (FF/Opera:109, IE/Chrome:189)\n                // see http://www.javascripter.net/faq/keycodes.htm\n                || (negativeAllowed && (key === 189 || key === 109))) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is a number and stop the keypress\n        if (event.shiftKey || ((key < 48 || key > 57) && (key < 96 || key > 105))) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    });\n}\n\nexport {\n    addLoadingIndicator,\n    disallowNonNumericEntries,\n    hideSingleCollapse,\n    highlightSearchResult,\n    removeLoadingIndicator,\n    showSingleCollapse,\n    toggleAdditionalQuestionInfo,\n    toggleChevron,\n    toggleSingleCollapse,\n};\n","/* global tinymce:false */\n\n/* eslint-disable camelcase */ // The property names are determined by external library (tinymce)\nconst richTextEditorBuilder = {\n    getDefaultConfiguration() {\n        return {\n            theme: 'modern',\n            fontsize_formats: '8pt 9pt 10pt 11pt 12pt 14pt 16pt 18pt 20pt 24pt 26pt 28pt 36pt 48pt 72pt',\n            font_formats: 'Andale Mono=andale mono,times;'\n                          + 'Arial=arial,helvetica,sans-serif;'\n                          + 'Arial Black=arial black,avant garde;'\n                          + 'Book Antiqua=book antiqua,palatino;'\n                          + 'Comic Sans MS=comic sans ms,sans-serif;'\n                          + 'Courier New=courier new,courier;'\n                          + 'Georgia=georgia,palatino;'\n                          + 'Helvetica=helvetica;'\n                          + 'Impact=impact,chicago;'\n                          + 'Symbol=symbol;'\n                          + 'Tahoma=tahoma,arial,helvetica,sans-serif;'\n                          + 'Terminal=terminal,monaco;'\n                          + 'Times New Roman=times new roman,times;'\n                          + 'Trebuchet MS=trebuchet ms,geneva;'\n                          + 'Verdana=verdana,geneva;'\n                          + 'Webdings=webdings;'\n                          + 'Wingdings=wingdings,zapf dingbats',\n\n            relative_urls: false,\n            convert_urls: false,\n            remove_linebreaks: false,\n            plugins: [\n                'advlist autolink lists link image charmap print preview hr anchor pagebreak',\n                'searchreplace wordcount visualblocks visualchars code fullscreen',\n                'insertdatetime nonbreaking save table contextmenu directionality',\n                'emoticons template paste textcolor colorpicker textpattern',\n            ],\n\n            toolbar1: 'insertfile undo redo | styleselect | bold italic underline | '\n                    + 'alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',\n            toolbar2: 'print preview | forecolor backcolor | fontsizeselect fontselect | emoticons | fullscreen',\n\n            init_instance_callback: 'initEditorCallback',\n\n        };\n    },\n\n    initEditor(selector, opts) {\n        tinymce.init($.extend(this.getDefaultConfiguration(), {\n            selector,\n        }, opts));\n    },\n\n};\n/* eslint-enable camelcase */\n\nfunction setPlaceholderText(editor) {\n    if (editor.getContent() === '') {\n        tinymce.DOM.addClass(editor.bodyElement, 'empty');\n    } else {\n        tinymce.DOM.removeClass(editor.bodyElement, 'empty');\n    }\n}\n\nfunction initEditorCallback(editor) {\n    tinymce.DOM.addClass(editor.bodyElement, 'content-editor');\n    setPlaceholderText(editor);\n\n    editor.on('selectionchange', () => {\n        setPlaceholderText(editor);\n    });\n}\n\nwindow.initEditorCallback = initEditorCallback;\n\n/**\n * Destroys an instance of TinyMCE rich-text editor.\n */\nfunction destroyEditor(id) {\n    if (typeof tinymce === 'undefined') {\n        return;\n    }\n    const currentEditor = tinymce.get(id);\n    if (currentEditor) {\n        currentEditor.destroy();\n    }\n}\n\nexport {\n    destroyEditor,\n    richTextEditorBuilder,\n};\n","import {\n    Const,\n    BootstrapContextualColors,\n} from './const';\n\nimport {\n    showModalConfirmation,\n} from './bootboxWrapper';\n\n/**\n * Contains functions common to the student pages.\n */\nfunction bindLinksInUnregisteredPage(selector) {\n    $(document).on('click', selector, (e) => {\n        e.preventDefault();\n        const $clickedLink = $(e.currentTarget);\n\n        const { header, text } = Const.ModalDialog.UNREGISTERED_STUDENT;\n        function okCallback() {\n            window.location = $clickedLink.attr('href');\n        }\n\n        showModalConfirmation(header, text, okCallback, null, null, null, BootstrapContextualColors.INFO);\n    });\n}\n\nexport {\n    bindLinksInUnregisteredPage,\n};\n","import {\n    isDate,\n    isNumber,\n} from './helper';\n\n/**\n * Returns false if the parameter is either one of null or undefined.\n * Returns true otherwise.\n *\n * @param varToCheck\n */\nfunction isDefined(varToCheck) {\n    return varToCheck !== null && varToCheck !== undefined;\n}\n\n/**\n * To get point value from a formatted string\n *\n * @param s\n *     A table cell (td tag) that contains the formatted string\n * @param ditchZero\n *     Whether 0% should be treated as lower than -90 or not\n * @returns\n */\nfunction getPointValue(s, ditchZero) {\n    let s0 = s;\n    const baseValue = 100;\n\n    if (s0.indexOf('/') !== -1) {\n        // magic expressions below as these cases will only be compared with\n        // case E +(-)X% (0 <= X <= 100)\n        if (s0.indexOf('S') !== -1) {\n            return (2 * baseValue) + 1; // Case N/S (feedback contribution not sure)\n        }\n\n        return (2 * baseValue) + 2; // Case N/A\n    }\n\n    if (s0 === '0%') { // Case 0%\n        if (ditchZero) {\n            return 0;\n        }\n        return baseValue;\n    }\n\n    s0 = s0.replace('E', '').replace('%', ''); // Case E +(-)X%\n\n    if (s0 === '') {\n        return baseValue; // Case E\n    }\n\n    return baseValue + parseFloat(s0); // Other typical cases\n}\n\n/**\n * Sorting comparison functions.\n */\nclass Comparators {\n    /**\n     * The base comparator (ascending)\n     * @returns 1 if x comes after y, -1 if x comes before y, 0 if they are the same\n     */\n    static sortBase(x, y) {\n        // Text sorting\n        if (x < y) {\n            return -1;\n        }\n        return x > y ? 1 : 0;\n    }\n\n    /**\n     * Comparator for numbers (integer, double) (ascending)\n     * @returns +ve if x > y, -ve if x < y and 0 otherwise\n     */\n    static sortNum(x, y) {\n        return x - y;\n    }\n\n    /**\n     * Comparator for date. Allows for the same format as isDate()\n     * @returns 1 if Date x is after y, 0 if same and -1 if before\n     */\n    static sortDate(x, y) {\n        const x0 = Date.parse(x);\n        const y0 = Date.parse(y);\n        if (x0 > y0) {\n            return 1;\n        }\n        return x0 < y0 ? -1 : 0;\n    }\n\n    /**\n     * Comparator to sort strings in format: E([+-]x%) | N/A | N/S | 0% with\n     * possibly a tag that surrounds it.\n     */\n    static sortByPoints(a, b) {\n        const a0 = getPointValue(a, true);\n        const b0 = getPointValue(b, true);\n        if (isNumber(a0) && isNumber(b0)) {\n            return Comparators.sortNum(a0, b0);\n        }\n        return Comparators.sortBase(a0, b0);\n    }\n\n    /**\n     * Comparator to sort strings in format: [+-]x% | N/A with possibly a tag that\n     * surrounds it.\n     */\n    static sortByDiff(a, b) {\n        const a0 = getPointValue(a, false);\n        const b0 = getPointValue(b, false);\n        if (isNumber(a0) && isNumber(b0)) {\n            return Comparators.sortNum(a0, b0);\n        }\n        return Comparators.sortBase(a0, b0);\n    }\n\n    static getDefaultComparator(columnType) {\n        let defaultComparator;\n\n        if (columnType === 1) {\n            defaultComparator = Comparators.sortNum;\n        } else if (columnType === 2) {\n            defaultComparator = Comparators.sortDate;\n        } else {\n            defaultComparator = Comparators.sortBase;\n        }\n\n        return defaultComparator;\n    }\n}\n\n/**\n * Functions that pull data out of a table cell.\n */\nclass Extractors {\n    static textExtractor($tableCell) {\n        return $tableCell.text();\n    }\n\n    static tooltipExtractor($tableCell) {\n        return $tableCell.find('span').attr('data-original-title');\n    }\n\n    static dateStampExtractor($tableCell) {\n        return $tableCell.data('dateStamp');\n    }\n\n    static getDefaultExtractor() {\n        return Extractors.textExtractor;\n    }\n}\n\nclass TableButtonHelpers {\n    /**\n     * Given a button, get the innermost table enclosing it.\n     */\n    static getEnclosingTable($button) {\n        return $($button.parents('table')[0]);\n    }\n\n    /**\n     * Given a button and an index idx,\n     * find the button's column position in the table\n     * where the columns are treated as idx-indexed.\n     */\n    static getColumnPositionOfButton($button, idx) {\n        return $button.parent().children().index($button) + idx;\n    }\n\n    /**\n     * Given a table, clear all the sort states.\n     */\n    static clearAllSortStates($table) {\n        $table.find('.icon-sort').attr('class', 'icon-sort unsorted'); // clear the icons\n        $table.find('.button-sort-ascending')\n                .removeClass('button-sort-ascending')\n                .addClass('button-sort-none');\n        $table.find('.button-sort-descending')\n                .removeClass('button-sort-descending')\n                .addClass('button-sort-none');\n    }\n\n    /**\n     * Given a button in table, set its state to sorted ascending.\n     * Clear all other button states.\n     */\n    static setButtonToSortedAscending($button) {\n        this.clearAllSortStates(this.getEnclosingTable($button));\n        $button.addClass('button-sort-ascending');\n        $button.find('.icon-sort').attr('class', 'icon-sort sorted-ascending'); // set the icon to ascending\n    }\n\n    /**\n     * Given a button in table, set its state to sorted descending.\n     * Clear all other button states.\n     */\n    static setButtonToSortedDescending($button) {\n        this.clearAllSortStates(this.getEnclosingTable($button));\n        $button.addClass('button-sort-descending');\n        $button.find('.icon-sort').attr('class', 'icon-sort sorted-descending'); // set the icon to descending\n    }\n}\n\n// http://stackoverflow.com/questions/7558182/sort-a-table-fast-by-its-first-column-with-javascript-or-jquery\n/**\n * Sorts a table based on certain column and comparator\n *\n * @param $table\n *     A jQuery object representing the table.\n * @param colIdx\n *     The column index (1-based) as key for the sort\n * @param comparatorOrNull\n *     Function to compare two elements.\n *     May be null.\n * @param extractorOrNull\n *     Function to pull out data from a table cell for comparison.\n *     May be null.\n * @param shouldSortAscending\n *     If this is true, sort in ascending order.\n *     Otherwise, sort in descending order\n */\nfunction sortTable($table, colIdx, comparatorOrNull, extractorOrNull, shouldSortAscending) {\n    let columnType = 0;\n    let store = [];\n    const $rowList = $table.find('> tbody > tr');\n\n    // Iterate through column's contents to decide which comparator to use\n    for (let i = 0; i < $rowList.length; i += 1) {\n        if ($rowList[i].cells[colIdx - 1] === undefined) {\n            continue;\n        }\n\n        const extractor = isDefined(extractorOrNull) ? extractorOrNull : Extractors.getDefaultExtractor();\n\n        // $.trim trims leading/trailing whitespaces\n        // $rowList[i].cells[colIdx - 1] is where we get the table cell from\n        const textToCompare = $.trim(extractor($($rowList[i].cells[colIdx - 1])));\n\n        // Store rows together with the innerText to compare\n        store.push([textToCompare, $rowList[i], i]);\n\n        if ((columnType === 0 || columnType === 1) && isNumber(textToCompare)) {\n            columnType = 1;\n        } else if ((columnType === 0 || columnType === 2) && isDate(textToCompare)) {\n            columnType = 2;\n        } else {\n            columnType = 3;\n        }\n    }\n\n    const comparator = isDefined(comparatorOrNull) ? comparatorOrNull : Comparators.getDefaultComparator(columnType);\n\n    store.sort((x, y) => {\n        const compareResult = shouldSortAscending ? comparator(x[0].toUpperCase(), y[0].toUpperCase())\n                : comparator(y[0].toUpperCase(), x[0].toUpperCase());\n        if (compareResult === 0) {\n            return x[2] - y[2];\n        }\n        return compareResult;\n    });\n\n    // Must rewrap because .get() does not return a jQuery wrapped DOM node\n    // and hence does not have the .children() function\n    let $tbody = $($table.get(0)).children('tbody');\n\n    if ($tbody.size < 1) {\n        $tbody = $table;\n    }\n\n    // Must push to target tbody else it will generate a new tbody for the table\n    for (let j = 0; j < store.length; j += 1) {\n        $tbody.get(0).appendChild(store[j][1]);\n    }\n\n    store = null;\n}\n\n/**\n * Sorts a table\n * @param sortButtonClicked\n *     The jQuery object representing the sort button that was clicked.\n * @param comparatorStringOrNull\n *     String representing the function to compare 2 elements.\n *     May be null.\n * @param extractorStringOrNull\n *     String representing the function to pull out data from a table cell for comparison.\n *     May be null.\n */\nfunction toggleSort($button, comparatorStringOrNull, extractorStringOrNull) {\n    const isSortedAscending = $button.hasClass('button-sort-ascending');\n\n    const $table = TableButtonHelpers.getEnclosingTable($button);\n    const colIdx = TableButtonHelpers.getColumnPositionOfButton($button, 1);\n    const comparatorOrNull = isDefined(comparatorStringOrNull) ? Comparators[comparatorStringOrNull] : null;\n    const extractorOrNull = isDefined(extractorStringOrNull) ? Extractors[extractorStringOrNull] : null;\n    const shouldSortAscending = !isSortedAscending;\n\n    sortTable($table, colIdx, comparatorOrNull, extractorOrNull, shouldSortAscending);\n\n    // update the button and icon states\n    if (shouldSortAscending) {\n        TableButtonHelpers.setButtonToSortedAscending($button);\n    } else {\n        TableButtonHelpers.setButtonToSortedDescending($button);\n    }\n}\n\nexport {\n    Comparators, // for test\n    getPointValue, // for test\n    toggleSort,\n};\n","/**\n* Encodes a string for displaying in a HTML document.\n* Uses an in-memory element created with jQuery.\n* @param the string to be encoded\n*/\nfunction encodeHtmlString(stringToEncode) {\n    return $('<div>').text(stringToEncode).html();\n}\n\nfunction escapeRegExp(string) {\n    return string.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n}\n\n/**\n * Helper function to replace all occurrences of a sub-string in a string.\n */\nfunction replaceAll(string, find, replace) {\n    return string.replace(new RegExp(escapeRegExp(find), 'g'), replace);\n}\n\n/**\n * Sanitizes special characters such as ' and \\ to \\' and \\\\ respectively\n */\nfunction sanitizeForJs(rawString) {\n    let string = rawString;\n    string = replaceAll(string, '\\\\', '\\\\\\\\');\n    string = replaceAll(string, '\\'', '\\\\\\'');\n    return string;\n}\n\nexport {\n    encodeHtmlString,\n    sanitizeForJs,\n};\n","import {\n    ParamsNames,\n} from './const';\n\n/**\n * Returns the value of a cookie given its name.\n * Returns null if the cookie is not set.\n */\nfunction getCookie(cookieNameToFind) {\n    const cookies = document.cookie.split('; ').map(s => s.split('='));\n\n    for (let i = 0; i < cookies.length; i += 1) {\n        const cookieName = cookies[i][0];\n        const cookieValue = cookies[i][1];\n\n        // the cookie was found in the ith iteration\n        if (cookieName === cookieNameToFind) {\n            return cookieValue;\n        }\n    }\n\n    // the cookie was not found\n    return null;\n}\n\nfunction makeCsrfTokenParam() {\n    return `${ParamsNames.SESSION_TOKEN}=${getCookie(ParamsNames.SESSION_TOKEN)}`;\n}\n\nfunction updateCsrfTokenInInputFields() {\n    const updatedToken = getCookie(ParamsNames.SESSION_TOKEN);\n    if (!updatedToken) {\n        return;\n    }\n    $(`input[name=${ParamsNames.SESSION_TOKEN}]`).val(updatedToken);\n}\n\nexport {\n    makeCsrfTokenParam,\n    updateCsrfTokenInInputFields,\n};\n","import {\n    isWithinView,\n} from './helper';\n\n/**\n * Scrolls the screen to a certain position.\n * @param scrollPos Position to scroll the screen to.\n * @param duration Duration of animation in ms. Scrolling is instant if omitted.\n *                 'fast and 'slow' are 600 and 200 ms respectively,\n *                 400 ms will be used if any other string is supplied.\n */\nfunction scrollToPosition(scrollPos, duration) {\n    if (duration === undefined || duration === null) {\n        $(window).scrollTop(scrollPos);\n    } else {\n        $('html, body').animate({ scrollTop: scrollPos }, duration);\n    }\n}\n\n/**\n * Scrolls to an element.\n * Possible options are as follows:\n *\n * @param element - element to scroll to\n * @param options - associative array with optional values:\n *                  * type: ['top'|'view'], defaults to 'top';\n *                          'top' scrolls to the top of the element,\n *                          'view' scrolls the element into view\n *                  * offset: offset from element to scroll to in px,\n *                            defaults to navbar / footer offset for scrolling from above or below\n *                  * duration: duration of animation,\n *                              defaults to 0 for scrolling without animation\n */\nfunction scrollToElement(element, opts) {\n    const defaultOptions = {\n        type: 'top',\n        offset: 0,\n        duration: 0,\n    };\n\n    const options = opts || {};\n    const type = options.type || defaultOptions.type;\n    let offset = options.offset || defaultOptions.offset;\n    const duration = options.duration || defaultOptions.duration;\n\n    const isViewType = type === 'view';\n    if (isViewType && isWithinView(element)) {\n        return;\n    }\n\n    const navbar = $('.navbar')[0];\n    const navbarHeight = navbar ? navbar.offsetHeight : 0;\n    const footer = $('#footerComponent')[0];\n    const footerHeight = footer ? footer.offsetHeight : 0;\n    const windowHeight = window.innerHeight - navbarHeight - footerHeight;\n\n    const isElementTallerThanWindow = windowHeight < element.offsetHeight;\n    const isFromAbove = window.scrollY < element.offsetTop;\n    const isAlignedToTop = !isViewType || isElementTallerThanWindow || !isFromAbove;\n\n    // default offset - from navbar / footer\n    if (options.offset === undefined) {\n        offset = isAlignedToTop ? navbarHeight * -1 : footerHeight * -1;\n    }\n\n    // adjust offset to bottom of element\n    if (!isAlignedToTop) {\n        offset *= -1;\n        offset += element.offsetHeight - window.innerHeight;\n    }\n\n    const scrollPos = element.offsetTop + offset;\n\n    scrollToPosition(scrollPos, duration);\n}\n\n/**\n * Scrolls the screen to top\n * @param duration Duration of animation in ms. Scrolling is instant if omitted.\n *                 'fast and 'slow' are 600 and 200 ms respectively,\n *                 400 ms will be used if any other string is supplied.\n */\nfunction scrollToTop(duration) {\n    scrollToPosition(0, duration);\n}\n\nexport {\n    scrollToElement,\n    scrollToTop,\n};\n","import {\n    updateCsrfTokenInInputFields,\n} from './crypto';\n\nimport {\n    toggleSort,\n} from './sortBy';\n\n/**\n * Polyfills the String.prototype.includes function finalized in ES6 for browsers that do not yet support the function.\n */\n/* eslint-disable no-extend-native */ // necessary for polyfills\nif (!String.prototype.includes) {\n    String.prototype.includes = function (search, startParam) {\n        const start = typeof startParam === 'number' ? startParam : 0;\n\n        if (start + search.length > this.length) {\n            return false;\n        }\n        return this.indexOf(search, start) !== -1;\n    };\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Checks if the current device is touch based device\n * Reference: https://github.com/Modernizr/Modernizr/blob/master/feature-detects/touchevents.js\n */\nfunction isTouchDevice() {\n    return ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch);\n}\n\n$(document).on('click', '.toggle-sort', (e) => {\n    const $button = $(e.currentTarget); // the button clicked on\n\n    const comparatorStringOrNull = $button.data('toggle-sort-comparator');\n    const extractorStringOrNull = $button.data('toggle-sort-extractor');\n\n    toggleSort($button, comparatorStringOrNull, extractorStringOrNull);\n});\n\n$(document).on('ajaxComplete ready', () => {\n    /**\n     * Initializing then disabling is better than simply\n     * not initializing for mobile due to some tooltips-specific\n     * code that throws errors.\n    */\n    const $tooltips = $('[data-toggle=\"tooltip\"]');\n    $tooltips.tooltip({\n        html: true,\n        container: 'body',\n    });\n    if (isTouchDevice()) {\n        $tooltips.tooltip('disable');\n    }\n\n    /**\n     * Underlines all span elements with tool-tips except for\n     * the ones without a text value. This is to exclude elements\n     * such as 'icons' from underlining.\n    */\n    $('span[data-toggle=\"tooltip\"]').each(function () {\n        const textValue = $(this).text().replace(/\\s/g, '');\n        if (textValue) {\n            $(this).addClass('tool-tip-decorate');\n        }\n    });\n\n    /**\n     * Updates the token in input fields with the latest one retrieved from the cookie.\n     * The token becomes outdated once the session expires. The cookie might be updated\n     * with the new token and session during page loads from other browser windows.\n     * The latest value should be retrieved from the cookie before form submission.\n     */\n    $('form').submit(updateCsrfTokenInInputFields);\n});\n","import {\n    BootstrapContextualColors,\n} from './const';\n\nimport {\n    scrollToElement,\n} from './scrollTo';\n\nconst DIV_STATUS_MESSAGE = '#statusMessagesToUser';\n\nfunction buildNewStatusMessageDiv(message, bootstrapContextualColor) {\n    const $newStatusMessageDivContent = $('<div></div>');\n\n    // Default the status type to info if any invalid status is passed in\n    const contextualColor = BootstrapContextualColors.isValidType(bootstrapContextualColor)\n            ? bootstrapContextualColor : BootstrapContextualColors.INFO;\n\n    $newStatusMessageDivContent.addClass(\n            `overflow-auto alert alert-${contextualColor} icon-${contextualColor} statusMessage`);\n    $newStatusMessageDivContent.html(message);\n\n    return $newStatusMessageDivContent;\n}\n\n/**\n * Populates the status div with the message and the message status.\n * Default message type is info.\n *\n * @param message the text message to be shown to the user\n * @param {BootstrapContextualColors} bootstrapContextualColor the contextual color to apply to the status messsage\n * @return created status message div\n */\nfunction populateStatusMessageDiv(message, bootstrapContextualColor) {\n    const $statusMessageDivToUser = $(DIV_STATUS_MESSAGE);\n    const $statusMessageDivContent = buildNewStatusMessageDiv(message, bootstrapContextualColor);\n    $statusMessageDivToUser.empty();\n    $statusMessageDivToUser.append($statusMessageDivContent);\n    return $statusMessageDivToUser;\n}\n\n/**\n * Appends a new message to the status div, leaving existing messages intact.\n * Default message type is info.\n *\n * @param message the text message to be shown to the user\n * @param {BootstrapContextualColors} bootstrapContextualColor the contextual color to apply to the status messsage\n */\nfunction appendNewStatusMessage(message, bootstrapContextualColor) {\n    const $statusMessagesDivToUser = $(DIV_STATUS_MESSAGE);\n    $statusMessagesDivToUser.append(buildNewStatusMessageDiv(message, bootstrapContextualColor));\n    $statusMessagesDivToUser.show();\n    scrollToElement($statusMessagesDivToUser[0], { offset: -window.innerHeight / 2 });\n}\n\n/**\n * Sets a status message and the message status.\n * Default message type is info.\n *\n * @param message the text message to be shown to the user\n * @param {BootstrapContextualColors} bootstrapContextualColor the contextual color to apply to the status messsage\n */\nfunction setStatusMessage(message, bootstrapContextualColor) {\n    if (message === '' || message === undefined || message === null) {\n        return;\n    }\n    const $statusMessageDivToUser = populateStatusMessageDiv(message, bootstrapContextualColor);\n    $statusMessageDivToUser.show();\n    scrollToElement($statusMessageDivToUser[0], { offset: -window.innerHeight / 2 });\n}\n\n/**\n * Sets a status message and the message status to a given form.\n * Default message type is info.\n *\n * @param message the text message to be shown to the user\n * @param {BootstrapContextualColors} bootstrapContextualColor the contextual color to apply to the status messsage\n * @param form form which should own the status\n */\nfunction setStatusMessageToForm(message, bootstrapContextualColor, form) {\n    if (message === '' || message === undefined || message === null) {\n        return;\n    }\n    // Copy the statusMessage and prepend to form\n    const $copyOfStatusMessagesToUser = populateStatusMessageDiv(message, bootstrapContextualColor).clone().show();\n    $(DIV_STATUS_MESSAGE).remove();\n    $(form).prepend($copyOfStatusMessagesToUser);\n    const opts = {\n        offset: -window.innerHeight / 8,\n        duration: 1000,\n    };\n    scrollToElement($copyOfStatusMessagesToUser[0], opts);\n}\n\n/**\n * Appends the status messages panels into the current list of panels of status messages.\n * @param  messages the list of status message panels to be added (not just text)\n *\n */\nfunction appendStatusMessage(messages) {\n    const $statusMessagesToUser = $(DIV_STATUS_MESSAGE);\n\n    $statusMessagesToUser.append($(messages));\n    $statusMessagesToUser.show();\n}\n\n/**\n * Clears the status message div tag and hides it\n */\nfunction clearStatusMessages() {\n    const $statusMessagesToUser = $(DIV_STATUS_MESSAGE);\n\n    $statusMessagesToUser.empty();\n    $statusMessagesToUser.hide();\n}\n\nexport {\n    appendNewStatusMessage,\n    appendStatusMessage,\n    clearStatusMessages,\n    setStatusMessage,\n    setStatusMessageToForm,\n};\n","/* global bootbox:false */\n\nimport {\n    BootstrapContextualColors,\n} from './const';\n\n/**\n * Wrapper for Bootbox.js (available at http://bootboxjs.com/)\n * \"Bootbox.js is a small JavaScript library which allows you to create programmatic dialog boxes using\n *  Bootstrap modals\"\n */\n\nconst DEFAULT_OK_TEXT = 'OK';\nconst DEFAULT_CANCEL_TEXT = 'Cancel';\nconst DEFAULT_YES_TEXT = 'Yes';\nconst DEFAULT_NO_TEXT = 'No';\n\nfunction applyStyleToModal(modal, bootstrapContextualColor) {\n    modal.find('.modal-header').addClass(`alert-${bootstrapContextualColor || BootstrapContextualColors.DEFAULT}`)\n            .find('.modal-title').addClass(`icon-${bootstrapContextualColor || BootstrapContextualColors.DEFAULT}`);\n}\n\n/**\n * Custom alert dialog to replace default alert() function\n * Required params: titleText and messageText\n * Optional params: okButtonText (defaults to \"OK\")\n *                  bootstrapContextualColor (defaults to BootstrapContextualColors.DEFAULT)\n */\nfunction showModalAlert(titleText, messageText, okButtonText, bootstrapContextualColor) {\n    const modal = bootbox.dialog({\n        title: titleText,\n        message: messageText,\n        show: false,\n        buttons: {\n            okay: {\n                label: okButtonText || DEFAULT_OK_TEXT,\n                className: `modal-btn-ok btn-${bootstrapContextualColor || BootstrapContextualColors.DEFAULT}`,\n            },\n        },\n    });\n    applyStyleToModal(modal, bootstrapContextualColor);\n\n    modal.modal('show');\n}\n\n/**\n * Custom confirmation dialog to replace default confirm() function\n * Required params: titleText, messageText and okCallback\n * Optional params: cancelCallBack (defaults to null)\n *                  okButtonText (defaults to \"OK\")\n *                  cancelButtonText (defaults to \"Cancel\")\n *                  bootstrapContextualColor (defaults to BootstrapContextualColors.INFO)\n *                  onHiddenCallback - triggers when the event `hidden.bs.modal` is triggered\n */\nfunction showModalConfirmation(titleText, messageText, okCallback, cancelCallback,\n        okButtonText, cancelButtonText, bootstrapContextualColor, onHiddenCallback) {\n    const modal = bootbox.dialog({\n        title: titleText,\n        message: messageText,\n        onEscape: cancelCallback || true,\n        show: false,\n        buttons: {\n            cancel: {\n                label: cancelButtonText || DEFAULT_CANCEL_TEXT,\n                className: 'modal-btn-cancel btn-default',\n                callback: cancelCallback || null,\n            },\n            ok: {\n                label: okButtonText || DEFAULT_OK_TEXT,\n                className: `modal-btn-ok btn-${bootstrapContextualColor || BootstrapContextualColors.DEFAULT}`,\n                callback: okCallback,\n            },\n        },\n    });\n\n    if (onHiddenCallback) {\n        modal.on('hidden.bs.modal', onHiddenCallback);\n    }\n\n    applyStyleToModal(modal, bootstrapContextualColor);\n\n    modal.modal('show');\n}\n\n/**\n * Custom confirmation dialog to replace default confirm() function\n * Required params: titleText, messageText, yesButtonCallback and noButtonCallback\n * Optional params: cancelButtonCallBack (defaults to null)\n *                  yesButtonText (defaults to \"Yes\")\n *                  noButtonText (defaults to \"No\")\n *                  cancelButtonText (defaults to \"Cancel\")\n *                  bootstrapContextualColor (defaults to BootstrapContextualColors.INFO)\n *                  onHiddenCallback - triggers when the event `hidden.bs.modal` is triggered\n */\nfunction showModalConfirmationWithCancel(titleText, messageText, yesButtonCallback, noButtonCallback,\n        cancelButtonCallback, yesButtonText, noButtonText, cancelButtonText, bootstrapContextualColor,\n        onHiddenCallback) {\n    const modal = bootbox.dialog({\n        title: titleText,\n        message: messageText,\n        onEscape: cancelButtonCallback || true,\n        show: false,\n        buttons: {\n            yes: {\n                label: yesButtonText || DEFAULT_YES_TEXT,\n                className: `modal-btn-ok btn-${bootstrapContextualColor || BootstrapContextualColors.DEFAULT}`,\n                callback: yesButtonCallback,\n            },\n            no: {\n                label: noButtonText || DEFAULT_NO_TEXT,\n                className: `modal-btn-ok btn-${bootstrapContextualColor || BootstrapContextualColors.DEFAULT}`,\n                callback: noButtonCallback,\n            },\n            cancel: {\n                label: cancelButtonText || DEFAULT_CANCEL_TEXT,\n                className: 'modal-btn-cancel btn-default',\n                callback: cancelButtonCallback || null,\n            },\n        },\n    });\n\n    if (onHiddenCallback) {\n        modal.on('hidden.bs.modal', onHiddenCallback);\n    }\n\n    applyStyleToModal(modal, bootstrapContextualColor);\n\n    modal.modal('show');\n}\n\nexport {\n    showModalAlert,\n    showModalConfirmation,\n    showModalConfirmationWithCancel,\n};\n","/* global tinymce:false */\n\nimport {\n    showModalAlert,\n} from '../common/bootboxWrapper';\n\nimport {\n    BootstrapContextualColors,\n    ParamsNames,\n} from '../common/const';\n\nimport {\n    isNumber,\n} from '../common/helper';\n\nimport {\n    richTextEditorBuilder,\n} from '../common/richTextEditor';\n\nimport {\n    sanitizeForJs,\n} from '../common/sanitizer';\n\nimport {\n    scrollToElement,\n} from '../common/scrollTo';\n\nimport {\n    setStatusMessage,\n} from '../common/statusMessage';\n\nimport {\n    bindLinksInUnregisteredPage,\n} from '../common/student';\n\nimport {\n    addLoadingIndicator,\n    disallowNonNumericEntries,\n} from '../common/ui';\n\nconst FEEDBACK_RESPONSE_RECIPIENT = 'responserecipient';\nconst FEEDBACK_RESPONSE_TEXT = 'responsetext';\nconst FEEDBACK_MISSING_RECIPIENT = 'You did not specify a recipient for your response in question(s)';\nconst INFO_STATUS_MESSAGE = '.alert-info.statusMessage';\nconst WARNING_STATUS_MESSAGE = '.alert-warning.statusMessage';\nconst SUCCESS_STATUS_MESSAGE = '.alert-success.statusMessage';\nconst END_TIME = '#end-time';\nconst MS_IN_FIFTEEN_MINUTES = 900000;\n\n// text displayed to user\nconst SESSION_NOT_OPEN = 'Feedback Session Not Open';\nconst SESSION_CLOSING_HEADER = 'Feedback Session Will Be Closing Soon';\nconst SESSION_CLOSING_MESSAGE = 'Warning: you have less than 15 minutes before the submission deadline expires!';\nconst RESPONSES_SUCCESSFULLY_SUBMITTED = '<p>All your responses have been successfully recorded! '\n        + 'You may now leave this page.</p>'\n        + '<p>Note that you can change your responses and submit them again any time before the session closes.</p>';\n\nfunction isPreview() {\n    return $(document).find('.navbar').text().indexOf('Preview') !== -1;\n}\n\nfunction isModeration() {\n    return $('#moderationHintButton').length !== 0;\n}\n\nfunction updateOtherOptionAttributes(otherOption, indexSuffix) {\n    if (otherOption.is(':checked')) {\n        $(`#msqOtherOptionText${indexSuffix}`).prop('disabled', false); // enable textbox\n        $(`#msqIsOtherOptionAnswer${indexSuffix}`).val('1');\n    } else {\n        $(`#msqOtherOptionText${indexSuffix}`).prop('disabled', true); // disable textbox\n        $(`#msqIsOtherOptionAnswer${indexSuffix}`).val('0');\n    }\n}\n\nfunction bindModerationHintButton() {\n    if (!isModeration()) {\n        return;\n    }\n\n    const expandText = '[More]';\n    const closeText = '[Less]';\n    const $moderationHintButton = $('#moderationHintButton');\n    const $moderationHint = $('#moderationHint');\n\n    $moderationHintButton.text(expandText);\n\n    $moderationHintButton.click((event) => {\n        event.preventDefault();\n\n        if ($moderationHint.hasClass('hidden')) {\n            $moderationHintButton.text(closeText);\n            $moderationHint.removeClass('hidden');\n        } else {\n            $moderationHintButton.text(expandText);\n            $moderationHint.addClass('hidden');\n        }\n    });\n}\n\nfunction getQuestionTypeNumbers(qnType) {\n    const questions = $('input[name^=\"questiontype-\"]').filter(function () {\n        return $(this).val() === qnType;\n    });\n\n    const questionNums = [];\n\n    for (let i = 0; i < questions.length; i += 1) {\n        questionNums[i] = questions[i].name.substring('questiontype-'.length, questions[i].name.length);\n    }\n\n    return questionNums;\n}\n\n// Saves the value in the other option textbox for MCQ questions\nfunction updateMcqOtherOptionField() {\n    const mcqQuestionNums = getQuestionTypeNumbers('MCQ');\n\n    for (let i = 0; i < mcqQuestionNums.length; i += 1) {\n        const qnNum = mcqQuestionNums[i];\n        const numResponses = $(`[name=\"questionresponsetotal-${qnNum}\"]`).val();\n\n        for (let j = 0; j < numResponses; j += 1) {\n            $(`[data-text=\"otherOptionText\"][name=\"responsetext-${qnNum}-${j}\"]`)\n                    .val($(`#otherOptionText-${qnNum}-${j}`).val());\n        }\n    }\n}\n\n// Saves the value in the other option textbox for MSQ questions\nfunction updateMsqOtherOptionField() {\n    const msqQuestionNums = getQuestionTypeNumbers('MSQ');\n\n    for (let i = 0; i < msqQuestionNums.length; i += 1) {\n        const qnNum = msqQuestionNums[i];\n        const numResponses = $(`[name=\"questionresponsetotal-${qnNum}\"]`).val();\n\n        for (let j = 0; j < numResponses; j += 1) {\n            $(`[data-text=\"msqOtherOptionText\"][name=\"responsetext-${qnNum}-${j}\"]`)\n                    .val($(`#msqOtherOptionText-${qnNum}-${j}`).val());\n        }\n    }\n}\n\n// Looks for the question to be moderated (if it exists)\nfunction focusModeratedQuestion() {\n    if ($('#moderated-question').length > 0) {\n        scrollToElement($('#moderated-question')[0], { duration: 1000 });\n    }\n}\n\nfunction prepareMCQQuestions() {\n    const mcqQuestionNums = getQuestionTypeNumbers('MCQ');\n\n    const radioButtons = {};\n    const radioStates = {};\n\n    $.each(mcqQuestionNums, (i) => {\n        const qnNum = mcqQuestionNums[i];\n        const numResponses = $(`[name=\"questionresponsetotal-${qnNum}\"]`).val();\n\n        for (let j = 0; j < numResponses; j += 1) {\n            const id = `responsetext-${qnNum}-${j}`;\n            radioButtons[id] = $(`[name=${id}]`);\n            radioStates[id] = {};\n\n            // initialize radio buttons' states\n            $.each(radioButtons[id], (index, radio) => {\n                radioStates[id][radio.value] = $(radio).is(':checked');\n            });\n\n            radioButtons[id].click(function (event) {\n                const $self = $(this);\n                const val = $self.val();\n                const name = $self.attr('name');\n                const indexSuffix = name.substring(name.indexOf('-'));\n\n                // toggle the radio button checked state\n                $self.attr('checked', radioStates[name][val] = !radioStates[name][val]);\n\n                // If the radio button corresponding to 'Other' is clicked\n                if ($self.data('text') === 'otherOptionText') {\n                    if ($self.is(':checked')) {\n                        $(`#otherOptionText${indexSuffix}`).prop('disabled', false); // enable textbox\n                        $(`#mcqIsOtherOptionAnswer${indexSuffix}`).val('1');\n                    } else {\n                        $(`#otherOptionText${indexSuffix}`).prop('disabled', true); // disable textbox\n                        $(`#mcqIsOtherOptionAnswer${indexSuffix}`).val('0');\n                    }\n                } else if ($(`#mcqIsOtherOptionAnswer${indexSuffix}`).length > 0) {\n                    // If other option is enabled for the question\n                    $(`#otherOptionText${indexSuffix}`).prop('disabled', true); // disable textbox\n                    $(`#mcqIsOtherOptionAnswer${indexSuffix}`).val('0');\n                }\n\n                $.each(radioButtons[name], (index, radio) => {\n                    if (radio.value !== val) {\n                        radioStates[name][radio.value] = false;\n                    }\n                });\n\n                event.stopImmediatePropagation();\n            });\n        }\n    });\n}\n\nfunction prepareContribQuestions() {\n    const contribQuestionNums = getQuestionTypeNumbers('CONTRIB');\n\n    $.each(contribQuestionNums, (i) => {\n        const qnNum = contribQuestionNums[i];\n\n        // Get options for the specified question number of contribution question type\n        const options = $(`[name^=\"responsetext-${qnNum}-\"]`);\n\n        $.each(options, (k) => {\n            const $dropdown = $(`[name=\"responsetext-${qnNum}-${k}\"]`);\n\n            // Set initial color\n            $dropdown.addClass($dropdown[0].options[$dropdown[0].selectedIndex].className);\n\n            $dropdown.on('change', function () {\n                const $self = $(this);\n                $self.removeClass('color-neutral');\n                $self.removeClass('color-positive');\n                $self.removeClass('color-negative');\n                $self.addClass(this.options[this.selectedIndex].className);\n            });\n        });\n    });\n}\n\nfunction prepareMSQQuestions() {\n    // Get index of MSQ questions\n    const msqQuestionNums = getQuestionTypeNumbers('MSQ');\n\n    $.each(msqQuestionNums, (i) => {\n        const qnNum = msqQuestionNums[i];\n\n        let noneOfTheAboveOption = $(`input[name^=\"responsetext-${qnNum}-\"][value=\"\"]:not([data-text])`);\n        const otherOption = $(`input[name^=\"responsetext-${qnNum}-\"][data-text=\"msqOtherOptionText\"]`);\n\n        // If 'other' is enabled for the question\n        if (otherOption.length > 0) {\n            // checkbox corresponding to 'other' is clicked\n            otherOption.click(function () {\n                const name = $(this).attr('name');\n                const indexSuffix = name.substring(name.indexOf('-'));\n                updateOtherOptionAttributes($(this), indexSuffix);\n            });\n        }\n\n        // reset other options when \"none of the above\" is clicked\n        noneOfTheAboveOption.click(function () {\n            // $options includes 'other'\n            const $options = $(this).closest('table')\n                    .find('input[name^=\"responsetext-\"][value!=\"\"], input[name^=\"responsetext-\"][data-text]');\n            const name = $(this).attr('name');\n            const indexSuffix = name.substring(name.indexOf('-'));\n\n            $options.each(function () {\n                $(this).prop('checked', false);\n\n                // 'other' option is clicked\n                if ($(this).attr('data-text') !== undefined) {\n                    updateOtherOptionAttributes($(this), indexSuffix);\n                }\n            });\n        });\n\n        // reset \"none of the above\" if any option is clicked\n        const $options = $(`input[name^=\"responsetext-${qnNum}-\"][value!=\"\"], `\n                        + `input[name^=\"responsetext-${qnNum}-\"][data-text]`); // includes 'other'\n\n        $options.click(function () {\n            const $self = $(this);\n            noneOfTheAboveOption = $self.closest('table').find(\n                    'input[name^=\"responsetext-\"][value=\"\"]:not([data-text])');\n            const name = $self.attr('name');\n            const indexSuffix = name.substring(name.indexOf('-'));\n\n            noneOfTheAboveOption.prop('checked', false);\n\n            // 'other' option is clicked\n            if ($self.attr('data-text') !== undefined) {\n                updateOtherOptionAttributes($self, indexSuffix);\n            }\n        });\n    });\n}\n\n/**\n *  Updates the colour of a rubric cell if it is checked.\n */\nfunction updateRubricCellSelectedColor(radioInput) {\n    const cell = $(radioInput).parent();\n    const tableRow = cell.parent();\n\n    if ($(radioInput).prop('checked')) {\n        cell.addClass('cell-selected');\n        tableRow.addClass('row-answered');\n    } else if (cell.hasClass('cell-selected')) {\n        cell.removeClass('cell-selected');\n    }\n}\n\n/**\n * Syncs the mobile ui for rubrics on changes to the desktop ui\n */\nfunction syncRubricsMobileUi(changedInput) {\n    const $changedInput = $(changedInput);\n    const mobileInputId = `#mobile-${changedInput.id}`;\n    const mobileInputName = `[name^=\"mobile-${changedInput.name}\"]`;\n    if ($changedInput.is(':checked')) {\n        $(mobileInputId).click();\n    } else {\n        $(mobileInputName).prop('checked', false);\n        $(mobileInputId).trigger('change', [true]);\n    }\n}\n\n/**\n * Syncs the desktop ui for rubrics on changes to the mobile ui\n */\nfunction syncRubricsDesktopUi(changedInput) {\n    const $changedInput = $(changedInput);\n    const desktopInputId = `#${changedInput.id.replace('mobile-', '')}`;\n    const desktopInputName = `[name^=\"${changedInput.name.replace('mobile-', '')}\"]`;\n    if ($changedInput.is(':checked')) {\n        $(desktopInputId).click();\n    } else {\n        $(desktopInputName).prop('checked', false);\n        $(desktopInputId).trigger('change', [true]);\n    }\n}\n\n/**\n * Prepares desktop view for rubric questions by setting cells to highlight on hover, highlight when checked\n * and bind the cells click to click radio buttons\n */\nfunction prepareDesktopRubricQuestions() {\n    const $rubricRadioInputs = $('[name^=\"rubricChoice-\"]');\n\n    $.each($rubricRadioInputs, (i) => {\n        const $parentCell = $($rubricRadioInputs[i]).parent();\n\n        $parentCell.hover(function () {\n            $(this).addClass('cell-hover');\n        }, function () {\n            $(this).removeClass('cell-hover');\n        });\n\n        $parentCell.click(function (event) {\n            const $radioInput = $(this).find('[name^=\"rubricChoice-\"]');\n\n            if ($radioInput.prop('disabled')) {\n                return;\n            }\n\n            if (event.target === this) {\n                $radioInput.prop('checked', !$radioInput.prop('checked'));\n                $radioInput.trigger('change');\n            }\n        });\n\n        // Bind refresh highlights on check\n        $($rubricRadioInputs[i]).on('change', function (event, isSync) {\n            // Update all radio inputs in the same row.\n            const $rowRadioInputs = $(this).closest('tr').find('[name^=\"rubricChoice-\"]');\n            const tableRow = $(this).closest('tr');\n\n            if (tableRow.hasClass('row-answered')) {\n                tableRow.removeClass('row-answered');\n            }\n\n            for (let j = 0; j < $rowRadioInputs.length; j += 1) {\n                updateRubricCellSelectedColor($rowRadioInputs[j]);\n            }\n\n            if (isSync === undefined) {\n                // Sync mobile UI\n                syncRubricsMobileUi(this);\n            }\n        });\n\n        // First time update of checked cells\n        for (let j = 0; j < $rubricRadioInputs.length; j += 1) {\n            updateRubricCellSelectedColor($rubricRadioInputs[j]);\n        }\n    });\n}\n\n/**\n * Prepares mobile view for rubric questions by setting panels\n * to change color on clicking the radio buttons and uncheck logic\n */\nfunction prepareMobileRubricQuestions() {\n    const $rubricRadioInputs = $('[name^=\"mobile-rubricChoice-\"]');\n\n    // setup initial panel colors\n    const $filledInPanels = $rubricRadioInputs.filter(':checked').closest('.panel');\n    $filledInPanels.removeClass('panel-default').addClass('panel-success');\n\n    // setup panel highlighting when changing an option\n    $rubricRadioInputs.on('change', function (event, isSync) {\n        const $self = $(this);\n        const $parentPanel = $self.closest('.panel');\n        if ($self.is(':checked')) {\n            $parentPanel.removeClass('panel-default').addClass('panel-success');\n        } else {\n            $parentPanel.addClass('panel-default').removeClass('panel-success');\n        }\n        if (isSync === undefined) {\n            syncRubricsDesktopUi(this);\n        }\n    });\n\n    // setup unchecking when clicking on selected radio button\n    // reference: http://stackoverflow.com/a/6246260\n    $rubricRadioInputs.closest('label').mousedown(function () {\n        const $self = $(this);\n        const $radioInput = $self.find('[name^=\"mobile-rubricChoice-\"]');\n        if ($radioInput.is(':checked') && !$radioInput.prop('disabled')) {\n            const uncheck = function () {\n                setTimeout(() => {\n                    $radioInput.prop('checked', false);\n                    $radioInput.trigger('change');\n                }, 0);\n            };\n            const unbind = function () {\n                $self.unbind('mouseup', up); // eslint-disable-line no-use-before-define\n            };\n            const up = function () {\n                uncheck();\n                unbind();\n            };\n            $self.bind('mouseup', up);\n            $self.one('mouseout', unbind);\n        }\n    });\n}\n\nfunction prepareRubricQuestions() {\n    prepareDesktopRubricQuestions();\n    prepareMobileRubricQuestions();\n}\n\nfunction formatRubricQuestions() {\n    const rubricQuestionNums = getQuestionTypeNumbers('RUBRIC');\n    for (let i = 0; i < rubricQuestionNums.length; i += 1) {\n        const qnNum = rubricQuestionNums[i];\n        let numResponses = $(`[name=\"questionresponsetotal-${qnNum}\"]`).val();\n        numResponses = parseInt(numResponses, 10);\n\n        for (let j = 0; j < numResponses; j += 1) {\n            const responsetext = [];\n\n            const $responses = $(`[name^=\"rubricChoice-${qnNum}-${j}-\"]:checked`);\n\n            for (let k = 0; k < $responses.length; k += 1) {\n                responsetext.push($($responses[k]).val());\n            }\n\n            $(`[name=\"responsetext-${qnNum}-${j}\"]`).val(responsetext);\n        }\n    }\n}\n\nfunction prepareConstSumQuestions() {\n    const constSumQuestionNums = getQuestionTypeNumbers('CONSTSUM');\n\n    for (let i = 0; i < constSumQuestionNums.length; i += 1) {\n        const qnNum = constSumQuestionNums[i];\n\n        // Check if feedback session is open or under preview mode\n        if (!$('#response_submit_button').is(':disabled')\n            || isPreview()) {\n            // Add elements for displaying instructions to Constant Sum questions\n            $(`.constraints-${qnNum}`).each(function () {\n                $(this).prepend('<p class=\"text-color-blue align-left text-bold\">Note:</p>'\n                        + `<p class=\"text-color-blue padding-left-35px\" id=\"constSumInstruction-${qnNum}\"></p>`\n                        + '<hr class=\"margin-top-0 border-top-dark-gray\">');\n            });\n\n            // Add elements for displaying messages/errors based on user input\n            $(`.evalueeForm-${qnNum}`).each(function (responseIndx) {\n                $(this).after(`<div id=\"constSumInputAlert-${qnNum}-${responseIndx}\" style=\"display:none\">`\n                        + `<p class=\"text-color-green padding-left-35px\" id=\"constSumMessage-${qnNum}-${responseIndx}\"></p>`\n                        + '<hr class=\"margin-top-0 border-top-dark-gray\">');\n            });\n\n            // Check if points are distributed among recipients or options\n            if ($(`#constSumToRecipients-${qnNum}`).val() === 'true') {\n                let numResponses = $(`[name=\"questionresponsetotal-${qnNum}\"]`).val();\n                numResponses = parseInt(numResponses, 10);\n                /*\n                 * Only display the last alert block since points\n                 * are distributed among recipients\n                 */\n                $(`#constSumInputAlert-${qnNum}-${numResponses - 1}`).show();\n            } else {\n                /*\n                 * Display alert block for each recipient\n                 * since each recipient has its own set of options\n                 */\n                $(`[id^=\"constSumInputAlert-${qnNum}-\"]`).show();\n\n                // Add further indentation to options for better layout if recipient name is visible\n                if ($(`.evalueeLabel-${qnNum}`).length) {\n                    $(`[id^=\"constSumSubmissionFormOptionFragment-${qnNum}\"]`).addClass('padding-left-55px');\n                    $(`[id^=\"constSumSubmissionFormOptionFragment-${qnNum}\"]`).addClass('margin-top-15px');\n                }\n            }\n        } else {\n            $(`[id^=\"constSumInputAlert-${qnNum}-\"]`).hide();\n        }\n    }\n}\n\n/**\n * Display instructions to be followed while distributing points\n * Instructions can also be seen as the constraints that\n * must be satisfied for arriving at a valid distribution\n * @param qnNum - question number\n */\nfunction updateConstSumQnInstructions(qnNum) {\n    let numOptions = 0;\n    let points = parseInt($(`#constSumPoints-${qnNum}`).val(), 10);\n\n    const numRecipients = parseInt($(`[name=\"questionresponsetotal-${qnNum}\"]`).val(), 10);\n\n    // Boolean value stating the type of CONSTSUM question (among recipients or options)\n    const distributeToRecipients = $(`#constSumToRecipients-${qnNum}`).val() === 'true';\n    /*\n     * Boolean value stating whether total points to be distributed\n     * is equal to the value of variable `points` or `points`x no. of options\n     */\n    const pointsPerOption = $(`#constSumPointsPerOption-${qnNum}`).val() === 'true';\n    /*\n     * Boolean value which is true when all recipients/options can not be given\n     * the same amount of points. This variable is being used mainly for backward compatibility\n     */\n    const forceUnevenDistribution = $(`#constSumUnevenDistribution-${qnNum}`).val() === 'true';\n\n    if (distributeToRecipients) {\n        numOptions = numRecipients;\n    } else {\n        numOptions = parseInt($(`#constSumNumOption-${qnNum}`).val(), 10);\n    }\n\n    if (pointsPerOption) {\n        points *= numOptions;\n    }\n\n    // Specifies whether points need to be distributed unevenly among recipients/options\n    const constSumDistributePointsOptionSelected = $(`#constSumDistributePointsOptions-${qnNum}`).val();\n    // Specifies whether all recipients/options should be allocated different points\n    const forceAllUnevenDistribution = constSumDistributePointsOptionSelected\n            === ParamsNames.FEEDBACK_QUESTION_CONSTSUMALLUNEVENDISTRIBUTION;\n    // Specifies whether at least one allocation must differ from the rest\n    const forceSomeUnevenDistribution = constSumDistributePointsOptionSelected\n            === ParamsNames.FEEDBACK_QUESTION_CONSTSUMSOMEUNEVENDISTRIBUTION;\n\n    const instructionElement = $(`#constSumInstruction-${qnNum}`);\n    let instruction = '';\n    const infoIcon = '<span class=\"glyphicon glyphicon-info-sign padding-right-10px\"></span>';\n\n    instruction += `${infoIcon} Total points distributed should add up to ${points}.<br>`;\n\n    if (forceSomeUnevenDistribution) {\n        instruction += `${infoIcon} At least one ${distributeToRecipients ? 'recipient' : 'option'} `\n                + 'should be allocated different number of points.<br>';\n    } else if (forceUnevenDistribution || forceAllUnevenDistribution) {\n        /*\n         * All points need to be different. forceUnevenDistribution is used to check the same for older versions which\n         * did not contain the feature \"some receive different points\". In such versions forceUnevenDistribution will\n         * be true for questions where \"all receive different points\" is selected.\n         */\n        instruction += `${infoIcon} Every ${distributeToRecipients ? 'recipient' : 'option'} `\n                + 'should be allocated different number of points.<br>';\n    }\n    instructionElement.html(instruction);\n}\n\nfunction updateConstSumQnMessages(qnNum) {\n    let numOptions = 0;\n    let points = parseInt($(`#constSumPoints-${qnNum}`).val(), 10);\n\n    // For explanations on the following variables refer to `updateConstSumQnInstructions`\n    const numRecipients = parseInt($(`[name=\"questionresponsetotal-${qnNum}\"]`).val(), 10);\n    const distributeToRecipients = $(`#constSumToRecipients-${qnNum}`).val() === 'true';\n    const pointsPerOption = $(`#constSumPointsPerOption-${qnNum}`).val() === 'true';\n    const forceUnevenDistribution = $(`#constSumUnevenDistribution-${qnNum}`).val() === 'true';\n\n    const constSumDistributePointsOptionSelected = $(`#constSumDistributePointsOptions-${qnNum}`).val();\n    const forceAllUnevenDistribution = constSumDistributePointsOptionSelected\n            === ParamsNames.FEEDBACK_QUESTION_CONSTSUMALLUNEVENDISTRIBUTION;\n    const forceSomeUnevenDistribution = constSumDistributePointsOptionSelected\n            === ParamsNames.FEEDBACK_QUESTION_CONSTSUMSOMEUNEVENDISTRIBUTION;\n\n    if (distributeToRecipients) {\n        numOptions = numRecipients;\n    } else {\n        numOptions = parseInt($(`#constSumNumOption-${qnNum}`).val(), 10);\n    }\n\n    if (pointsPerOption) {\n        points *= numOptions;\n    }\n\n    let sum = 0;\n    let remainingPoints = points;\n    let allUnique = true;\n    let allSame = true;\n    let allInputsEmpty = true;\n    let answerSet = {};\n    let repeatedPoints = [];\n\n    function fillWithZeroIfEmpty(inputFieldElement) {\n        if (Number.isNaN(parseInt(inputFieldElement.val(), 10))) {\n            inputFieldElement.val(0);\n        }\n    }\n    /*\n     * Checks current input provided by user\n     * and updates error/success messages based on constraints\n     */\n    function checkAndDisplayMessage(messageElement) {\n        let message = '';\n        const approvedIcon = '<span class=\"glyphicon glyphicon-ok padding-right-10px\"></span>';\n        const errorIcon = '<span class=\"glyphicon glyphicon-remove padding-right-10px\"></span>';\n\n        let allChecksPassed = true;\n\n        // Check if at least one input box is filled before displaying messages\n        if (!allInputsEmpty) {\n            if (remainingPoints === 0) {\n                message += `<span class='text-color-green'> ${approvedIcon} All points distributed!</span><br>`;\n                /*\n                 * Once all the points are distributed,\n                 * look for empty Input fields and fill them with 0.\n                 */\n                if (distributeToRecipients) {\n                    for (let i = 0; i < numRecipients; i += 1) {\n                        const $inputFieldElement = $(`#${FEEDBACK_RESPONSE_TEXT}-${qnNum}-${i}-0`);\n                        fillWithZeroIfEmpty($inputFieldElement);\n                    }\n                } else {\n                    const recipientIndex = parseInt(messageElement.selector[messageElement.selector.length - 1], 10);\n                    for (let k = 0; k < numOptions; k += 1) {\n                        const $inputFieldElement = $(`#${FEEDBACK_RESPONSE_TEXT}-${qnNum}-${recipientIndex}-${k}`);\n                        fillWithZeroIfEmpty($inputFieldElement);\n                    }\n                }\n            } else if (remainingPoints > 0) {\n                message += `<span class='text-color-red'> ${errorIcon} Actual total is ${sum}! Distribute the remaining `\n                        + `${remainingPoints} points.</span><br>`;\n                allChecksPassed = false;\n            } else {\n                message += `<span class='text-color-red'> ${errorIcon} Actual total is ${sum}! Remove the extra `\n                        + `${-remainingPoints} points allocated.</span><br>`;\n                allChecksPassed = false;\n            }\n\n            if (forceSomeUnevenDistribution) {\n                if (allSame && numOptions !== 1) {\n                    message += `<span class='text-color-red'> ${errorIcon} All `\n                            + `${distributeToRecipients ? 'recipients' : 'options'} `\n                            + `are given ${repeatedPoints[0]} points. Please allocate different points `\n                            + `to at least one ${distributeToRecipients ? 'recipient' : 'option'}.</span><br>`;\n                    allChecksPassed = false;\n                } else {\n                    message += `<span class='text-color-green'> ${approvedIcon} At least one `\n                            + `${distributeToRecipients ? 'recipient' : 'option'} `\n                            + 'has been allocated different number of points.</span><br>';\n                }\n            } else if (forceUnevenDistribution || forceAllUnevenDistribution) {\n                if (allUnique) {\n                    message += `<span class='text-color-green'> ${approvedIcon} `\n                            + 'All allocated points are different!</span><br>';\n                } else {\n                    message += `<span class='text-color-red'> ${errorIcon} Multiple `\n                            + `${distributeToRecipients ? 'recipients' : 'options'} `\n                            + `are given same points! eg. ${repeatedPoints[0]}.</span><br>`;\n                    allChecksPassed = false;\n                }\n            }\n        }\n\n        if (allChecksPassed) {\n            messageElement.addClass('text-color-green');\n            messageElement.removeClass('text-color-red');\n        } else {\n            messageElement.addClass('text-color-red');\n            messageElement.removeClass('text-color-green');\n        }\n        messageElement.html(message);\n    }\n    function updateSumBasedOn(ptsAllocatedParam) {\n        let pointsAllocated = ptsAllocatedParam;\n        if (isNumber(pointsAllocated)) {\n            allInputsEmpty = false;\n        } else {\n            pointsAllocated = 0;\n        }\n\n        sum += pointsAllocated;\n\n        if (pointsAllocated in answerSet) {\n            allUnique = false;\n            repeatedPoints.push(pointsAllocated);\n        } else if (Object.keys(answerSet).length !== 0) {\n            allSame = false;\n        }\n\n        answerSet[pointsAllocated] = true;\n    }\n\n    if (distributeToRecipients) {\n        const $constSumMessageElement = $(`#constSumMessage-${qnNum}-${numOptions - 1}`);\n\n        for (let i = 0; i < numOptions; i += 1) {\n            const pointsAllocated = parseInt($(`#${FEEDBACK_RESPONSE_TEXT}-${qnNum}-${i}-0`).val(), 10);\n\n            updateSumBasedOn(pointsAllocated);\n        }\n\n        remainingPoints = points - sum;\n\n        checkAndDisplayMessage($constSumMessageElement);\n    } else {\n        for (let j = 0; j < numRecipients; j += 1) {\n            sum = 0;\n            allInputsEmpty = true;\n            answerSet = {};\n            allUnique = true;\n            remainingPoints = points;\n            repeatedPoints = [];\n\n            const $constSumMessageElement = $(`#constSumMessage-${qnNum}-${j}`);\n\n            for (let k = 0; k < numOptions; k += 1) {\n                const ptsAllocated = parseInt($(`#${FEEDBACK_RESPONSE_TEXT}-${qnNum}-${j}-${k}`).val(), 10);\n\n                updateSumBasedOn(ptsAllocated);\n            }\n\n            remainingPoints = points - sum;\n\n            checkAndDisplayMessage($constSumMessageElement);\n        }\n    }\n}\n\nfunction updateConstSumMessages() {\n    const constSumQuestionNums = getQuestionTypeNumbers('CONSTSUM');\n\n    for (let i = 0; i < constSumQuestionNums.length; i += 1) {\n        const qnNum = constSumQuestionNums[i];\n        updateConstSumQnInstructions(qnNum);\n        updateConstSumQnMessages(qnNum);\n    }\n}\n\nfunction getMaxSelectableMsqChoices(qNum) {\n    const $input = $(`input[name=\"msqMaxSelectableChoices-${qNum}\"]`);\n    return $input.prop('disabled') ? Number.MAX_SAFE_INTEGER : $input.val();\n}\n\nfunction getMinSelectableMsqChoices(qNum) {\n    const $input = $(`input[name=\"msqMinSelectableChoices-${qNum}\"]`);\n    return $input.prop('disabled') ? 0 : $input.val();\n}\n\nfunction validateMsqQuestions() {\n    const msqQuestionNums = getQuestionTypeNumbers('MSQ');\n\n    // validate min/max selectable choices restrictions\n    for (let i = 0; i < msqQuestionNums.length; i += 1) {\n        const qNum = msqQuestionNums[i];\n        let recipientIndex = 0;\n        const maxSelectableChoices = getMaxSelectableMsqChoices(qNum);\n        const minSelectableChoices = getMinSelectableMsqChoices(qNum);\n\n        while ($(`input[name=\"responsetext-${qNum}-${recipientIndex}\"]`).length !== 0) {\n            const numOfSelectedChoices = $(`input[name=\"responsetext-${qNum}-${recipientIndex}\"]:checked`).length;\n\n            if (numOfSelectedChoices === 0) {\n                // student is allowed to skip/ignore question\n                recipientIndex += 1;\n                continue;\n            }\n\n            if (numOfSelectedChoices < minSelectableChoices) {\n                setStatusMessage(`Minimum selectable choices for question ${qNum} is ${minSelectableChoices}.`,\n                        BootstrapContextualColors.DANGER);\n                return false;\n            }\n\n            if (numOfSelectedChoices > maxSelectableChoices) {\n                setStatusMessage(`Maximum selectable choices for question ${qNum} is ${maxSelectableChoices}.`,\n                        BootstrapContextualColors.DANGER);\n                return false;\n            }\n\n            recipientIndex += 1;\n        }\n    }\n\n    return true;\n}\n\nfunction validateConstSumQuestions() {\n    updateConstSumMessages();\n\n    // When any of the const sum questions has an error.\n    if ($('p[id^=\"constSumMessage-\"].text-color-red').length > 0) {\n        const constSumQuestionNums = getQuestionTypeNumbers('CONSTSUM');\n        let statusMessage = 'Please fix the error(s) for distribution question(s)';\n        let errorCount = 0;\n\n        for (let i = 0; i < constSumQuestionNums.length; i += 1) {\n            const qnNum = constSumQuestionNums[i];\n\n            // indicate the question number where the errors are located at\n            if ($(`p[id^=\"constSumMessage-${qnNum}-\"].text-color-red`).length > 0) {\n                statusMessage += errorCount === 0 ? '' : ',';\n                statusMessage += ' ';\n                statusMessage += qnNum;\n                errorCount += 1;\n            }\n        }\n\n        statusMessage += '. ';\n        statusMessage += 'To skip a distribution question, leave the boxes blank.';\n\n        setStatusMessage(statusMessage, BootstrapContextualColors.DANGER);\n        return false;\n    }\n\n    return true;\n}\n\n/**\n * Removes already selected options for recipients from other select dropdowns within the same question.\n * Binds further changes to show/hide options such that duplicates cannot be selected.\n */\nfunction formatRecipientLists() {\n    $('select.participantSelect').each(function () {\n        const $self = $(this);\n        if (!$self.hasClass('.newResponse')) {\n            // Remove options from existing responses\n            const questionNumber = $self.attr('name').split('-')[1];\n            let selectedOption = $self.find('option:selected').val();\n\n            if (selectedOption !== '') {\n                selectedOption = sanitizeForJs(selectedOption);\n                $(`select[name|=${FEEDBACK_RESPONSE_RECIPIENT}-${questionNumber}]`)\n                        .not(this)\n                        // leave this in double quotes and single within, will fail otherwise\n                        .find(`option[value='${selectedOption}']`)\n                        .hide();\n            }\n        }\n\n        // Save initial data.\n        $self.data('previouslySelected', $(this).val());\n    }).change(function () {\n        const $self = $(this);\n        const questionNumber = $self.attr('name').split('-')[1];\n        const lastSelectedOption = $self.data('previouslySelected');\n        let curSelectedOption = $self.find('option:selected').val();\n\n        if (lastSelectedOption !== '') {\n            $(`select[name|=${FEEDBACK_RESPONSE_RECIPIENT}-${questionNumber}]`)\n                    .not(this)\n                    // leave this in double quotes and single within, will fail otherwise\n                    .find(`option[value='${lastSelectedOption}']`)\n                    .show();\n        }\n\n        if (curSelectedOption !== '') {\n            curSelectedOption = sanitizeForJs(curSelectedOption);\n            $(`select[name|=${FEEDBACK_RESPONSE_RECIPIENT}-${questionNumber}]`)\n                    .not(this)\n                    // leave this in double quotes and single within, will fail otherwise\n                    .find(`option[value='${curSelectedOption}']`)\n                    .hide();\n        }\n\n        // Save new data\n        $self.data('previouslySelected', $self.val());\n    });\n\n    // Auto-select first valid option.\n    $('select.participantSelect.newResponse').each(function () {\n        let firstUnhidden = '';\n\n        // select the first valid recipient if the dropdown is hidden from the user,\n        // otherwise, leave it as \"\"\n        if (this.style.display === 'none') {\n            $($(this).children().get().reverse()).each(function () {\n                if (this.style.display !== 'none' && $(this).val() !== '') {\n                    firstUnhidden = this;\n                }\n            });\n        }\n\n        $(this).val($(firstUnhidden).val()).change();\n    });\n}\n\nfunction reenableFieldsForSubmission() {\n    $(':disabled').prop('disabled', false);\n}\n\nfunction validateNumScaleAnswer(qnIdx, responseIdx) {\n    const $answerBox = $(`[name=responsetext-${qnIdx}-${responseIdx}]`);\n    const min = parseInt($answerBox.attr('min'), 10);\n    const max = parseInt($answerBox.attr('max'), 10);\n    const answer = parseInt($answerBox.val(), 10);\n\n    if (answer < min) {\n        $answerBox.val($answerBox.attr('min'));\n    } else if (answer > max) {\n        $answerBox.val($answerBox.attr('max'));\n    }\n}\n\nfunction isAnswerBlank(question, response) {\n    const $answer = $(`[name=responsetext-${question}-${response}]`);\n\n    if ($answer.attr('type') === 'radio' || $answer.attr('type') === 'checkbox') {\n        // for question types that involve checking boxes such as MSQ, MCQ\n        return !$answer.is(':checked');\n    }\n    return $answer.val().trim() === '';\n}\n\n// Checks that there are no responses written to an unspecified recipient\nfunction validateAllAnswersHaveRecipient() {\n    const blankRecipients = $('select[name^=\"responserecipient-\"]').filter(function () {\n        return $(this).val() === '';\n    });\n\n    let isAllAnswersToMissingRecipientEmpty = true;\n    let statusMessage = FEEDBACK_MISSING_RECIPIENT;\n    let errorCount = 0;\n\n    // for every response without a recipient, check that the response is empty\n    for (let i = 0; i < blankRecipients.length; i += 1) {\n        const recipient = blankRecipients[i];\n\n        const question = $(recipient).attr('name').split('-')[1];\n        const response = $(recipient).attr('name').split('-')[2];\n\n        if (!isAnswerBlank(question, response)) {\n            statusMessage += errorCount === 0 ? '' : ',';\n            statusMessage += ' ';\n            statusMessage += question;\n            errorCount += 1;\n\n            isAllAnswersToMissingRecipientEmpty = false;\n        }\n    }\n\n    if (!isAllAnswersToMissingRecipientEmpty) {\n        setStatusMessage(`${statusMessage}.`, BootstrapContextualColors.DANGER);\n    }\n\n    return isAllAnswersToMissingRecipientEmpty;\n}\n\nfunction isMinOptionsToBeRankedEnabled(qnNum) {\n    return !$(`#minOptionsToBeRanked-${qnNum}`).prop('disabled');\n}\n\nfunction isMaxOptionsToBeRankedEnabled(qnNum) {\n    return !$(`#maxOptionsToBeRanked-${qnNum}`).prop('disabled');\n}\n\nfunction getMinOptionsToBeRanked(qnNum) {\n    if (isMinOptionsToBeRankedEnabled(qnNum)) {\n        return parseInt($(`#minOptionsToBeRanked-${qnNum}`).val(), 10);\n    }\n\n    return Number.MAX_SAFE_INTEGER;\n}\n\nfunction getMaxOptionsToBeRanked(qnNum) {\n    if (isMaxOptionsToBeRankedEnabled(qnNum)) {\n        return parseInt($(`#maxOptionsToBeRanked-${qnNum}`).val(), 10);\n    }\n\n    return Number.MAX_SAFE_INTEGER;\n}\n\nfunction updateRankMessageQn(qnNum) {\n    const isDistributingToRecipients = $(`#rankToRecipients-${qnNum}`).val() === 'true';\n    const areDuplicateRanksAllowed = $(`#rankAreDuplicatesAllowed-${qnNum}`).val() === 'true';\n    const numRecipients = parseInt($(`[name=\"questionresponsetotal-${qnNum}\"]`).val(), 10);\n\n    const numOptions = isDistributingToRecipients ? numRecipients\n            : parseInt($(`#rankNumOptions-${qnNum}`).val(), 10);\n\n    let areAllAnswersUnique;\n    let allocatedRanks;\n    let isAllOptionsRanked;\n    let isMinOptionsToBeRankedViolated;\n    let isMaxOptionsToBeRankedViolated;\n    let isMinOrMaxOptionsToBeRankedEnabled;\n\n    function resetState() {\n        allocatedRanks = {};\n        areAllAnswersUnique = true;\n        isAllOptionsRanked = true;\n        isMinOptionsToBeRankedViolated = false;\n        isMaxOptionsToBeRankedViolated = false;\n        isMinOrMaxOptionsToBeRankedEnabled = false;\n    }\n\n    function checkMinMaxRestrictions(questionNumber, recipientIndex) {\n        const selector = $(`#rankToRecipients-${questionNumber}`).val() === 'true'\n                ? `select[name^=\"responsetext-${questionNumber}-\"]`\n                : `select[name=\"responsetext-${questionNumber}-${recipientIndex}\"]`;\n        const rankedOptions = $(selector).filter(function () { return $(this).val() !== ''; }).length;\n\n        if (rankedOptions === 0) {\n            return;\n        }\n\n        if (isMinOptionsToBeRankedEnabled(qnNum)) {\n            isMinOrMaxOptionsToBeRankedEnabled = true;\n            const min = getMinOptionsToBeRanked(qnNum);\n\n            if (rankedOptions < min) {\n                isMinOptionsToBeRankedViolated = true;\n            }\n        }\n\n        if (isMaxOptionsToBeRankedEnabled(qnNum)) {\n            isMinOrMaxOptionsToBeRankedEnabled = true;\n            const max = getMaxOptionsToBeRanked(qnNum);\n\n            if (max < rankedOptions) {\n                isMaxOptionsToBeRankedViolated = true;\n            }\n        }\n    }\n\n    function updateRankMessagesInUpdatingRankMessageQn($messageElement) {\n        $messageElement.removeClass('text-color-red text-color-green text-color-blue');\n\n        let message = '';\n\n        if (!areDuplicateRanksAllowed && !areAllAnswersUnique) {\n            message += ' The same rank should not be given multiple times. ';\n            $messageElement.addClass('text-color-red');\n        } else if (isMinOptionsToBeRankedViolated) {\n            const min = getMinOptionsToBeRanked(qnNum);\n\n            message += ` You need to rank at least ${min} ${isDistributingToRecipients ? 'recipients. ' : 'options. '}`;\n            $messageElement.addClass('text-color-red');\n        } else if (isMaxOptionsToBeRankedViolated) {\n            const max = getMaxOptionsToBeRanked(qnNum);\n\n            message += ` Rank no more than ${max} ${isDistributingToRecipients ? 'recipients. ' : 'options. '}`;\n            $messageElement.addClass('text-color-red');\n        } else if (!isAllOptionsRanked && !isMinOrMaxOptionsToBeRankedEnabled) {\n            message = `Please rank the above ${isDistributingToRecipients ? 'recipients' : 'options'}. `;\n            $messageElement.addClass('text-color-blue');\n        }\n\n        $messageElement.text(message);\n        if (message === '') {\n            $messageElement.parent().find('hr').hide();\n        } else {\n            $messageElement.parent().find('hr').show();\n        }\n    }\n\n    function updateAllocatedRanks(rankAllocated) {\n        if (!isNumber(rankAllocated)) {\n            isAllOptionsRanked = false;\n            return;\n        }\n        if (rankAllocated in allocatedRanks) {\n            areAllAnswersUnique = false;\n        }\n\n        allocatedRanks[rankAllocated] = true;\n    }\n\n    function updateDropdownOptions(questionNumber, recipientIndex) {\n        const dropdownSelect = $(`select[id^=\"responsetext-${questionNumber}-${recipientIndex}-\"]`);\n\n        dropdownSelect.find('option').each(function () {\n            if ($(this).val() in allocatedRanks) {\n                $(this).addClass('color-neutral');\n            } else {\n                $(this).removeClass('color-neutral');\n            }\n        });\n\n        checkMinMaxRestrictions(questionNumber, recipientIndex);\n    }\n\n    if (isDistributingToRecipients) {\n        // for Rank Recipients question\n        resetState();\n\n        const $rankMessageElement = $(`#rankMessage-${qnNum}-${numOptions - 1}`);\n\n        for (let i = 0; i < numOptions; i += 1) {\n            const rankAllocated = parseInt($(`#${FEEDBACK_RESPONSE_TEXT}-${qnNum}-${i}-0`).val(), 10);\n            updateAllocatedRanks(rankAllocated);\n        }\n        for (let j = 0; j < numOptions; j += 1) {\n            updateDropdownOptions(qnNum, j);\n        }\n\n        updateRankMessagesInUpdatingRankMessageQn($rankMessageElement);\n    } else {\n        // for Rank options question\n        for (let i1 = 0; i1 < numRecipients; i1 += 1) {\n            resetState();\n\n            const $rankMsgElement = $(`#rankMessage-${qnNum}-${i1}`);\n\n            for (let j1 = 0; j1 < numOptions; j1 += 1) {\n                const rankAlloc = parseInt($(`#${FEEDBACK_RESPONSE_TEXT}-${qnNum}-${i1}-${j1}`).val(), 10);\n                updateAllocatedRanks(rankAlloc);\n            }\n\n            updateDropdownOptions(qnNum, i1);\n            updateRankMessagesInUpdatingRankMessageQn($rankMsgElement);\n        }\n    }\n}\n\nfunction updateRankMessages() {\n    const rankQuestionNums = getQuestionTypeNumbers('RANK_OPTIONS').concat(getQuestionTypeNumbers('RANK_RECIPIENTS'));\n\n    for (let i = 0; i < rankQuestionNums.length; i += 1) {\n        const qnNum = rankQuestionNums[i];\n        updateRankMessageQn(qnNum);\n    }\n}\n\nfunction prepareRankQuestions() {\n    const rankQuestionNums = getQuestionTypeNumbers('RANK_OPTIONS').concat(getQuestionTypeNumbers('RANK_RECIPIENTS'));\n\n    for (let i = 0; i < rankQuestionNums.length; i += 1) {\n        const qnNum = rankQuestionNums[i];\n\n        const isRankingRecipients = $(`#rankToRecipients-${qnNum}`).val() === 'true';\n\n        if (!$('#response_submit_button').is(':disabled')\n            || isPreview()) {\n            if (isRankingRecipients) {\n                let numResponses = $(`[name=\"questionresponsetotal-${qnNum}\"]`).val();\n                numResponses = parseInt(numResponses, 10);\n\n                $(`#rankInfo-${qnNum}-${numResponses - 1}`).show();\n            }\n        } else {\n            $(`[id^=\"rankInfo-${qnNum}-\"]`).hide();\n        }\n    }\n    updateRankMessages();\n}\n\nfunction validateRankQuestions() {\n    updateRankMessages();\n\n    // if any of the rank questions has an error.\n    if ($('p[id^=\"rankMessage-\"].text-color-red').length > 0) {\n        const rankQuestionNums = getQuestionTypeNumbers('RANK_OPTIONS').concat(getQuestionTypeNumbers('RANK_RECIPIENTS'));\n        let statusMessage = 'Please fix the error(s) for rank question(s)';\n        let errorCount = 0;\n\n        for (let i = 0; i < rankQuestionNums.length; i += 1) {\n            const qnNum = rankQuestionNums[i];\n\n            // indicate the question number where the errors are located at\n            if ($(`p[id^=\"rankMessage-${qnNum}-\"].text-color-red`).length > 0) {\n                statusMessage += errorCount === 0 ? '' : ',';\n                statusMessage += ' ';\n                statusMessage += qnNum;\n                errorCount += 1;\n            }\n        }\n\n        statusMessage += '. ';\n        statusMessage += 'To skip a rank question, leave all the boxes blank.';\n\n        setStatusMessage(statusMessage, BootstrapContextualColors.DANGER);\n        return false;\n    }\n\n    return true;\n}\n\nfunction hasWarningMessage() {\n    return $(WARNING_STATUS_MESSAGE).length;\n}\n\nfunction isSessionClosingSoon() {\n    const endTimeData = $(END_TIME).data('end-time');\n    if (!endTimeData) {\n        return false;\n    }\n    const endDate = new Date(endTimeData);\n    const currentDate = new Date();\n    const remainingTime = endDate - currentDate;\n    return remainingTime <= MS_IN_FIFTEEN_MINUTES && remainingTime > 0;\n}\n\nfunction getWarningMessage() {\n    return $(WARNING_STATUS_MESSAGE).html().trim();\n}\n\nfunction hasSuccessMessage() {\n    return $(SUCCESS_STATUS_MESSAGE).length;\n}\n\nfunction getSuccessMessage() {\n    return $(SUCCESS_STATUS_MESSAGE).html().trim();\n}\n\nfunction hasUnansweredQuestionMessage() {\n    return $(INFO_STATUS_MESSAGE).length;\n}\n\nfunction getUnansweredQuestionMessage() {\n    if (!hasUnansweredQuestionMessage()) {\n        return '';\n    }\n    return $(INFO_STATUS_MESSAGE).html().trim();\n}\n\nfunction showModalWarningIfSessionClosed() {\n    if (hasWarningMessage()) {\n        showModalAlert(SESSION_NOT_OPEN, getWarningMessage(), null, BootstrapContextualColors.WARNING);\n    }\n}\n\nfunction showModalWarningIfSessionClosingSoon() {\n    if (isSessionClosingSoon()) {\n        showModalAlert(SESSION_CLOSING_HEADER, SESSION_CLOSING_MESSAGE, null, BootstrapContextualColors.WARNING);\n    }\n}\n\nfunction showModalSuccessIfResponsesSubmitted() {\n    const enlargedImportantIcon = '<span class=\"unanswered-exclamation-mark\"> &#10071; </span>';\n    const unansweredMessage = '<p class=\"unanswered-message\">'.concat(enlargedImportantIcon).concat('<span>')\n            .concat(getUnansweredQuestionMessage()).concat('</span></p>');\n\n    if (hasSuccessMessage()) {\n        showModalAlert(getSuccessMessage(),\n                (hasUnansweredQuestionMessage() ? unansweredMessage : '') + RESPONSES_SUCCESSFULLY_SUBMITTED,\n                null, BootstrapContextualColors.SUCCESS);\n    }\n}\n/**\n * Updates the length of the textArea\n * @param textAreaId - Id of text area for which char are to be counted\n * @param wordsCountId - Id of Label to display length of text area\n */\nfunction updateTextQuestionWordsCount(textAreaId, wordsCountId, recommendedLength) {\n    const editor = tinymce.get(textAreaId);\n    if (!editor) {\n        return;\n    }\n\n    const response = $(editor.getContent()).text();\n    const $wordsCountElement = $(`#${wordsCountId}`);\n\n    const wordsCount = response.split(/\\s/g).filter(item => item.match(/\\w/)).length;\n\n    $wordsCountElement.text(wordsCount);\n\n    const upperLimit = recommendedLength + recommendedLength * 0.1;\n    const lowerLimit = recommendedLength - recommendedLength * 0.1;\n\n    if (wordsCount > lowerLimit && wordsCount < upperLimit) {\n        $wordsCountElement.css('color', 'green');\n    } else {\n        $wordsCountElement.css('color', 'gray');\n    }\n}\n\n$(document).ready(() => {\n    const textFields = $('div[id^=\"responsetext-\"]');\n\n    if (typeof richTextEditorBuilder !== 'undefined') {\n        $.each(textFields, (i, textField) => {\n            const id = $(textField).attr('id');\n            const isSessionOpenData = $(textField).data('isSessionOpen');\n            const isSessionOpen = typeof isSessionOpenData === 'boolean' ? isSessionOpenData : true;\n\n            /* eslint-disable camelcase */ // The property names are determined by external library (tinymce)\n            richTextEditorBuilder.initEditor(`#${id}`, {\n                inline: true,\n                readonly: !isSessionOpen,\n                setup(ed) {\n                    ed.on('keyup', function () {\n                        updateTextQuestionWordsCount(id, $(textField).data('lengthTextId'), $(this).data('recommendedText'));\n                    });\n                    ed.on('keydown', function () {\n                        updateTextQuestionWordsCount(id, $(textField).data('lengthTextId'), $(this).data('recommendedText'));\n                    });\n                    ed.on('init', function () {\n                        updateTextQuestionWordsCount(id, $(textField).data('lengthTextId'), $(this).data('recommendedText'));\n                    });\n                    ed.on('change', function () {\n                        updateTextQuestionWordsCount(id, $(textField).data('lengthTextId'), $(this).data('recommendedText'));\n                    });\n                },\n            });\n            /* eslint-enable camelcase */\n        });\n    }\n\n    $('form[name=\"form_submit_response\"]').submit((e) => {\n        formatRubricQuestions();\n\n        const validationStatus = validateConstSumQuestions()\n                                 && validateRankQuestions()\n                                 && validateAllAnswersHaveRecipient()\n                                 && validateMsqQuestions();\n\n        updateMcqOtherOptionField();\n        updateMsqOtherOptionField();\n\n        if (validationStatus) {\n            reenableFieldsForSubmission(); // only enabled inputs will appear in the post data\n\n            // disable button to prevent user from clicking submission button again\n            const $submissionButton = $('#response_submit_button');\n            addLoadingIndicator($submissionButton, 'Submitting ');\n        } else {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    });\n\n    formatRecipientLists();\n\n    // Replace hidden dropdowns with text\n    $('select.participantSelect:hidden').each(function () {\n        $(this).after(`<span>${$(this).find('option:selected').html()}</span>`);\n    });\n\n    $(\"input[type='radio']\").change(function () {\n        const idOfOtherOptionText = `otherOptionText${$(this).attr('name').substr($(this).attr('name').search('-'))}`;\n        const idOfOtherOptionFlag = `otherOptionFlag${$(this).attr('name').substr($(this).attr('name').search('-'))}`;\n\n        if ($(this).data('text') === 'otherOptionText') {\n            // Other option is selected by the student\n            $(`#${idOfOtherOptionText}`).prop('disabled', false);\n            $(`#${idOfOtherOptionFlag}`).val('1');\n        } else {\n            // Any option except the other option is selected\n            $(`#${idOfOtherOptionText}`).prop('disabled', true);\n            $(`#${idOfOtherOptionFlag}`).val('0');\n        }\n    });\n\n    $(\"input[id^='otherOptionText']\").keyup(function () {\n        const idOfOtherOptionRadioButton = $(this).attr('id').replace('Text', '');\n        $(`#${idOfOtherOptionRadioButton}`).val($(this).val());\n    });\n\n    disallowNonNumericEntries($('input[type=number]'), true, true);\n\n    $('input.pointsBox').off('keydown');\n\n    disallowNonNumericEntries($('input.pointsBox'), false, false);\n\n    prepareContribQuestions();\n\n    prepareMSQQuestions();\n\n    prepareConstSumQuestions();\n\n    updateConstSumMessages();\n\n    prepareRubricQuestions();\n\n    prepareMCQQuestions();\n\n    prepareRankQuestions();\n\n    focusModeratedQuestion();\n\n    bindModerationHintButton();\n\n    showModalWarningIfSessionClosed();\n\n    showModalWarningIfSessionClosingSoon();\n\n    showModalSuccessIfResponsesSubmitted();\n\n    bindLinksInUnregisteredPage('[data-unreg].navLinks');\n});\n\nwindow.validateNumScaleAnswer = validateNumScaleAnswer;\nwindow.updateConstSumQnMessages = updateConstSumQnMessages;\nwindow.updateRankMessageQn = updateRankMessageQn;\n"],"sourceRoot":""}