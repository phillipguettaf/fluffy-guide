{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main/webapp/dev/js/common/const.js","webpack:///./src/main/webapp/dev/js/common/helper.js","webpack:///./src/main/webapp/dev/js/common/assert.js","webpack:///./src/main/webapp/dev/js/main/adminHome.js","webpack:///./src/main/webapp/dev/js/common/sortBy.js","webpack:///./src/main/webapp/dev/js/common/sanitizer.js","webpack:///./src/main/webapp/dev/js/common/crypto.js","webpack:///./src/main/webapp/dev/js/common/onStart.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","BootstrapContextualColors","SUCCESS","INFO","WARNING","DANGER","PRIMARY","isValidType","type","DEFAULT","Const","ModalDialog","UNREGISTERED_STUDENT","header","text","StatusMessages","INSTRUCTOR_DETAILS_LENGTH_INVALID","ParamsNames","SESSION_TOKEN","COPIED_FEEDBACK_SESSION_NAME","COURSE_ID","COURSE_NAME","COURSE_TIME_ZONE","FEEDBACK_SESSION_NAME","FEEDBACK_SESSION_STARTDATE","FEEDBACK_SESSION_STARTTIME","FEEDBACK_SESSION_VISIBLEDATE","FEEDBACK_SESSION_VISIBLETIME","FEEDBACK_SESSION_PUBLISHDATE","FEEDBACK_SESSION_PUBLISHTIME","FEEDBACK_SESSION_TIMEZONE","FEEDBACK_SESSION_SESSIONVISIBLEBUTTON","FEEDBACK_SESSION_RESULTSVISIBLEBUTTON","FEEDBACK_SESSION_ENABLE_EDIT","FEEDBACK_QUESTION_TEXT","FEEDBACK_QUESTION_DESCRIPTION","FEEDBACK_QUESTION_TYPE","FEEDBACK_QUESTION_NUMBEROFCHOICECREATED","FEEDBACK_QUESTION_MCQCHOICE","FEEDBACK_QUESTION_MCQ_WEIGHT","FEEDBACK_QUESTION_MSQCHOICE","FEEDBACK_QUESTION_CONSTSUMOPTION","FEEDBACK_QUESTION_CONSTSUMTORECIPIENTS","FEEDBACK_QUESTION_CONSTSUMPOINTS","FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHOPTION","FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHRECIPIENT","FEEDBACK_QUESTION_CONSTSUMALLUNEVENDISTRIBUTION","FEEDBACK_QUESTION_CONSTSUMSOMEUNEVENDISTRIBUTION","FEEDBACK_QUESTION_CONSTSUMNOUNEVENDISTRIBUTION","FEEDBACK_QUESTION_RECIPIENTTYPE","FEEDBACK_QUESTION_NUMBEROFENTITIESTYPE","FEEDBACK_QUESTION_EDITTEXT","FEEDBACK_QUESTION_DISCARDCHANGES","FEEDBACK_QUESTION_EDITTYPE","FEEDBACK_QUESTION_SAVECHANGESTEXT","FEEDBACK_QUESTION_SHOWRESPONSESTO","FEEDBACK_QUESTION_SHOWGIVERTO","FEEDBACK_QUESTION_SHOWRECIPIENTTO","FEEDBACK_QUESTION_NUMSCALE_MIN","FEEDBACK_QUESTION_NUMSCALE_MAX","FEEDBACK_QUESTION_NUMSCALE_STEP","FEEDBACK_QUESTION_RANKOPTION","FEEDBACK_QUESTION_RANKTORECIPIENTS","FEEDBACK_QUESTION_NUMBER","FEEDBACK_QUESTION_NUMBER_STATIC","FEEDBACK_QUESTION_RANK_IS_MIN_OPTIONS_TO_BE_RANKED_ENABLED","FEEDBACK_QUESTION_RANK_IS_MAX_OPTIONS_TO_BE_RANKED_ENABLED","FEEDBACK_QUESTION_RANK_MIN_OPTIONS_TO_BE_RANKED","FEEDBACK_QUESTION_RANK_MAX_OPTIONS_TO_BE_RANKED","FEEDBACK_QUESTION_RANK_IS_MIN_RECIPIENTS_TO_BE_RANKED_ENABLED","FEEDBACK_QUESTION_RANK_IS_MAX_RECIPIENTS_TO_BE_RANKED_ENABLED","FEEDBACK_QUESTION_RANK_MIN_RECIPIENTS_TO_BE_RANKED","FEEDBACK_QUESTION_RANK_MAX_RECIPIENTS_TO_BE_RANKED","isDate","date","Number","isNaN","Date","parse","isNumber","num","isWithinView","element","rect","$","getBoundingClientRect","$viewport","window","top","left","right","width","bottom","height","extractIdSuffixFromId","_ref","arguments","length","undefined","idPrefix","id","RegExp","exec","AssertionFailedError","Error","assert","condition","message","assertDefined","expr","_const","_crypto","_sanitizer","_assert","InstructorAjaxResult","instructor","responseData","_classCallCheck","this","isError","isInstructorAddingResultForAjax","getErrorMessage","statusForAjax","InstructorError","originalString","Instructor","email","institution","param","instructorname","instructoremail","instructorinstitution","str","regexStringForSeparator","regexStringForFields","instructorMatchRegex","join","instructorData","match","multipleInstructorsString","split","map","trim","filter","singleInstructorString","createFromString","instructors","toString","createRowForResultTable","isSuccess","status","encodeHtmlString","disableAddInstructorForm","each","html","prop","updateInstructorAddStatus","ajaxResult","numInstructors","numInstructorsProcessed","rowText","instructorName","instructorEmail","instructorInstitution","isAddFailed","getStatusMessage","append","panelHeader","addInstructors","postProcess","ajaxResults","addInstructorsHelper","firstInstructor","remainingInstructors","slice","parseErrorResult","push","ajax","url","makeCsrfTokenParam","getParamString","beforeSend","error","ajaxErrorResult","success","data","document","ready","on","$instructorsAddTextArea","allFromString","val","show","failedInstructors","allToString","addInstructorFromFirstFormByAjax","_helper","isDefined","varToCheck","getPointValue","ditchZero","s0","indexOf","replace","parseFloat","Comparators","x","y","x0","y0","a","b","a0","b0","sortNum","sortBase","columnType","sortDate","Extractors","$tableCell","find","attr","textExtractor","TableButtonHelpers","$button","parents","idx","parent","children","index","$table","removeClass","addClass","clearAllSortStates","getEnclosingTable","toggleSort","comparatorStringOrNull","extractorStringOrNull","shouldSortAscending","hasClass","colIdx","comparatorOrNull","extractorOrNull","store","$rowList","cells","extractor","getDefaultExtractor","textToCompare","comparator","getDefaultComparator","sort","compareResult","toUpperCase","$tbody","size","j","appendChild","sortTable","getColumnPositionOfButton","setButtonToSortedAscending","setButtonToSortedDescending","replaceAll","string","escapeRegExp","stringToEncode","sanitizeForJs","rawString","getCookie","cookieNameToFind","cookies","cookie","cookieName","cookieValue","updateCsrfTokenInInputFields","updatedToken","_sortBy","String","includes","search","startParam","start","e","currentTarget","$tooltips","tooltip","container","DocumentTouch","submit"],"mappings":"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","file":"adminHome.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 106);\n","/**\n * Contains constants to be used across the application.\n */\n\n// Frontend only constants\nconst Const = {\n    ModalDialog: {\n        UNREGISTERED_STUDENT: {\n            header: 'Register for TEAMMATES',\n            text: 'You have to register using a google account in order to access this page. '\n                  + 'Would you like to proceed and register?',\n        },\n    },\n    StatusMessages: {\n        INSTRUCTOR_DETAILS_LENGTH_INVALID: 'Instructor Details must have 3 columns',\n    },\n};\n\n// Shared constants between frontend and backend\n\n/**\n * Subset of Bootstrap contextual colors for use in status messages and components of modals.\n * @enum {BootstrapContextualColors}\n */\nconst BootstrapContextualColors = {\n    // Mirrored colors from StatusMessageColor\n    SUCCESS: 'success',\n    INFO: 'info',\n    WARNING: 'warning',\n    DANGER: 'danger',\n    // Additional contextual colors that can be used in the components of modals\n    PRIMARY: 'primary',\n    isValidType(type) {\n        return type === BootstrapContextualColors.SUCCESS || type === BootstrapContextualColors.INFO\n                || type === BootstrapContextualColors.PRIMARY || type === BootstrapContextualColors.WARNING\n                || type === BootstrapContextualColors.DANGER;\n    },\n};\nBootstrapContextualColors.DEFAULT = BootstrapContextualColors.INFO;\n\n// Mirrored subset of Const#ParamsNames\nconst ParamsNames = {\n    SESSION_TOKEN: 'token',\n    COPIED_FEEDBACK_SESSION_NAME: 'copiedfsname',\n\n    COURSE_ID: 'courseid',\n    COURSE_NAME: 'coursename',\n    COURSE_TIME_ZONE: 'coursetimezone',\n\n    FEEDBACK_SESSION_NAME: 'fsname',\n    FEEDBACK_SESSION_STARTDATE: 'startdate',\n    FEEDBACK_SESSION_STARTTIME: 'starttime',\n    FEEDBACK_SESSION_VISIBLEDATE: 'visibledate',\n    FEEDBACK_SESSION_VISIBLETIME: 'visibletime',\n    FEEDBACK_SESSION_PUBLISHDATE: 'publishdate',\n    FEEDBACK_SESSION_PUBLISHTIME: 'publishtime',\n    FEEDBACK_SESSION_TIMEZONE: 'timezone',\n    FEEDBACK_SESSION_SESSIONVISIBLEBUTTON: 'sessionVisibleFromButton',\n    FEEDBACK_SESSION_RESULTSVISIBLEBUTTON: 'resultsVisibleFromButton',\n    FEEDBACK_SESSION_ENABLE_EDIT: 'editsessiondetails',\n\n    FEEDBACK_QUESTION_TEXT: 'questiontext',\n    FEEDBACK_QUESTION_DESCRIPTION: 'questiondescription',\n    FEEDBACK_QUESTION_TYPE: 'questiontype',\n    FEEDBACK_QUESTION_NUMBEROFCHOICECREATED: 'noofchoicecreated',\n    FEEDBACK_QUESTION_MCQCHOICE: 'mcqOption',\n    FEEDBACK_QUESTION_MCQ_WEIGHT: 'mcqWeight',\n    FEEDBACK_QUESTION_MSQCHOICE: 'msqOption',\n    FEEDBACK_QUESTION_CONSTSUMOPTION: 'constSumOption',\n    FEEDBACK_QUESTION_CONSTSUMTORECIPIENTS: 'constSumToRecipients',\n    FEEDBACK_QUESTION_CONSTSUMPOINTS: 'constSumPoints',\n    FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHOPTION: 'constSumPointsForEachOption',\n    FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHRECIPIENT: 'constSumPointsForEachRecipient',\n    FEEDBACK_QUESTION_CONSTSUMALLUNEVENDISTRIBUTION: 'All options',\n    FEEDBACK_QUESTION_CONSTSUMSOMEUNEVENDISTRIBUTION: 'At least some options',\n    FEEDBACK_QUESTION_CONSTSUMNOUNEVENDISTRIBUTION: 'None',\n    FEEDBACK_QUESTION_RECIPIENTTYPE: 'recipienttype',\n    FEEDBACK_QUESTION_NUMBEROFENTITIESTYPE: 'numofrecipientstype',\n    FEEDBACK_QUESTION_EDITTEXT: 'questionedittext',\n    FEEDBACK_QUESTION_DISCARDCHANGES: 'questiondiscardchanges',\n    FEEDBACK_QUESTION_EDITTYPE: 'questionedittype',\n    FEEDBACK_QUESTION_SAVECHANGESTEXT: 'questionsavechangestext',\n    FEEDBACK_QUESTION_SHOWRESPONSESTO: 'showresponsesto',\n    FEEDBACK_QUESTION_SHOWGIVERTO: 'showgiverto',\n    FEEDBACK_QUESTION_SHOWRECIPIENTTO: 'showrecipientto',\n    FEEDBACK_QUESTION_NUMSCALE_MIN: 'numscalemin',\n    FEEDBACK_QUESTION_NUMSCALE_MAX: 'numscalemax',\n    FEEDBACK_QUESTION_NUMSCALE_STEP: 'numscalestep',\n    FEEDBACK_QUESTION_RANKOPTION: 'rankOption',\n    FEEDBACK_QUESTION_RANKTORECIPIENTS: 'rankToRecipients',\n    FEEDBACK_QUESTION_NUMBER: 'questionnum',\n    FEEDBACK_QUESTION_NUMBER_STATIC: 'questionnum-static',\n    FEEDBACK_QUESTION_RANK_IS_MIN_OPTIONS_TO_BE_RANKED_ENABLED: 'minOptionsToBeRankedEnabled',\n    FEEDBACK_QUESTION_RANK_IS_MAX_OPTIONS_TO_BE_RANKED_ENABLED: 'maxOptionsToBeRankedEnabled',\n    FEEDBACK_QUESTION_RANK_MIN_OPTIONS_TO_BE_RANKED: 'minOptionsToBeRanked',\n    FEEDBACK_QUESTION_RANK_MAX_OPTIONS_TO_BE_RANKED: 'maxOptionsToBeRanked',\n    FEEDBACK_QUESTION_RANK_IS_MIN_RECIPIENTS_TO_BE_RANKED_ENABLED: 'minRecipientsToBeRankedEnabled',\n    FEEDBACK_QUESTION_RANK_IS_MAX_RECIPIENTS_TO_BE_RANKED_ENABLED: 'maxRecipientsToBeRankedEnabled',\n    FEEDBACK_QUESTION_RANK_MIN_RECIPIENTS_TO_BE_RANKED: 'minRecipientsToBeRanked',\n    FEEDBACK_QUESTION_RANK_MAX_RECIPIENTS_TO_BE_RANKED: 'maxRecipientsToBeRanked',\n};\n\nexport {\n    Const,\n    ParamsNames,\n    BootstrapContextualColors,\n};\n","/**\n * Tests whether the passed object is an actual date\n * with an accepted format\n *\n * Allowed formats : http://dygraphs.com/date-formats.html\n *\n * TEAMMATES currently follows the RFC2822 / IETF date syntax\n * e.g. 02 Apr 2012, 23:59\n *\n * @param date\n * @returns boolean\n */\nfunction isDate(date) {\n    return !Number.isNaN(Date.parse(date));\n}\n\n/**\n* Function to test if param is a numerical value\n* @param num\n* @returns boolean\n*/\nfunction isNumber(num) {\n    return (typeof num === 'string' || typeof num === 'number') && !Number.isNaN(num - 0) && num !== '';\n}\n\n/**\n * Checks if element is within browser's viewport.\n * @return true if it is within the viewport, false otherwise\n * @see http://stackoverflow.com/q/123999\n */\nfunction isWithinView(element) {\n    const baseElement = $(element)[0]; // unwrap jquery element\n    const rect = baseElement.getBoundingClientRect();\n\n    const $viewport = $(window);\n\n    // makes the viewport size slightly larger to account for rounding errors\n    const tolerance = 0.25;\n    return (\n        rect.top >= 0 - tolerance // below the top of viewport\n        && rect.left >= 0 - tolerance // within the left of viewport\n        && rect.right <= $viewport.width() + tolerance // within the right of viewport\n        && rect.bottom <= $viewport.height() + tolerance // above the bottom of viewport\n    );\n}\n\n/**\n * Extracts the suffix that follows the prefix from the id. For example, commentDelete-1-1-0-1 => 1-1-0-1.\n * @param {Object} options required options\n * @param {string} options.idPrefix the prefix of the id\n * @param {string} options.id the id to extract from\n * @return {string} the suffix that uniquely identifies an element among elements with the same prefix\n */\nfunction extractIdSuffixFromId({ idPrefix, id } = {}) {\n    return new RegExp(`${idPrefix}-(.*)`).exec(id)[1];\n}\n\nexport {\n    isDate,\n    isNumber,\n    isWithinView,\n    extractIdSuffixFromId,\n};\n","class AssertionFailedError extends Error {\n}\n\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new AssertionFailedError(message || 'Assertion Failed');\n    }\n}\n\nfunction assertDefined(expr, message) {\n    assert(expr !== undefined && expr !== null, message);\n}\n\nexport {\n    AssertionFailedError,\n    assert,\n    assertDefined,\n};\n","import {\n    Const,\n} from '../common/const';\n\nimport {\n    makeCsrfTokenParam,\n} from '../common/crypto';\n\nimport {\n    encodeHtmlString,\n} from '../common/sanitizer';\n\nimport {\n    assertDefined,\n    assert,\n} from '../common/assert';\n\n/**\n * Represents the result of an AJAX request made to add an instructor.\n * Encapsulates the instructor for which an add was attempted and the AJAX response (responseData).\n * The instructor can be either an actual Instructor or an InstructorError (which may arise\n * from a parse error when Instructor.createFromString is used), but never null.\n * The responseData is null exactly when the instructor is an InstructorError.\n *\n */\nclass InstructorAjaxResult {\n    constructor(instructor, responseData) {\n        assertDefined(instructor,\n                'InstructorAjaxResult cannot be constructed without instructor being defined.');\n        assert(!instructor.isError() || responseData === null,\n                'Response data must be null if instantiating with an error.');\n        this.instructor = instructor;\n        this.responseData = responseData;\n    }\n\n    isError() {\n        return this.instructor.isError();\n    }\n\n    isAddFailed() {\n        return !this.isError() && !this.responseData.isInstructorAddingResultForAjax;\n    }\n\n    /**\n     * If The AJAX request never happened because the instructor itself is erroneous,\n     * return the error message encapsulated in the InstructorError.\n     * Otherwise, return the AJAX status message.\n     */\n    getStatusMessage() {\n        if (this.isError()) {\n            return this.instructor.getErrorMessage();\n        }\n        return this.responseData.statusForAjax;\n    }\n}\n\n/**\n * Stands in for an Instructor whenever an error occurs.\n * The isError() method returns true here (but false in the Instructor class).\n * In the event that a string was used to construct the Instructor\n * but the construction failed, that string can be passed in to the InstructorError constructor.\n */\nclass InstructorError {\n    constructor(message, originalString) {\n        this.message = message;\n        this.originalString = originalString;\n    }\n\n    toString() {\n        return this.originalString;\n    }\n\n    /* eslint-disable class-methods-use-this */\n    isError() {\n        return true;\n    }\n\n    /* eslint-enable class-methods-use-this */\n    getErrorMessage() {\n        return this.message;\n    }\n}\n\n/**\n * Represents an instructor.\n * Contains the name, email and institution fields.\n * Static \"constructor\" functions are used since constructors cannot be overloaded in ES6.\n */\nclass Instructor {\n    /**\n     * Takes in several instructor attributes and constructs an instructor.\n     */\n    static create(name, email, institution) {\n        const instructor = new Instructor();\n        instructor.name = name;\n        instructor.email = email;\n        instructor.institution = institution;\n        return instructor;\n    }\n\n    /**\n     * Takes in a string in either of the following formats:\n     *  NAME | EMAIL | INSTITUTION\n     *  NAME\\tEMAIL\\tINSTITUTION\n     * If the string is in the correct format, parses it and constructs an Instructor.\n     * If the format is wrong, constructs and returns a InstructorError instead.\n     */\n    static createFromString(str) {\n        const regexStringForPipeSeparator = '(?: *\\\\| *)';\n        const regexStringForTabSeparator = '\\\\t+';\n        const regexStringForSeparator = `(?:${regexStringForTabSeparator}|${regexStringForPipeSeparator})`;\n        const regexStringForFields = '([^|\\\\t]+?)';\n\n        const instructorMatchRegex = new RegExp(`^${[\n            regexStringForFields, // name\n            regexStringForSeparator,\n            regexStringForFields, // email\n            regexStringForSeparator,\n            regexStringForFields, // institution\n        ].join('')}$`);\n\n        const instructorData = str.match(instructorMatchRegex);\n        if (instructorData === null) {\n            return new InstructorError(Const.StatusMessages.INSTRUCTOR_DETAILS_LENGTH_INVALID, str);\n        }\n\n        const name = instructorData[1];\n        const email = instructorData[2];\n        const institution = instructorData[3];\n        return Instructor.create(name, email, institution);\n    }\n\n    toString() {\n        return `${this.name} | ${this.email} | ${this.institution}`;\n    }\n\n    getParamString() {\n        return $.param({\n            instructorname: this.name,\n            instructoremail: this.email,\n            instructorinstitution: this.institution,\n        });\n    }\n\n    /* eslint-disable class-methods-use-this */\n    isError() {\n        return false;\n    }\n\n    /* eslint-enable class-methods-use-this */\n    static allFromString(multipleInstructorsString) {\n        return multipleInstructorsString\n                .split('\\n')\n                .map(str => str.trim()) // remove trailing spaces, reduces whitespace-only lines to empty string\n                .filter(str => str !== '') // get rid of any blank/whitespace-only lines\n                .map(singleInstructorString => Instructor.createFromString(singleInstructorString));\n    }\n\n    static allToString(instructors) {\n        return instructors\n                .map(instructor => instructor.toString())\n                .join('\\n');\n    }\n}\n\n/**\n * Generates HTML text for a row containing instructor's information\n * and status of the action.\n *\n * @param {String} name\n * @param {String} email\n * @param {String} institution\n * @param {bool} isSuccess is a flag to show the action is successful or not.\n * The color and status of the row is affected by its value.\n * @param {String} status\n * @returns {String} a HTML row of action result table\n */\nfunction createRowForResultTable(name, email, institution, isSuccess, status) {\n    return `\n    <tr class=\"${isSuccess ? 'success' : 'danger'}\">\n        <td>${encodeHtmlString(name)}</td>\n        <td>${encodeHtmlString(email)}</td>\n        <td>${encodeHtmlString(institution)}</td>\n        <td>${isSuccess ? 'Success' : 'Fail'}</td>\n        <td>${status}</td>\n    </tr>\n    `;\n}\n\n/**\n * Disables the Add Instructor form.\n */\nfunction disableAddInstructorForm() {\n    $('.addInstructorBtn').each(function () {\n        $(this).html(\"<img src='/images/ajax-loader.gif'/>\");\n    });\n    $('.addInstructorFormControl').each(function () {\n        $(this).prop('disabled', true);\n    });\n}\n\n/**\n * Enables the Add Instructor form.\n */\nfunction enableAddInstructorForm() {\n    $('.addInstructorBtn').each(function () {\n        $(this).html('Add Instructor');\n    });\n    $('.addInstructorFormControl').each(function () {\n        $(this).prop('disabled', false);\n    });\n}\n\n/**\n * Is called as part of the AJAX call used to add instructors.\n * Updates the table that displays whether adding the instructor was successful.\n * In the event of an error, preserves the text entered into the forms so that a\n * retry can be attempted.\n * Takes in the total number of instructors and the number of instructors processed so far,\n * and updates the view to show progress.\n */\nfunction updateInstructorAddStatus(ajaxResult, numInstructors, numInstructorsProcessed) {\n    const name = ajaxResult.isError() ? '-' : ajaxResult.responseData.instructorName;\n    const email = ajaxResult.isError() ? '-' : ajaxResult.responseData.instructorEmail;\n    const institution = ajaxResult.isError() ? '-' : ajaxResult.responseData.instructorInstitution;\n    const isSuccess = !ajaxResult.isError() && !ajaxResult.isAddFailed();\n    const status = ajaxResult.getStatusMessage();\n\n    const rowText = createRowForResultTable(name, email, institution, isSuccess, status);\n    $('#addInstructorResultTable tbody').append(rowText);\n    const panelHeader = `<strong>Result (${numInstructorsProcessed}/${numInstructors})</strong>`;\n    $('#addInstructorResultPanel div.panel-heading').html(panelHeader);\n}\n\n/**\n * Takes in a list of instructor objects and an error handling function.\n * Adds the instructors one by one recursively, in the following manner:\n *  Base Case      - If there are no instructors left to add, the postProcess function (if defined)\n *                   is called on the AJAX responses. Then re-enable the instructor add form.\n *  Recursive Case - Add the first instructor, note if the addition failed and make a recursive call to\n *                   add the remaining instructors in the AJAX callback function.\n * This is done as it is the simplest solution that sidesteps race conditions and\n * does not involve busy waiting in the main thread.\n */\nfunction addInstructors(instructors, postProcess) {\n    const ajaxResults = [];\n\n    const numInstructors = instructors.length;\n    let numInstructorsProcessed = 0;\n\n    /* eslint-disable no-shadow */\n    const addInstructorsHelper = (instructors) => {\n        if (instructors.length === 0) {\n            if (postProcess) {\n                postProcess(ajaxResults);\n            }\n            enableAddInstructorForm();\n            return;\n        }\n\n        const firstInstructor = instructors[0];\n        const remainingInstructors = instructors.slice(1);\n\n        numInstructorsProcessed += 1;\n\n        if (firstInstructor.isError()) {\n            const parseErrorResult = new InstructorAjaxResult(firstInstructor, null);\n            ajaxResults.push(parseErrorResult);\n            updateInstructorAddStatus(parseErrorResult, numInstructors, numInstructorsProcessed);\n            addInstructorsHelper(remainingInstructors);\n            return;\n        }\n\n        $.ajax({\n            type: 'POST',\n            url: `/admin/adminInstructorAccountAdd?${makeCsrfTokenParam()}&${firstInstructor.getParamString()}`,\n            beforeSend: disableAddInstructorForm,\n            error() {\n                const ajaxErrorMsg = 'Cannot send Ajax Request!';\n                const ajaxErrorResult = new InstructorAjaxResult(new InstructorError(ajaxErrorMsg), null);\n                ajaxResults.push(ajaxErrorResult);\n                updateInstructorAddStatus(ajaxErrorResult, numInstructors, numInstructorsProcessed);\n                addInstructorsHelper(remainingInstructors);\n            },\n            success(data) {\n                const ajaxResult = new InstructorAjaxResult(firstInstructor, data);\n                ajaxResults.push(ajaxResult);\n                updateInstructorAddStatus(ajaxResult, numInstructors, numInstructorsProcessed);\n                addInstructorsHelper(remainingInstructors);\n            },\n        });\n    };\n    /* eslint-enable no-shadow */\n\n    addInstructorsHelper(instructors);\n}\n\nfunction addInstructorFromFirstFormByAjax() {\n    const $instructorsAddTextArea = $('#addInstructorDetailsSingleLine');\n\n    const instructors = Instructor.allFromString($instructorsAddTextArea.val());\n    const postProcess = (ajaxResults) => {\n        const failedInstructors = ajaxResults\n                .filter(ajaxResult => ajaxResult.isError() || ajaxResult.isAddFailed())\n                .map(ajaxResult => ajaxResult.instructor);\n        $instructorsAddTextArea.val(Instructor.allToString(failedInstructors));\n    };\n\n    $('#addInstructorResultPanel').show(); // show the hidden panel\n    $('#addInstructorResultTable tbody').html(''); // clear table\n    $('#addInstructorDetailsSingleLine').val(''); // clear input form\n    $('#addInstructorResultPanel div.panel-heading').html('<strong>Result</strong>'); // clear panel header\n\n    addInstructors(instructors, postProcess);\n}\n\nfunction addInstructorFromSecondFormByAjax() {\n    $('#addInstructorResultPanel').show(); // show the hidden panel\n    $('#addInstructorResultTable tbody').html(''); // clear table\n    $('#addInstructorResultPanel div.panel-heading').html('<strong>Result</strong>'); // clear panel header\n\n    const instructorToAdd = Instructor.create(\n            $('#instructorName').val(),\n            $('#instructorEmail').val(),\n            $('#instructorInstitution').val());\n\n    addInstructors([instructorToAdd]);\n}\n\n$(document).ready(() => {\n    $('#btnAddInstructorDetailsSingleLineForm').on('click', () => {\n        addInstructorFromFirstFormByAjax();\n    });\n\n    $('#btnAddInstructor').on('click', () => {\n        addInstructorFromSecondFormByAjax();\n    });\n});\n\nexport {\n    Instructor,\n    InstructorError,\n    createRowForResultTable,\n};\n","import {\n    isDate,\n    isNumber,\n} from './helper';\n\n/**\n * Returns false if the parameter is either one of null or undefined.\n * Returns true otherwise.\n *\n * @param varToCheck\n */\nfunction isDefined(varToCheck) {\n    return varToCheck !== null && varToCheck !== undefined;\n}\n\n/**\n * To get point value from a formatted string\n *\n * @param s\n *     A table cell (td tag) that contains the formatted string\n * @param ditchZero\n *     Whether 0% should be treated as lower than -90 or not\n * @returns\n */\nfunction getPointValue(s, ditchZero) {\n    let s0 = s;\n    const baseValue = 100;\n\n    if (s0.indexOf('/') !== -1) {\n        // magic expressions below as these cases will only be compared with\n        // case E +(-)X% (0 <= X <= 100)\n        if (s0.indexOf('S') !== -1) {\n            return (2 * baseValue) + 1; // Case N/S (feedback contribution not sure)\n        }\n\n        return (2 * baseValue) + 2; // Case N/A\n    }\n\n    if (s0 === '0%') { // Case 0%\n        if (ditchZero) {\n            return 0;\n        }\n        return baseValue;\n    }\n\n    s0 = s0.replace('E', '').replace('%', ''); // Case E +(-)X%\n\n    if (s0 === '') {\n        return baseValue; // Case E\n    }\n\n    return baseValue + parseFloat(s0); // Other typical cases\n}\n\n/**\n * Sorting comparison functions.\n */\nclass Comparators {\n    /**\n     * The base comparator (ascending)\n     * @returns 1 if x comes after y, -1 if x comes before y, 0 if they are the same\n     */\n    static sortBase(x, y) {\n        // Text sorting\n        if (x < y) {\n            return -1;\n        }\n        return x > y ? 1 : 0;\n    }\n\n    /**\n     * Comparator for numbers (integer, double) (ascending)\n     * @returns +ve if x > y, -ve if x < y and 0 otherwise\n     */\n    static sortNum(x, y) {\n        return x - y;\n    }\n\n    /**\n     * Comparator for date. Allows for the same format as isDate()\n     * @returns 1 if Date x is after y, 0 if same and -1 if before\n     */\n    static sortDate(x, y) {\n        const x0 = Date.parse(x);\n        const y0 = Date.parse(y);\n        if (x0 > y0) {\n            return 1;\n        }\n        return x0 < y0 ? -1 : 0;\n    }\n\n    /**\n     * Comparator to sort strings in format: E([+-]x%) | N/A | N/S | 0% with\n     * possibly a tag that surrounds it.\n     */\n    static sortByPoints(a, b) {\n        const a0 = getPointValue(a, true);\n        const b0 = getPointValue(b, true);\n        if (isNumber(a0) && isNumber(b0)) {\n            return Comparators.sortNum(a0, b0);\n        }\n        return Comparators.sortBase(a0, b0);\n    }\n\n    /**\n     * Comparator to sort strings in format: [+-]x% | N/A with possibly a tag that\n     * surrounds it.\n     */\n    static sortByDiff(a, b) {\n        const a0 = getPointValue(a, false);\n        const b0 = getPointValue(b, false);\n        if (isNumber(a0) && isNumber(b0)) {\n            return Comparators.sortNum(a0, b0);\n        }\n        return Comparators.sortBase(a0, b0);\n    }\n\n    static getDefaultComparator(columnType) {\n        let defaultComparator;\n\n        if (columnType === 1) {\n            defaultComparator = Comparators.sortNum;\n        } else if (columnType === 2) {\n            defaultComparator = Comparators.sortDate;\n        } else {\n            defaultComparator = Comparators.sortBase;\n        }\n\n        return defaultComparator;\n    }\n}\n\n/**\n * Functions that pull data out of a table cell.\n */\nclass Extractors {\n    static textExtractor($tableCell) {\n        return $tableCell.text();\n    }\n\n    static tooltipExtractor($tableCell) {\n        return $tableCell.find('span').attr('data-original-title');\n    }\n\n    static dateStampExtractor($tableCell) {\n        return $tableCell.data('dateStamp');\n    }\n\n    static getDefaultExtractor() {\n        return Extractors.textExtractor;\n    }\n}\n\nclass TableButtonHelpers {\n    /**\n     * Given a button, get the innermost table enclosing it.\n     */\n    static getEnclosingTable($button) {\n        return $($button.parents('table')[0]);\n    }\n\n    /**\n     * Given a button and an index idx,\n     * find the button's column position in the table\n     * where the columns are treated as idx-indexed.\n     */\n    static getColumnPositionOfButton($button, idx) {\n        return $button.parent().children().index($button) + idx;\n    }\n\n    /**\n     * Given a table, clear all the sort states.\n     */\n    static clearAllSortStates($table) {\n        $table.find('.icon-sort').attr('class', 'icon-sort unsorted'); // clear the icons\n        $table.find('.button-sort-ascending')\n                .removeClass('button-sort-ascending')\n                .addClass('button-sort-none');\n        $table.find('.button-sort-descending')\n                .removeClass('button-sort-descending')\n                .addClass('button-sort-none');\n    }\n\n    /**\n     * Given a button in table, set its state to sorted ascending.\n     * Clear all other button states.\n     */\n    static setButtonToSortedAscending($button) {\n        this.clearAllSortStates(this.getEnclosingTable($button));\n        $button.addClass('button-sort-ascending');\n        $button.find('.icon-sort').attr('class', 'icon-sort sorted-ascending'); // set the icon to ascending\n    }\n\n    /**\n     * Given a button in table, set its state to sorted descending.\n     * Clear all other button states.\n     */\n    static setButtonToSortedDescending($button) {\n        this.clearAllSortStates(this.getEnclosingTable($button));\n        $button.addClass('button-sort-descending');\n        $button.find('.icon-sort').attr('class', 'icon-sort sorted-descending'); // set the icon to descending\n    }\n}\n\n// http://stackoverflow.com/questions/7558182/sort-a-table-fast-by-its-first-column-with-javascript-or-jquery\n/**\n * Sorts a table based on certain column and comparator\n *\n * @param $table\n *     A jQuery object representing the table.\n * @param colIdx\n *     The column index (1-based) as key for the sort\n * @param comparatorOrNull\n *     Function to compare two elements.\n *     May be null.\n * @param extractorOrNull\n *     Function to pull out data from a table cell for comparison.\n *     May be null.\n * @param shouldSortAscending\n *     If this is true, sort in ascending order.\n *     Otherwise, sort in descending order\n */\nfunction sortTable($table, colIdx, comparatorOrNull, extractorOrNull, shouldSortAscending) {\n    let columnType = 0;\n    let store = [];\n    const $rowList = $table.find('> tbody > tr');\n\n    // Iterate through column's contents to decide which comparator to use\n    for (let i = 0; i < $rowList.length; i += 1) {\n        if ($rowList[i].cells[colIdx - 1] === undefined) {\n            continue;\n        }\n\n        const extractor = isDefined(extractorOrNull) ? extractorOrNull : Extractors.getDefaultExtractor();\n\n        // $.trim trims leading/trailing whitespaces\n        // $rowList[i].cells[colIdx - 1] is where we get the table cell from\n        const textToCompare = $.trim(extractor($($rowList[i].cells[colIdx - 1])));\n\n        // Store rows together with the innerText to compare\n        store.push([textToCompare, $rowList[i], i]);\n\n        if ((columnType === 0 || columnType === 1) && isNumber(textToCompare)) {\n            columnType = 1;\n        } else if ((columnType === 0 || columnType === 2) && isDate(textToCompare)) {\n            columnType = 2;\n        } else {\n            columnType = 3;\n        }\n    }\n\n    const comparator = isDefined(comparatorOrNull) ? comparatorOrNull : Comparators.getDefaultComparator(columnType);\n\n    store.sort((x, y) => {\n        const compareResult = shouldSortAscending ? comparator(x[0].toUpperCase(), y[0].toUpperCase())\n                : comparator(y[0].toUpperCase(), x[0].toUpperCase());\n        if (compareResult === 0) {\n            return x[2] - y[2];\n        }\n        return compareResult;\n    });\n\n    // Must rewrap because .get() does not return a jQuery wrapped DOM node\n    // and hence does not have the .children() function\n    let $tbody = $($table.get(0)).children('tbody');\n\n    if ($tbody.size < 1) {\n        $tbody = $table;\n    }\n\n    // Must push to target tbody else it will generate a new tbody for the table\n    for (let j = 0; j < store.length; j += 1) {\n        $tbody.get(0).appendChild(store[j][1]);\n    }\n\n    store = null;\n}\n\n/**\n * Sorts a table\n * @param sortButtonClicked\n *     The jQuery object representing the sort button that was clicked.\n * @param comparatorStringOrNull\n *     String representing the function to compare 2 elements.\n *     May be null.\n * @param extractorStringOrNull\n *     String representing the function to pull out data from a table cell for comparison.\n *     May be null.\n */\nfunction toggleSort($button, comparatorStringOrNull, extractorStringOrNull) {\n    const isSortedAscending = $button.hasClass('button-sort-ascending');\n\n    const $table = TableButtonHelpers.getEnclosingTable($button);\n    const colIdx = TableButtonHelpers.getColumnPositionOfButton($button, 1);\n    const comparatorOrNull = isDefined(comparatorStringOrNull) ? Comparators[comparatorStringOrNull] : null;\n    const extractorOrNull = isDefined(extractorStringOrNull) ? Extractors[extractorStringOrNull] : null;\n    const shouldSortAscending = !isSortedAscending;\n\n    sortTable($table, colIdx, comparatorOrNull, extractorOrNull, shouldSortAscending);\n\n    // update the button and icon states\n    if (shouldSortAscending) {\n        TableButtonHelpers.setButtonToSortedAscending($button);\n    } else {\n        TableButtonHelpers.setButtonToSortedDescending($button);\n    }\n}\n\nexport {\n    Comparators, // for test\n    getPointValue, // for test\n    toggleSort,\n};\n","/**\n* Encodes a string for displaying in a HTML document.\n* Uses an in-memory element created with jQuery.\n* @param the string to be encoded\n*/\nfunction encodeHtmlString(stringToEncode) {\n    return $('<div>').text(stringToEncode).html();\n}\n\nfunction escapeRegExp(string) {\n    return string.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n}\n\n/**\n * Helper function to replace all occurrences of a sub-string in a string.\n */\nfunction replaceAll(string, find, replace) {\n    return string.replace(new RegExp(escapeRegExp(find), 'g'), replace);\n}\n\n/**\n * Sanitizes special characters such as ' and \\ to \\' and \\\\ respectively\n */\nfunction sanitizeForJs(rawString) {\n    let string = rawString;\n    string = replaceAll(string, '\\\\', '\\\\\\\\');\n    string = replaceAll(string, '\\'', '\\\\\\'');\n    return string;\n}\n\nexport {\n    encodeHtmlString,\n    sanitizeForJs,\n};\n","import {\n    ParamsNames,\n} from './const';\n\n/**\n * Returns the value of a cookie given its name.\n * Returns null if the cookie is not set.\n */\nfunction getCookie(cookieNameToFind) {\n    const cookies = document.cookie.split('; ').map(s => s.split('='));\n\n    for (let i = 0; i < cookies.length; i += 1) {\n        const cookieName = cookies[i][0];\n        const cookieValue = cookies[i][1];\n\n        // the cookie was found in the ith iteration\n        if (cookieName === cookieNameToFind) {\n            return cookieValue;\n        }\n    }\n\n    // the cookie was not found\n    return null;\n}\n\nfunction makeCsrfTokenParam() {\n    return `${ParamsNames.SESSION_TOKEN}=${getCookie(ParamsNames.SESSION_TOKEN)}`;\n}\n\nfunction updateCsrfTokenInInputFields() {\n    const updatedToken = getCookie(ParamsNames.SESSION_TOKEN);\n    if (!updatedToken) {\n        return;\n    }\n    $(`input[name=${ParamsNames.SESSION_TOKEN}]`).val(updatedToken);\n}\n\nexport {\n    makeCsrfTokenParam,\n    updateCsrfTokenInInputFields,\n};\n","import {\n    updateCsrfTokenInInputFields,\n} from './crypto';\n\nimport {\n    toggleSort,\n} from './sortBy';\n\n/**\n * Polyfills the String.prototype.includes function finalized in ES6 for browsers that do not yet support the function.\n */\n/* eslint-disable no-extend-native */ // necessary for polyfills\nif (!String.prototype.includes) {\n    String.prototype.includes = function (search, startParam) {\n        const start = typeof startParam === 'number' ? startParam : 0;\n\n        if (start + search.length > this.length) {\n            return false;\n        }\n        return this.indexOf(search, start) !== -1;\n    };\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Checks if the current device is touch based device\n * Reference: https://github.com/Modernizr/Modernizr/blob/master/feature-detects/touchevents.js\n */\nfunction isTouchDevice() {\n    return ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch);\n}\n\n$(document).on('click', '.toggle-sort', (e) => {\n    const $button = $(e.currentTarget); // the button clicked on\n\n    const comparatorStringOrNull = $button.data('toggle-sort-comparator');\n    const extractorStringOrNull = $button.data('toggle-sort-extractor');\n\n    toggleSort($button, comparatorStringOrNull, extractorStringOrNull);\n});\n\n$(document).on('ajaxComplete ready', () => {\n    /**\n     * Initializing then disabling is better than simply\n     * not initializing for mobile due to some tooltips-specific\n     * code that throws errors.\n    */\n    const $tooltips = $('[data-toggle=\"tooltip\"]');\n    $tooltips.tooltip({\n        html: true,\n        container: 'body',\n    });\n    if (isTouchDevice()) {\n        $tooltips.tooltip('disable');\n    }\n\n    /**\n     * Underlines all span elements with tool-tips except for\n     * the ones without a text value. This is to exclude elements\n     * such as 'icons' from underlining.\n    */\n    $('span[data-toggle=\"tooltip\"]').each(function () {\n        const textValue = $(this).text().replace(/\\s/g, '');\n        if (textValue) {\n            $(this).addClass('tool-tip-decorate');\n        }\n    });\n\n    /**\n     * Updates the token in input fields with the latest one retrieved from the cookie.\n     * The token becomes outdated once the session expires. The cookie might be updated\n     * with the new token and session during page loads from other browser windows.\n     * The latest value should be retrieved from the cookie before form submission.\n     */\n    $('form').submit(updateCsrfTokenInInputFields);\n});\n"],"sourceRoot":""}